title,timesCited,year
A Flexible Infrastructure for Multilevel Language Engineering,126,2009
The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering,,2009
Grammar Recovery from Parse Trees and Metrics-Guided Grammar Refactoring,21,2009
Engineering of Framework-Specific Modeling Languages,70,2009
A Model-Based Approach to Families of Embedded Domain-Specific Languages,53,2009
FAML: A Generic Metamodel for MAS Development,163,2009
"Software Dependencies, Work Dependencies, and Their Impact on Failures",259,2009
Combining Perceptions and Prescriptions in Requirements Engineering Process Assessment: An Industrial Case Study,45,2009
Examining the Potentially Confounding Effect of Class Size on the Associations between Object-Oriented Metrics and Change-Proneness,100,2009
Impact of Budget and Schedule Pressure on Software Development Cycle Time and Effort,95,2009
An Integrative Economic Optimization Approach to Systems Development Risk Management,13,2009
Scalable and Effective Test Generation for Role-Based Access Control Systems,42,2009
Specifying and Validating Data-Aware Temporal Web Service Properties,50,2009
A Systematic Survey of Program Comprehension through Dynamic Analysis,,2009
Using Stochastic State Classes in Quantitative Evaluation of Dense-Time Reactive Systems,67,2009
Visualizing Co-Change Information with the Evolution Radar,95,2009
Recomputing Coverage Information to Assist Regression Testing,63,2009
How Software Developers Use Tagging to Support Reminding and Refinding,63,2009
Common Trends in Software Fault and Failure Data,131,2009
A Data Mining Approach for Detecting Higher-Level Clones in Software,129,2009
An Efficient and Scalable Approach to Correct Class Model Refinement,11,2009
The Impact of Design and Code Reviews on Software Quality: An Empirical Study Based on PSP Data,119,2009
Maturing Software Engineering Knowledge through Classifications: A Case Study on Unit Testing Techniques,37,2009
Power-Law Distributions of Component Size in General Software Systems,34,2009
Software Architecture Reconstruction: A Process-Oriented Taxonomy,,2009
Automatic Extraction of Heap Reference Properties in Object-Oriented Programs,6,2009
CHARMY: A Framework for Designing and Verifying Architectural Specifications,73,2009
Identification of Move Method Refactoring Opportunities,256,2009
The Impact of Lessons-Learned Sessions on Effort Estimation and Uncertainty Assessments,83,2009
Synthesis of Partial Behavior Models from Properties and Scenarios,126,2009
Variability and Reproducibility in Software Engineering: A Study of Four Companies that Developed the Same System,78,2009
What Types of Defects Are Really Discovered in Code Reviews?,134,2009
Enhanced Modeling and Solution of Layered Queueing Networks,193,2009
CoMoM: Efficient Class-Oriented Evaluation of Multiclass Performance Models,,2009
State-Density Functions over DBM Domains in the Analysis of Non-Markovian Models,40,2009
Automated Trace Analysis of Discrete-Event System Models,42,2009
Model Checking Probabilistic and Stochastic Extensions of the π-Calculus,,2009
Model Checking Timed and Stochastic Properties with CSL^{TA},98,2009
Counterexample Generation in Probabilistic Model Checking,115,2009
Linear and Branching System Metrics,77,2009
Compositional Dependability Evaluation for STATEMATE,49,2009
An Investigation into the Functional Form of the Size-Defect Relationship for Software Modules,115,2009
Atomicity Analysis of Service Composition across Organizations,40,2009
Carving and Replaying Differential Unit Test Cases from System Test Cases,47,2009
Compositional Control of IP Media,26,2009
Engineering Privacy,352,2009
Linking Model-Driven Development and Software Architecture: A Case Study,69,2009
Mutation Operators for Spreadsheets,73,2009
Optimized Resource Allocation for Software Release Planning,58,2009
Predicting Project Velocity in XP Using a Learning Dynamic Bayesian Network Model,69,2009
A Systematic Review of the Application and Empirical Investigation of Search-Based Test Case Generation,,2010
Efficient Software Verification: Statistical Testing Using Automated Search,59,2010
A Genetic Algorithm-Based Stress Test Requirements Generator Tool and Its Empirical Evaluation,25,2010
"Interactive, Evolutionary Search in Upstream Object-Oriented Class Design",85,2010
Solving the Class Responsibility Assignment Problem in Object-Oriented Analysis with Multi-Objective Genetic Algorithms,107,2010
ASCENT: An Algorithmic Technique for Designing Hardware and Software in Tandem,17,2010
Evolutionary Optimization of Software Quality Modeling with Multiple Repositories,114,2010
Using Genetic Search for Reverse Engineering of Parametric Behavior Models for Performance Prediction,70,2010
The Effects of Time Constraints on Test Case Prioritization: A Series of Controlled Experiments,136,2010
What Makes a Good Bug Report?,446,2010
Context-Aware Adaptive Applications: Fault Patterns and Their Automated Identification,93,2010
A Comparison of Six UML-Based Languages for Software Process Modeling,108,2010
How Reliable Are Systematic Reviews in Empirical Software Engineering?,83,2010
Reverse Engineering Input Syntactic Structure from Program Execution and Its Applications,,2010
Stressing Search with Scenarios for Flexible Solutions to Real-Time Task Allocation Problems,23,2010
Time and Probability-Based Information Flow Analysis,15,2010
An Experience in Testing the Security of Real-World Electronic Voting Systems,52,2010
Finding Bugs in Web Applications Using Dynamic Test Generation and Explicit-State Model Checking,164,2010
Proofs from Tests,179,2010
Aspect-Oriented Race Detection in Java,35,2010
The Probabilistic Program Dependence Graph and Its Application to Fault Diagnosis,181,2010
Learning a Metric for Code Readability,187,2010
Assessing Software Service Quality and Trustworthiness at Selection Time,146,2010
Evaluation of Accuracy in Design Pattern Occurrence Detection,62,2010
Incremental Test Generation for Software Product Lines,91,2010
Software Reliability and Testing Time Allocation: An Architecture-Based Approach,87,2010
Verification and Trade-Off Analysis of Security Properties in UML System Models,32,2010
Vulnerability Discovery with Attack Injection,52,2010
Discovering Services during Service-Based System Design Using UML,49,2010
Learning Communicating Automata from MSCs,25,2010
On Event-Based Middleware for Location-Aware Mobile Applications,34,2010
Program Behavior Discovery and Verification: A Graph Grammar Approach,34,2010
Understanding Exception Handling: Viewpoints of Novices and Experts,56,2010
Exception Handling Patterns for Process Modeling,131,2010
A Framework for Programming Robust Context-Aware Applications,58,2010
Exception Handling for Repair in Service-Based Processes,134,2010
A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems,124,2010
"A Theoretical and Empirical Study of Search-Based Testing: Local, Global, and Hybrid Search",338,2010
Bayesian Approaches to Matching Architectural Diagrams,12,2010
Engineering a Sound Assertion Semantics for the Verifying Compiler,13,2010
Service-Level Agreements for Electronic Services,69,2010
Better Debugging via Output Tracing and Callstack-Sensitive Slicing,42,2010
DECOR: A Method for the Specification and Detection of Code and Design Smells,557,2010
Directed Explicit State-Space Search in the Generation of Counterexamples for Stochastic Model Checking,61,2010
Effects of Personality on Pair Programming,141,2010
Generating Event Sequence-Based Test Cases Using GUI Runtime State Feedback,126,2010
How Developers' Experience and Ability Influence Web Application Comprehension Tasks Supported by UML Stereotypes: A Series of Four Experiments,79,2010
Providing Architectural Languages and Tools Interoperability through Model Transformation Technologies,105,2010
A Dynamic Slicing Technique for UML Architectural Models,42,2011
"Evaluating Complexity, Code Churn, and Developer Activity Metrics as Indicators of Software Vulnerabilities",292,2011
Measuring the Discriminative Power of Object-Oriented Class Cohesion Metrics,65,2011
Preventing Temporal Violations in Scientific Workflows: Where and How,58,2011
Putting Preemptive Time Petri Nets to Work in a V-Model SW Life Cycle,17,2011
Swarm Verification Techniques,78,2011
Tuning Temporal Features within the Stochastic π-Calculus,,2011
On the Distribution of Bugs in the Eclipse System,47,2011
A Classification Framework for Software Component Models,276,2011
A Comparison of Tabular Expression-Based Testing Strategies,10,2011
A Risk Management Methodology for Project Risk Dependencies,86,2011
An Analysis and Survey of the Development of Mutation Testing,1186,2011
Dynamic Software Updating Using a Relaxed Consistency Model,54,2011
The Impact of Irrelevant and Misleading Information on Software Development Effort Estimates: A Randomized Controlled Field Experiment,52,2011
Toward a Formalism for Conservative Claims about the Dependability of Software-Based Systems,28,2011
WAM—The Weighted Average Method for Predicting the Performance of Systems with Bursts of Customer Sessions,,2011
A Controlled Experiment for Evaluating the Impact of Coupling on the Maintainability of Service-Oriented Software,53,2011
A Flowchart Language for Quantum Programming,18,2011
Dynamic Analysis for Diagnosing Integration Faults,92,2011
Empirical Studies of Pair Programming for CS/SE Teaching in Higher Education: A Systematic Literature Review,,2011
FlowTalk: Language Support for Long-Latency Operations in Embedded Devices,4,2011
Frameworks Generate Domain-Specific Languages: A Case Study in the Multimedia Domain,19,2011
GUI Interaction Testing: Incorporating Event Context,187,2011
Zebu: A Language-Based Approach for Network Protocol Message Processing,24,2011
Does Socio-Technical Congruence Have an Effect on Software Build Success? A Study of Coordination in a Software Project,102,2011
"The Awareness Network, To Whom Should I Display My Actions? And, Whose Actions Should I Monitor?",96,2011
A Controlled Experiment for Program Comprehension through Trace Visualization,119,2011
A General Software Defect-Proneness Prediction Framework,273,2011
An Attack Surface Metric,553,2011
Dynamic QoS Management and Optimization in Service-Based Systems,333,2011
Efficient Consistency Measurement Based on Behavioral Profiles of Process Models,248,2011
Which Crashes Should I Fix First?: Predicting Top Crashes at an Early Stage to Prioritize Debugging Efforts,69,2011
A Comparative Study of Software Model Checkers as Unit Testing Tools: An Industrial Case Study,36,2011
"Assessing, Comparing, and Combining State Machine-Based Testing and Structural Testing: A Series of Experiments",72,2011
Automatically Detecting and Tracking Inconsistencies in Software Design Models,113,2011
Improving Source Code Lexicon via Traceability and Information Retrieval,61,2011
Loupe: Verifying Publish-Subscribe Architectures with a Magnifying Lens,15,2011
Self-Supervising BPEL Processes,137,2011
Software Module Clustering as a Multi-Objective Search Problem,269,2011
Systematic review and aggregation of empirical studies on elicitation techniques,,2011
Bristlecone: Language Support for Robust Software Applications,10,2011
Deriving a Slicing Algorithm via FermaT Transformations,16,2011
Developing a Single Model and Test Prioritization Strategies for Event-Driven Software,138,2011
From UML to Petri Nets: The PCM-Based Methodology,60,2011
Genetic Algorithms for Randomized Unit Testing,87,2011
Plat_Forms: A Web Development Platform Comparison by an Exploratory Experiment Searching for Emergent Platform Properties,28,2011
"Semi-Proving: An Integrated Method for Program Proving, Testing, and Debugging",59,2011
Verifying the Evolution of Probability Distributions Governed by a DTMC,11,2011
A Comprehensive Approach to Naming and Accessibility in Refactoring Java Programs,24,2012
A Static Approach to Prioritizing JUnit Test Cases,104,2012
A Systematic Literature Review on Fault Prediction Performance in Software Engineering,,2012
Analyzing the Effect of Gain Time on Soft-Task Scheduling Policies in Real-Time Systems,6,2012
Architecture-Based Reliability Prediction with the Palladio Component Model,104,2012
Evaluating Dynamic Software Update Safety Using Systematic Testing,41,2012
Matching and Merging of Variant Feature Specifications,32,2012
Modeling Product Line Software Assets Using Domain-Specific Kits,14,2012
On the Value of Ensemble Effort Estimation,187,2012
Programmer-Friendly Refactoring Errors,17,2012
The Link between Dependency and Cochange: Empirical Evidence,25,2012
Toward a Tool-Based Development Methodology for Pervasive Computing Applications,59,2012
Two Studies of Framework-Usage Templates Extracted from Dynamic Traces,18,2012
A Practical Approach to Size Estimation of Embedded Software Components,12,2012
Clone Management for Evolving Software,102,2012
Coping with Existing Systems in Information Systems Development,3,2012
Dealing with Burstiness in Multi-Tier Applications: Models and Their Parameterization,48,2012
Structural Complexity and Programmer Team Strategy: An Experimental Test,17,2012
Exemplar: A Source Code Search Engine for Finding Highly Relevant Applications,99,2012
Formal Analysis of the Probability of Interaction Fault Detection Using Random Testing,50,2012
Formal Specification-Based Inspection for Verification of Programs,31,2012
Mining Crosscutting Concerns through Random Walks,13,2012
MOSES: A Framework for QoS Driven Runtime Adaptation of Service-Oriented Systems,171,2012
Precise Calling Context Encoding,60,2012
"Reasoning about the Reliability of Diverse Two-Channel Systems in Which One Channel Is ""Possibly Perfect""",39,2012
Solving the Large Scale Next Release Problem with a Backbone-Based Multilevel Algorithm,72,2012
What Do We Know about the Effectiveness of Software Design Patterns?,95,2012
A Semi-Automatic Approach for Extracting Software Product Lines,32,2012
Adaptation of Service Protocols Using Process Algebra and On-the-Fly Reduction Techniques,,2012
BURN: Enabling Workload Burstiness in Customized Service Benchmarks,14,2012
"DESSERT: a DividE-and-conquer methodology for identifying categorieS, choiceS, and choicE Relations for Test case generation",16,2012
Does Software Process Improvement Reduce the Severity of Defects? A Longitudinal Field Study,52,2012
Domain-Specific Service Selection for Composite Services,42,2012
Finding Atomicity-Violation Bugs through Unserializable Interleaving Testing,22,2012
Fluid Rewards for a Stochastic Process Algebra,30,2012
Mutable Protection Domains: Adapting System Fault Isolation for Reliability and Efficiency,10,2012
Palantir: Early Detection of Development Conflicts Arising from Parallel Code Changes,89,2012
Pert: The Application-Aware Tailoring of Java Object Persistence,4,2012
Quality Requirements in Industrial Practice—An Extended Interview Study at Eleven Companies,,2012
Size-Constrained Regression Test Case Selection Using Multicriteria Optimization,64,2012
SMT-Based Bounded Model Checking for Embedded ANSI-C Software,250,2012
Tools for the Rapid Prototyping of Provably Correct Ambient Intelligence Applications,26,2012
A Theoretical and Empirical Analysis of the Role of Test Sequence Length in Software Testing for Structural Coverage,34,2012
An Autonomous Engine for Services Configuration and Deployment,16,2012
Comparing Semi-Automated Clustering Methods for Persona Development,16,2012
Comparing the Defect Reduction Benefits of Code Inspection and Test-Driven Development,30,2012
DEC: Service Demand Estimation with Confidence,33,2012
Exploiting Dynamic Information in IDEs Improves Speed and Correctness of Software Maintenance Tasks,37,2012
Model Checking Semantically Annotated Services,40,2012
On the Evolution of Services,115,2012
Oracles for Distributed Testing,33,2012
Pointcut Rejuvenation: Recovering Pointcut Expressions in Evolving Aspect-Oriented Software,26,2012
QoS Assurance for Dynamic Reconfiguration of Component-Based Software Systems,32,2012
Software Development Estimation Biases: The Role of Interdependence,36,2012
Specifying Dynamic Analyses by Extending Language Semantics,1,2012
StakeRare: Using Social Networks and Collaborative Filtering for Large-Scale Requirements Elicitation,147,2012
Automatically Generating Test Cases for Specification Mining,61,2012
Random Testing: Theoretical Results and Practical Implications,134,2012
Mutation-Driven Generation of Unit Tests and Oracles,330,2012
Automatic Detection of Unsafe Dynamic Component Loadings,11,2012
Fault Localization for Dynamic Web Applications,42,2012
A Model of Data Warehousing Process Maturity,67,2012
A UML/MARTE Model Analysis Method for Uncovering Scenarios Leading to Starvation and Deadlocks in Concurrent Systems,30,2012
Data Mining Techniques for Software Effort Estimation: A Comparative Study,192,2012
Evaluation and Measurement of Software Process Improvement—A Systematic Literature Review,,2012
Exploiting the Essential Assumptions of Analogy-Based Effort Estimation,165,2012
Forecasting Risk Impact on ERP Maintenance with Augmented Fuzzy Cognitive Maps,87,2012
"Input Domain Reduction through Irrelevant Variable Removal and Its Effect on Local, Global, and Hybrid Search-Based Structural Test Data Generation",66,2012
PerLa: A Language and Middleware Architecture for Data Management and Integration in Pervasive Information Systems,64,2012
"How We Refactor, and How We Know It",493,2012
Work Item Tagging: Communicating Concerns in Collaborative Software Development,52,2012
Invariant-Based Automatic Testing of Modern Web Applications,133,2012
GenProg: A Generic Method for Automatic Software Repair,512,2012
Aspectizing Java Access Control,24,2012
Aspect-Oriented Refactoring of Legacy Applications: An Evaluation,37,2012
Automated Abstractions for Contract Validation,34,2012
Defining and Evaluating a Measure of Open Source Project Survivability,37,2012
Measuring Code Quality to Improve Specification Mining,39,2012
Reducing Unauthorized Modification of Digital Objects,8,2012
Scalable Differential Analysis of Process Algebra Models,120,2012
Schedule of Bad Smell Detection and Resolution: A New Way to Save Effort,95,2012
A Study of Variability Models and Languages in the Systems Software Domain,107,2013
"Conservative Bounds for the pfd of a 1-out-of-2 Software-Based System Based on an Assessor's Subjective Probability of ""Not Worse Than Independence""",7,2013
"Identification, Impact, and Refactoring of Smells in Pipe-Like Web Mashups",19,2013
Identifying Code of Individual Features in Client-Side Web Applications,28,2013
Learning Project Management Decisions: A Case Study with Case-Based Reasoning versus Data Farming,6,2013
"Proactive Self-Adaptation for Improving the Reliability of Mission-Critical, Embedded, and Mobile Software",17,2013
Supporting Domain Analysis through Mining and Recommending Features from Online Product Listings,78,2013
"Task Environment Complexity, Global Team Dispersion, Process Capabilities, and Coordination in Software Development",29,2013
A Learning-Based Framework for Engineering Feature-Oriented Self-Adaptive Software Systems,71,2013
A Taxonomy and Mapping of Computer-Based Critiquing Tools,,2013
"Conservative Reasoning about the Probability of Failure on Demand of a 1-out-of-2 Software-Based System in Which One Channel Is ""Possibly Perfect""",6,2013
Determining the Cause of a Design Model Inconsistency,23,2013
Equality to Equals and Unequals: A Revisit of the Equivalence and Nonequivalence Criteria in Class-Level Testing of Object-Oriented Software,9,2013
Optimizing Ordered Throughput Using Autonomic Cloud Bursting Schedulers,26,2013
Usability through Software Design,58,2013
Where Should We Fix This Bug? A Two-Phase Recommendation Model,100,2013
A Uniform Representation of Hybrid Criteria for Regression Testing,41,2013
Assessing the Cost Effectiveness of Fault Prediction in Acceptance Testing,47,2013
Early Detection of Collaboration Conflicts and Risks,61,2013
Generating Test Data from OCL Constraints with Search Techniques,94,2013
Monitoring Data Usage in Distributed Systems,19,2013
The Impact of Classifier Configuration and Classifier Combination on Bug Localization,66,2013
Whitening SOA Testing via Event Exposure,30,2013
Capsule-Based User Interface Modeling for Large-Scale Applications,7,2013
Data Quality: Some Comments on the NASA Software Defect Datasets,219,2013
Generating Test Cases for Real-Time Systems Based on Symbolic Models,20,2013
Model-Based Test Oracle Generation for Automated Unit Testing of Agent Systems,53,2013
OBEY: Optimal Batched Refactoring Plan Execution for Class Responsibility Redistribution,6,2013
Patterns of Knowledge in API Reference Documentation,82,2013
TACO: Efficient SAT-Based Bounded Verification Using Symmetry Breaking and Tight Bounds,39,2013
Verifying Protocol Conformance Using Software Model Checking for the Model-Driven Development of Embedded Systems,8,2013
Active learning and effort estimation: Finding the essential content of software effort estimation data,55,2013
Balancing Privacy and Utility in Cross-Company Defect Prediction,69,2013
Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking,164,2013
MADMatch: Many-to-Many Approximate Diagram Matching for Design Comparison,23,2013
Monitor-Based Instant Software Refactoring,35,2013
Name-Based Analysis of Equally Typed Method Arguments,5,2013
Quantifying the Effect of Code Smells on Maintenance Effort,211,2013
Session Reliability of Web Systems under Heavy-Tailed Workloads: An Approach Based on Design and Analysis of Experiments,10,2013
Software Reliability Modeling with Software Metrics Data via Gaussian Processes,13,2013
Amorphous Slicing of Extended Finite State Machines,24,2013
EDZL Schedulability Analysis in Real-Time Multicore Scheduling,3,2013
Embedding Polychrony into Synchrony,14,2013
"Pair Programming and Software Defects--A Large, Industrial Case Study",63,2013
Proactive and Reactive Runtime Service Discovery: A Framework and Its Evaluation,34,2013
Synthesizing Modal Transition Systems from Triggered Scenarios,19,2013
Trends in the Quality of Human-Centric Software Engineering Experiments--A Quasi-Experiment,18,2013
Verifying Linearizability via Optimized Refinement Checking,24,2013
A fluid model for layered queueing networks,33,2013
A large-scale empirical study of just-in-time quality assurance,191,2013
Abstracting runtime heaps for program understanding,27,2013
An Empirical Evaluation of Mutation Testing for Improving the Test Quality of Safety-Critical Software,47,2013
Event Logs for the Analysis of Software Failures: A Rule-Based Approach,48,2013
Local versus Global Lessons for Defect Prediction and Effort Estimation,160,2013
The Effects of Test-Driven Development on External Quality and Productivity: A Meta-Analysis,,2013
Using Timed Automata for Modeling Distributed Systems with Clocks: Challenges and Solutions,17,2013
What Industry Needs from Architectural Languages: A Survey,224,2013
A decentralized self-adaptation mechanism for service-based applications in the cloud,89,2013
Automated API Property Inference Techniques,130,2013
Compositional Verification for Hierarchical Scheduling of Real-Time Systems,33,2013
Software Architecture Optimization Methods: A Systematic Literature Review,,2013
Test Case-Aware Combinatorial Interaction Testing,24,2013
The Role of the Tester's Knowledge in Exploratory Software Testing,69,2013
Trustrace: Mining Software Repositories to Improve the Accuracy of Requirement Traceability Links,74,2013
A Machine Learning Approach to Software Requirements Prioritization,92,2013
A Second Replicated Quantitative Analysis of Fault Distributions in Complex Software Systems,38,2013
Coverage Estimation in Model Checking with Bitstate Hashing,4,2013
Generating Domain-Specific Visual Language Tools from Abstract Visual Specifications,31,2013
Locating Need-to-Externalize Constant Strings for Software Internationalization with Generalized String-Taint Analysis,5,2013
Ranking and Clustering Software Cost Estimation Models through a Multiple Comparisons Algorithm,109,2013
Reducing Features to Improve Code Change-Based Bug Prediction,154,2013
Validating Second-Order Mutation at System Level,28,2013
A Quantitative Approach to Input Generation in Real-Time Testing of Stochastic Systems,5,2013
Alloy Meets the Algebra of Programming: A Case Study,12,2013
Assessing the Effectiveness of Sequence Diagrams in the Comprehension of Functional Requirements: Results from a Family of Five Experiments,54,2013
Coordination Breakdowns and Their Impact on Development Productivity and Software Failures,106,2013
Elaborating Requirements Using Model Checking and Inductive Learning,27,2013
"Resource Management for Complex, Dynamic Environments",28,2013
Self-Management of Adaptable Component-Based Applications,33,2013
Self-Organizing Roles on Agile Software Development Teams,158,2013
Automated Behavioral Testing of Refactoring Engines,,2013
Centroidal Voronoi Tessellations- A New Approach to Random Testing,50,2013
"Class Schema Evolution for Persistent Object-Oriented Software: Model, Empirical Study, and Automated Support",9,2013
"How Programmers Debug, Revisited: An Information Foraging Theory Perspective",119,2013
Integer Linear Programming-Based Property Checking for Asynchronous Reactive Systems,5,2013
Toward Comprehensible Software Fault Prediction Models Using Bayesian Network Classifiers,139,2013
Using Dependency Structures for Prioritization of Functional Test Suites,41,2013
Whole Test Suite Generation,328,2013
Ant Colony Optimization for Software Project Scheduling and Staffing with an Event-Based Scheduler,139,2013
Empirical Principles and an Industrial Case Study in Retrieving Equivalent Requirements via Natural Language Processing Techniques,80,2013
Identifying and Summarizing Systematic Code Changes via Rule Inference,53,2013
Language-Independent and Automated Software Composition: The FeatureHouse Experience,103,2013
On Fault Representativeness of Software Fault Injection,150,2013
Performance Specification and Evaluation with Unified Stochastic Probes and Fluid Analysis,32,2013
Systematic Elaboration of Scalability Requirements through Goal-Obstacle Analysis,30,2013
An Empirical Methodology to Evaluate Vulnerability Discovery Models,31,2014
Construction and Validation of an Instrument for Measuring Programming Skill,26,2014
Input-Sensitive Profiling,15,2014
Making CEGAR More Efficient in Software Model Checking,17,2014
Model-Transformation Design Patterns,48,2014
A Component Model for Model Transformations,45,2014
Keeping the Development Environment Up to Date—A Study of the Situated Practices of Appropriating the Eclipse IDE,,2014
Rate-Based Queueing Simulation Model of Open Source Software Debugging Activities,11,2014
Test Code Quality and Its Relation to Issue Handling Performance,55,2014
Using Traceability Links to Recommend Adaptive Changes for Documentation Evolution,14,2014
NLP-KAOS for Systems Goal Elicitation: Smart Metering System Case Study,23,2014
"On the Accuracy, Efficiency, and Reusability of Automated Test Oracles for Android Devices",40,2014
On the Effectiveness of Contracts as Test Oracles in the Detection and Diagnosis of Functional Faults in Concurrent Object-Oriented Software,9,2014
Predicting Vulnerable Software Components via Text Mining,122,2014
Requirements Elicitation and Specification Using the Agent Paradigm: The Case Study of an Aircraft Turnaround Simulator,37,2014
Supporting the Combined Selection of Model-Based Testing Techniques,14,2014
A Cooperative Parallel Search-Based Software Engineering Approach for Code-Smells Detection,45,2014
"A General Testability Theory: Classes, Properties, Complexity, and Testing Reductions",20,2014
A Scalable Approach to Exact Model and Commonality Counting for Extended Feature Models,9,2014
GreenDroid: Automated Diagnosis of Energy Inefficiency for Smartphone Applications,76,2014
An Empirical Analysis of Business Process Execution Language Usage,20,2014
Managing Technical Debt in Enterprise Software Packages,24,2014
Predicting Consistency-Maintenance Requirement of Code Clonesat Copy-and-Paste Time,8,2014
Specification and Verification of Normative Texts Using C-O Diagrams,18,2014
Supporting Process Model Validation through Natural Language Generation,70,2014
An Empirical Study of RefactoringChallenges and Benefits at Microsoft,,2014
Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines,133,2014
Methodbook: Recommending Move Method Refactorings via Relational Topic Models,95,2014
SymbexNet: Testing Network Protocol Implementations with Symbolic Execution and Rule-Based Specifications,25,2014
Symbolic Crosschecking of Data-Parallel Floating-Point Code,21,2014
Bayesian Networks For Evidence-Based Decision-Making in Software Engineering,39,2014
Dealing with Traceability in the MDDof Model Transformations,17,2014
GEA: A Goal-Driven Approach toDiscovering Early Aspects,7,2014
Researcher Bias: The Use of Machine Learning in Software Defect Prediction,184,2014
Automated Fixing of Programs with Contracts,87,2014
Conservation of Information: Software’sHidden Clockwork?,,2014
Formulating Cost-Effective Monitoring Strategies for Service-Based Systems,22,2014
Modular Software Model Checking for Distributed Systems,26,2014
REPENT: Analyzing the Nature of Identifier Renamings,37,2014
A Model-Driven Methodology for Developing Secure Data-Management Applications,17,2014
Analyzing Critical Decision-Based Processes,8,2014
Automatic Summarization of Bug Reports,76,2014
Effects of Developer Experience on Learning and Applying Unit Test-Driven Development,21,2014
On the Asymptotic Behavior of Adaptive Testing Strategy for Software Reliability Assessment,23,2014
Synthesizing Multithreaded Code from Real-Time Object-Oriented Models via Schedulability-Aware Thread Derivation,6,2014
An Observe-Model-Exercise* Paradigm to Test Event-Driven Systems with Undetermined Input Spaces,35,2014
Governing Software Process Improvementsin Globally Distributed Product Development,25,2014
iTree: Efficiently Discovering High-Coverage Configurations Using Interaction Trees,39,2014
You Are the Only Possible Oracle: Effective Test Selection for End Users of Interactive Machine Learning Systems,22,2014
Detecting Memory Leaks Statically with Full-Sparse Value-Flow Analysis,34,2014
GossipKit: A Unified ComponentFramework for Gossip,11,2014
Learning Assumptions for CompositionalVerification of Timed Systems,18,2014
Modeling Human-in-the-Loop Security Analysis and Decision-Making Processes,7,2014
Multi-Objective Quality-Driven Service Selection—A Fully Polynomial Time Approximation Scheme,,2014
Quality-Aware Service Selection for Service-Based Systems Based on Iterative Multi-Attribute Combinatorial Auction,71,2014
Signing Off: The State of the Journal,,2014
How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?,94,2014
Overcoming the Equivalent Mutant Problem: A Systematic Literature Review and a Comparative Experiment of Second Order Mutation,,2014
Reducing Masking Effects in CombinatorialInteraction Testing: A Feedback DrivenAdaptive Approach,24,2014
Variability Mining: Consistent Semi-automatic Detection of Product-Line Features,63,2014
Improved Evolutionary Algorithm Design for the Project Scheduling Problem Based on Runtime Analysis,36,2014
Mining Workflow Models from Web Applications,7,2015
Round-Up: Runtime Verification of Quasi Linearizability for Concurrent Data Structures,,2015
An Ontology-Based Product Architecture Derivation Approach,10,2015
Exploring the Relationship between Software Process Adaptive Capability and Organisational Performance,29,2015
Software Plagiarism Detection with Birthmarks Based on Dynamic Key Instruction Sequences,29,2015
An Eye-Tracking Study of Java Programmers and Application to Source Code Summarization,20,2015
Assessing the Refactorability of Software Clones,37,2015
A Survey on Load Testing of Large-Scale Software Systems,,2015
Automated Oracle Data Selection Support,16,2015
On the Composability of Design Patterns,10,2015
Automated Checking of Conformance to Requirements Templates Using Natural Language Processing,64,2015
Facilitating Coordination between Software Developers: A Study and Techniques for Timely and Efficient Recommendations,9,2015
GALE: Geometric Active Learning for Search-Based Software Engineering,32,2015
"Inferring Loop Invariants by Mutation, Dynamic Analysis, and Static Checking",12,2015
Cina: Suppressing the Detection of Unstable Context Inconsistency,7,2015
COVERT: Compositional Analysis of Android Inter-App Permission Leakage,81,2015
Identifying Renaming Opportunities by Expanding Conducted Rename Refactorings,8,2015
Practical Combinatorial Interaction Testing: Empirical Findings on Efficiency and Early Fault Detection,47,2015
Program Characterization Using Runtime Values and Its Application to Software Plagiarism Detection,22,2015
An I/O Efficient Approach for Detecting All Accepting Cycles,1,2015
Self-Adapting Reliability in Distributed Software Systems,19,2015
The Effect of GoF Design Patterns on Stability: A Case Study,41,2015
The Risks of Coverage-Directed Test Case Generation,52,2015
Where Do Configuration Constraints Stem From? An Extraction Approach and an Empirical Study,49,2015
"Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar",66,2015
BLISS: Improved Symbolic Execution by Bounded Lazy Initialization with SAT Support,22,2015
Extending the UML Statecharts Notation to Model Security Aspects,17,2015
Performance Analysis for Object-Oriented Software: A Systematic Mapping,,2015
Safer User Interfaces: A Case Study in Improving Number Entry,22,2015
Automatic Detection and Resolution of Lexical Ambiguity in Process Models,45,2015
Evaluating Legal Implementation Readiness Decision-Making,2,2015
Extracting Development Tasks to Navigate Software Documentation,34,2015
Forecasting Java Software Evolution Trends Employing Network Models,21,2015
Range Fixes: Interactive Error Resolution for Software Configuration,22,2015
Guided Mutation Testing for JavaScript Web Applications,25,2015
Integer Parameter Synthesis for Real-Time Systems,50,2015
Mining Version Histories for Detecting Code Smells,123,2015
Static Fault Localization in Model Transformations,50,2015
The Oracle Problem in Software Testing: A Survey,,2015
Are Slice-Based Cohesion Metrics Actually Useful in Effort-Aware Post-Release Fault-Proneness Prediction? An Empirical Study,26,2015
Improving Multi-Objective Test Case Selection by Injecting Diversity in Genetic Algorithms,54,2015
The Impact of API Change- and Fault-Proneness on the User Ratings of Android Apps,120,2015
"Using Declarative Specification to Improve the Understanding, Extensibility, and Comparison of Model-Inference Algorithms",23,2015
Automated Synthesis of Mediators to Support Component Interoperability,32,2015
"Embedding, Evolution, and Validation of Model-Driven Spreadsheets",19,2015
Generating Complete Controllable Test Suites for Distributed Testing,9,2015
Instance Generator and Problem Representation to Improve Object Oriented Code Coverage,46,2015
The Impact of View Histories on Edit Recommendations,19,2015
Exploiting Model Morphology for Event-Based Testing,8,2015
How Software Designers Interact with Sketches at the Whiteboard,21,2015
Quantitative Evaluation of Model-Driven Performance Analysis and Simulation of Component-Based Architectures,61,2015
Replicating and Re-Evaluating the Theory of Relative Defect-Proneness,13,2015
STAR: Stack Trace Based Automatic Crash Reproduction via Symbolic Execution,29,2015
A Systematic Study on Explicit-State Non-Zenoness Checking for Timed Automata,5,2015
Customizing the Representation Capabilities of Process Models: Understanding the Effects of Perceived Modeling Impediments,13,2015
Investigating Country Differences in Mobile App User Behavior and Challenges for Software Engineering,106,2015
The Design Space of Bug Fixes and How Developers Navigate It,34,2015
Who Will Stay in the FLOSS Community? Modeling Participant’s Initial Behavior,,2015
An Industrial Survey of Safety Evidence Change Impact Analysis Practice,34,2016
Engineering Adaptive Model-Driven User Interfaces,19,2016
Finding and Evaluating the Performance Impact of Redundant Data Access for Applications that are Developed Using Object-Relational Mapping Frameworks,18,2016
Inner Source in Platform-Based Product Engineering,13,2016
Test Case Prioritization Using Lexicographical Ordering,16,2016
Composite Constant Propagation and its Application to Android Program Analysis,11,2016
Developer Micro Interaction Metrics for Software Defect Prediction,25,2016
Enhanced Code Conversion Approach for the Integrated Cross-Platform Mobile Development (ICPMD),3,2016
Parallel Algorithms for Testing Finite State Machines:Generating UIO Sequences,13,2016
Comments on “Researcher Bias: The Use of Machine Learning in Software Defect Prediction”,,2016
A Lightweight System for Detecting and Tolerating Concurrency Bugs,6,2016
A Multi-Objective Technique to Prioritize Test Cases,20,2016
Coverage-Aware Test Database Reduction,7,2016
Exploring Mobile End User Development: Existing Use and Design Factors,9,2016
HYDRA: Massively Compositional Model for Cross-Project Defect Prediction,88,2016
A Survey on Metamorphic Testing,,2016
Dynamic Testing for Deadlocks via Constraints,12,2016
Probabilistic Interface Automata,0,2016
Software Reliability Analysis Using Weakest Preconditions in Linear Assignment Programs,2,2016
The Role of Method Chains and Comments in Software Readability and Comprehension—An Experiment,,2016
A Survey on Software Fault Localization,,2016
Model Checking Software with First Order Logic Specifications Using AIG Solvers,2,2016
Parallel Performance Problems on Shared-Memory Multicore Systems: Taxonomy and Observation,6,2016
The Role of Ethnographic Studies in Empirical Software Engineering,34,2016
A Game-Theoretic Foundation for the Maximum Software Resilience against Dense Errors,5,2016
Asymptotic Perturbation Bounds for Probabilistic Model Checking with Empirically Determined Probability Parameters,10,2016
Designing Autonomic Management Systems by Using Reactive Control Techniques,7,2016
Dynamic Software Project Scheduling through a Proactive-Rescheduling Method,18,2016
Variability Analysis of Requirements: Considering Behavioral Differences and Reflecting Stakeholders’ Perspectives,,2016
"A Two-Component Language for Adaptation: Design, Semantics and Program Analysis",12,2016
Automatically Recommending Peer Reviewers in Modern Code Review,40,2016
Dynamic and Automatic Feedback-Based Threshold Adaptation for Code Smell Detection,11,2016
Enforcing Exception Handling Policies with a Domain-Specific Language,9,2016
Software Development in Startup Companies: The Greenfield Startup Model,78,2016
Bidirectional Symbolic Analysis for Effective Branch Testing,14,2016
Effect of Domain Knowledge on Elicitation Effectiveness: An Internally Replicated Controlled Experiment,10,2016
RELAI Testing: A Technique to Assess and Improve Software Reliability,12,2016
Targeted Scrum: Applying Mission Command to Agile Software Development,17,2016
To Be Optimal or Not in Test-Case Prioritization,42,2016
A Multi-Site Joint Replication of a Design Patterns Experiment Using Moderator Variables to Generalize across Contexts,5,2016
An Approach to Checking Consistency between UML Class Model and Its Java Implementation,12,2016
A Probabilistic Analysis of the Efficiency of Automated Software Testing,27,2016
Black-Box String Test Case Generation through a Multi-Objective Optimization,14,2016
"Mapping Bug Reports to Relevant Files: A Ranking Model, a Fine-Grained Benchmark, and Feature Evaluation",24,2016
"Detecting, Tracing, and Monitoring Architectural Tactics in Code",31,2016
Metamorphic Testing for Software Quality Assessment: A Study of Search Engines,53,2016
Verifying Synchronization for Atomicity Violation Fixing,4,2016
Automatic Source Code Summarization of Context for Java Methods,41,2016
Crossover Designs in Software Engineering Experiments: Benefits and Perils,24,2016
GoPrime: A Fully Decentralized Middleware for Utility-Aware Service Assembly,8,2016
Probabilistic Model Checking of Regenerative Concurrent Systems,20,2016
SITAR: GUI Test Script Repair,28,2016
Using Reduced Execution Flow Graph to Identify Library Functions in Binary Code,10,2016
A Tool-Supported Methodology for Validation and Refinement of Early-Stage Domain Models,3,2016
Seer: A Lightweight Online Failure Prediction Approach,10,2016
"Supporting Scope Tracking and Visualization for Very Large-Scale Requirements Engineering-Utilizing FSC+, Decision Patterns, and Atomic Decision Visualizations",11,2016
Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time,61,2016
Context-aware patch generation for better automated program repair,36,2018
Towards practical program repair with on-demand candidate generation,34,2018
A correlation study between automated program repair and test-suite metrics,,2018
Do automated program repair techniques repair hard and important bugs?,,2018
Software protection on the go: a large-scale empirical study on mobile app obfuscation,6,2018
GUILeak: tracing privacy policy claims on user input data for Android applications,5,2018
Online app review analysis for identifying emerging issues,11,2018
EARMO: an energy-aware refactoring approach for mobile apps,,2018
Neuro-symbolic program corrector for introductory programming assignments,9,2018
Automated localization for unreproducible builds,3,2018
Enlightened debugging,6,2018
Experiences and challenges in building a data intensive system for data migration,,2018
Sentiment analysis for software engineering: how far can we go?,23,2018
Identifying features in forks,4,2018
Roles and impacts of hands-on software architects in five industrial case studies,0,2018
Sentiment polarity detection for software development,,2018
Semantic program repair using a reference implementation,18,2018
Automated repair of mobile friendly problems in web pages,8,2018
Static automated program repair for heap properties,16,2018
Overfitting in semantics-based automated program repair,,2018
Studying the dialogue between users and developers of free apps in the google play store,,2018
Automated reporting of GUI design violations for mobile apps,21,2018
Leveraging program analysis to reduce user-perceived latency in mobile applications,8,2018
Repairing crashes in Android apps,9,2018
Hybrid regression test selection,19,2018
Fine-grained test minimization,4,2018
FAST approaches to scalable similarity-based test case prioritization,8,2018
Towards refactoring-aware regression test selection,5,2018
Inheritance usage patterns in open-source systems,1,2018
Almost there: a study on quasi-contributors in open source software projects,14,2018
Analyzing a decade of Linux system calls,,2018
To distribute or not to distribute?: why licensing bugs matter,2,2018
Augusto: exploiting popular functionalities for the generation of semantic GUI tests with Oracles,3,2018
Towards optimal concolic testing,6,2018
DeepTest: automated testing of deep-neural-network-driven autonomous cars,158,2018
Precise concolic unit testing of C programs using extended units and symbolic alarm filtering,6,2018
Spatio-temporal context reduction: a pointer-analysis-based static approach for detecting use-after-free vulnerabilities,7,2018
Program splicing,3,2018
Chopped symbolic execution,11,2018
Perses: syntax-guided program reduction,7,2018
Secure coding practices in Java: challenges and vulnerabilities,15,2018
EnMobile: entity-based characterization and analysis of mobile malware,4,2018
Model comprehension for security risk assessment: an empirical comparison of tabular vs. graphical representations,,2018
Does the propagation of artifact changes across tasks reflect work dependencies?,2,2018
Large-scale analysis of framework-specific exceptions in Android apps,19,2018
Effect sizes and their variance for AB/BA crossover design studies,,2018
A large-scale empirical study on the effects of code obfuscations on Android apps and anti-malware products,4,2018
DeFlaker: automatically detecting flaky tests,21,2018
DetReduce: minimizing Android GUI test suites for regression testing,1,2018
Time to clean your test objectives,6,2018
Prioritizing browser environments for web application test execution,0,2018
An empirical study of early access games on the steam platform,,2018
On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation,,2018
Accurate and efficient refactoring detection in commit history,20,2018
ENTRUST: engineering trustworthy self-adaptive software with dynamic assurance cases,,2018
Are vulnerabilities discovered and resolved like other defects?,,2018
How modern news aggregators help development communities shape and share knowledge,12,2018
Adding sparkle to social coding: an empirical study of repository badges in the npm ecosystem,23,2018
"""Was my contribution fairly reviewed?"": a framework to study the perception of fairness in modern code reviews",,2018
Collaborative model-driven software engineering: a classification framework and a research map,,2018
Are mutation scores correlated with real fault detection?: a large scale empirical study on the relationship between mutants and real faults,20,2018
Efficient sampling of SAT solutions for testing,10,2018
Are fix-inducing changes a moving target?: a longitudinal case study of just-in-time defect prediction,15,2018
Understanding developers' needs on deprecation as a language feature,10,2018
On the dichotomy of debugging behavior among programmers,10,2018
Measuring program comprehension: a large-scale field study with professionals,18,2018
Data scientists in software teams: state of the art and challenges,18,2018
Dataflow tunneling: mining inter-request data dependencies for request-based applications,2,2018
Launch-mode-aware context-sensitive activity transition analysis,5,2018
UFO: predictive concurrency use-after-free detection,0,2018
Collective program analysis,4,2018
Statistical learning of API fully qualified names in code snippets of online forums,4,2018
When not to comment: questions and tradeoffs with API documentation for C++ projects,0,2018
Deuce: a lightweight user interface for structured editing,1,2018
From UI design image to GUI skeleton: a neural machine translator to bootstrap mobile GUI implementation,12,2018
When testing meets code review: why and how developers review tests,8,2018
Redefining prioritization: continuous prioritization for continuous integration,8,2018
MAHAKIL: diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction,,2018
On the use of hidden Markov model to predict the time to fix bugs,4,2018
What makes a great manager of software engineers?,7,2018
Older adults and hackathons: a qualitative study,,2018
Do programmers work at night or during the weekend?,8,2018
Multi-granular conflict and dependency analysis in software engineering based on graph transformation,6,2018
Self-hiding behavior in Android apps: detection and characterization,1,2018
The scent of a smell: an extensive comparison between textual and structural smells,26,2018
ConflictJS: finding and understanding conflicts between JavaScript libraries,6,2018
Debugging data flows in reactive programs,6,2018
Do you remember this source code?,4,2018
Inferring hierarchical motifs from execution traces,6,2018
A comparison of program comprehension strategies by blind and sighted programmers,,2018
Identifying patch correctness in test-based program repair,25,2018
How not to structure your database-backed web applications: a study of performance bugs in the wild,8,2018
Speedoo: prioritizing performance optimization opportunities,2,2018
The evolution of requirements practices in software startups,14,2018
Traceability in the wild: automatically augmenting incomplete trace links,12,2018
A temporal permission analysis and enforcement framework for Android,4,2018
Global-aware recommendations for repairing violations in exception handling,,2018
RFC-directed differential testing of certificate validation in SSL/TLS implementations,2,2018
Symbolic verification of regular properties,0,2018
Metamorphic testing of RESTful web APIs,,2018
Integrating technical debt management and software quality management processes: a framework and field tests,4,2018
Understanding the factors for fast answers in technical Q&A websites: an empirical study of four stack exchange websites,,2018
Towards reusing hints from past fixes: an exploratory study on thousands of real samples,,2018
Are code examples on an online Q&A forum reliable?: a study of API misuse on stack overflow,31,2018
Inference of development activities from interaction with uninstrumented applications,,2018
Propagating configuration decisions with modal implication graphs,5,2018
A combinatorial approach for exposing off-nominal behaviors,3,2018
Identifying design problems in the source code: a grounded theory,5,2018
Deep code search,35,2018
Augmenting and structuring user queries to support efficient free-form code search,,2018
FaCoY: a code-to-code search engine,12,2018
Generalized data structure synthesis,8,2018
A graph solver for the automated generation of consistent domain-specific models,5,2018
Automatically finding bugs in a commercial cyber-physical system development tool chain with SLforge,3,2018
Context-aware conversational developer assistants,7,2018
"Open source barriers to entry, revisited: a sociotechnical perspective",22,2018
Testing vision-based control systems using learnable evolutionary algorithms,19,2018
To preserve or not to preserve invalid solutions in search-based software engineering: a case study in software product lines,0,2018
Nemo: multi-criteria test-suite minimization with integer nonlinear programming,3,2018
"Is ""better data"" better than ""better data miners""?: on the benefits of tuning SMOTE for defect prediction",33,2018
Analyzing the effects of test driven development in GitHub,6,2018
A comparative study to benchmark cross-project defect prediction approaches,28,2018
MSeer: an advanced technique for locating multiple bugs in parallel,7,2018
Journal first presentation of an experience report on applying software testing academic results in industry: we need usable automated test generation,,2018
CCAligner: a token based large-gap clone detector,10,2018
HireBuild: an automatic approach to history-driven repair of build scripts,10,2018
The road to live programming: insights from the practice,5,2018
Assessing the threat of untracked changes in software evolution,3,2018
Programming not only by example,0,2018
Goal-conflict likelihood assessment based on model counting,1,2018
"A posteriori typing for model-driven engineering: concepts, analysis, and applications",,2018
A static verification framework for message passing in Go using behavioural types,13,2018
Inferring and asserting distributed system invariants,6,2018
DroidStar: callback typestates for Android classes,4,2018
Debugging with intelligence via probabilistic inference,0,2018
Reducer-based construction of conditional verifiers,5,2018
Challenges and pitfalls on surveying evidence in the software engineering technical literature: an exploratory study with novices,,2018
Statistical errors in software engineering experiments: a preliminary literature review,,2018
Synthesizing qualitative research in software engineering: a critical review,,2018
Automatic software repair: a survey,,2018
Search-based test data generation for SQL queries,2,2018
Multi-objective integer programming approaches for solving optimal feature selection problem: a new perspective on multi-objective optimization problems in SBSE,0,2018
Automatically generating search heuristics for concolic testing,6,2018
Semantically enhanced software traceability using deep learning techniques,43,2017
Can latent topics in source code predict missing architectural tactics?,1,2017
Analyzing APIs documentation and code to detect directive defects,27,2017
An unsupervised approach for discovering relevant tutorial fragments for APIs,16,2017
Detecting user story information in developer-client conversations to generate extractive summaries,11,2017
Clone refactoring with lambda expressions,15,2017
Characterizing and detecting anti-patterns in the logging code,20,2017
Automated refactoring of legacy Java software to default methods,8,2017
Supporting software developers with a holistic recommender system,11,2017
Recommending and localizing change requests for mobile apps based on user reviews,48,2017
Machine learning-based detection of open source license exceptions,10,2017
Software development waste,35,2017
Becoming agile: a grounded theory of agile transitions in practice,38,2017
From diversity by numbers to diversity as process: supporting inclusiveness in software development teams with brainstorming,10,2017
Classifying developers into core and peripheral: an empirical study on count and network metrics,33,2017
Decoding the representation of code in the brain: an fMRI study of code review and expertise,25,2017
"Understanding the impressions, motivations, and barriers of one time code contributors to FLOSS projects: a survey",19,2017
Search-driven string constraint solving for vulnerability detection,16,2017
A guided genetic algorithm for automated crash reproduction,16,2017
Stochastic optimization of program obfuscation,10,2017
ZenIDS: introspective intrusion detection for PHP applications,1,2017
Statically checking web API requests in JavaScript,17,2017
On cross-stack configuration errors,11,2017
Efficient detection of thread safety violations via coverage-guided generation of concurrent tests,17,2017
RClassify: classifying race conditions in web applications via deterministic replay,8,2017
Repairing event race errors by controlling nondeterminism,18,2017
Making malory behave maliciously: targeted fuzzing of android execution environments,26,2017
A SEALANT for inter-app security holes in android,19,2017
"An efficient, robust, and scalable approach for analyzing interacting android apps",16,2017
LibD: scalable and precise third-party library detection in android markets,43,2017
Analysis and testing of notifications in Android wear applications,18,2017
Adaptive unpacking of Android apps,30,2017
Performance diagnosis for inefficient loops,14,2017
How do developers fix cross-project correlated bugs?: a case study on the GitHub scientific python ecosystem,25,2017
Feedback-based debugging,15,2017
Learning syntactic program transformations from examples,67,2017
Precise condition synthesis for program repair,91,2017
Heuristically matching solution spaces of arithmetic formulas to efficiently reuse solutions,6,2017
Exploring API embedding for API usages and applications,41,2017
Unsupervised software-specific morphological forms inference from informal discussions,17,2017
SPAIN: security patch analysis for binaries towards understanding the pain and pills,12,2017
Travioli: a dynamic analysis for detecting data-structure traversals,,2017
ProEva: runtime proactive performance evaluation based on continuous-time markov chains,6,2017
Glacier: transitive class immutability for Java,17,2017
Challenges for static analysis of Java reflection: literature review and empirical study,,2017
Machine-learning-guided selectively unsound static analysis,14,2017
How good is a security policy against real breaches?: a HIPAA case study,9,2017
Adaptive coverage and operational profile-based testing for reliability improvement,3,2017
RADAR: a lightweight tool for requirements and architecture decision analysis,13,2017
PEoPL: projectional editing of product lines,10,2017
Do developers read compiler error messages?,29,2017
A general framework for dynamic stub injection,1,2017
"An empirical study on mutation, statement and branch coverage fault revelation that avoids the unreliable clean program assumption",53,2017
Evaluating and improving fault localization,90,2017
Syntactic and semantic differencing for combinatorial models of test designs,4,2017
Balancing soundness and efficiency for practical testing of configurable systems,9,2017
Automatic text input generation for mobile testing,21,2017
A test-suite diagnosability metric for spectrum-based fault localization approaches,22,2017
Automated transplantation and differential testing for clones,15,2017
Code defenders: crowdsourcing effective tests and subtle mutants with a mutation testing game,15,2017
Optimizing test placement for module-level regression testing,11,2017
Learning to prioritize test programs for compiler testing,14,2017
What causes my test alarm?: automatic cause analysis for test alarms in system and integration testing,15,2017
Symbolic model extraction for web application verification,6,2017
UML diagram refinement (focusing on class- and use case diagrams),2,2017
Fuzzy fine-grained code-history analysis,6,2017
To type or not to type: quantifying detectable bugs in JavaScript,18,2017
The evolution of continuous experimentation in software product development: from data to a data-driven organization at scale,46,2017
PRADA: prioritizing android devices for apps by mining large-scale usage data,29,2016
Release planning of mobile apps based on user reviews,99,2016
Toward a framework for detecting privacy policy violations in android application code,55,2016
Mining sandboxes,28,2016
Generating performance distributions via probabilistic symbolic execution,21,2016
Performance issues and optimizations in JavaScript: an empirical study,38,2016
Reliability of Run-Time Quality-of-Service evaluation using parametric model checking,17,2016
Optimizing selection of competing services with probabilistic hierarchical refinement,13,2016
The emerging role of data scientists on software development teams,68,2016
Belief & evidence in empirical software engineering,75,2016
Grounded theory in software engineering research: a critical review and guidelines,,2016
"On the techniques we create, the tools we build, and their misalignments: a study of KLEE",11,2016
Guiding dynamic symbolic execution toward unverified program executions,39,2016
Synthesizing framework models for symbolic execution,24,2016
Type-aware concolic testing of JavaScript programs,11,2016
An empirical comparison of compiler testing techniques,25,2016
Termination-checking for LLVM peephole optimizations,6,2016
Finding and analyzing compiler warning defects,17,2016
iDice: problem identification for emerging issues,7,2016
Energy profiles of Java collections classes,67,2016
An empirical study of practitioners' perspectives on green software engineering,61,2016
Automated energy optimization of HTTP requests for mobile applications,57,2016
Too long; didn't watch!: extracting relevant fragments from software development video tutorials,34,2016
Overcoming open source project entry barriers with a portal for newcomers,49,2016
Work practices and challenges in pull-based development: the contributor's perspective,95,2016
Automatically learning semantic features for defect prediction,146,2016
Cross-project defect prediction using a connectivity-based unsupervised classifier,92,2016
Automated parameter optimization of classification techniques for defect prediction models,126,2016
AntMiner: mining more bugs by reducing noise interference,18,2016
Program synthesis using natural language,33,2016
SWIM: synthesizing what i mean: code search and idiomatic snippet synthesis,55,2016
Cross-supervised synthesis of web-crawlers,5,2016
Automatic model generation from documentation for Java API functions,22,2016
Augmenting API documentation with insights from stack overflow,84,2016
From word embeddings to document similarities for improved information retrieval in software engineering,98,2016
Learning API usages from bytecode: a statistical approach,22,2016
"On the ""naturalness"" of buggy code",89,2016
Code anomalies flock together: exploring code anomaly agglomerations for locating design problems,40,2016
Using (bio)metrics to predict code quality online,19,2016
CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features,119,2016
"Disseminating architectural knowledge on open-source projects: a case study of the book ""architecture of open-source applications""",6,2016
Identifying and quantifying architectural debt,39,2016
Decoupling level: a new metric for architectural maintenance complexity,30,2016
On the limits of mutation reduction strategies,27,2016
Comparing white-box and black-box test prioritization,83,2016
How does regression test prioritization perform in real-world software evolution?,39,2016
The impact of test case summaries on bug fixing performance: an empirical investigation,50,2016
Reducing combinatorics in GUI testing of android applications,54,2016
MobiPlay: a remote execution based record-and-replay tool for mobile applications,37,2016
VDTest: an automated framework to support testing for virtual devices,1,2016
Automated test suite generation for time-continuous simulink models,41,2016
Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation,7,2016
Multi-objective software effort estimation,71,2016
A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering,64,2016
A comparison of 10 sampling algorithms for configurable systems,67,2016
Featured model-based mutation analysis,36,2016
Feature-model interfaces: the highway to compositional analyses of highly-configurable systems,32,2016
How does the degree of variability affect bug finding?,41,2016
Angelix: scalable multiline program patch synthesis via symbolic analysis,199,2016
An analysis of the search spaces for generate and validate patch generation systems,75,2016
PAC learning-based verification and model synthesis,11,2016
StubDroid: automatic inference of precise data-flow summaries for the android framework,33,2016
Exploring language support for immutability,22,2016
The evolution of C programming practices: a study of the Unix operating system 1973--2015,8,2016
An empirical study on the impact of C++ lambdas and programmer experience,28,2016
Understanding and fixing multiple language interoperability issues: the C/Fortran case,2,2016
BigDebug: debugging primitives for interactive big data processing in spark,37,2016
Debugging for reactive programming,14,2016
Revisit of automatic debugging via human focus-tracking analysis,24,2016
RETracer: triaging crashes by reverse execution from partial memory dumps,28,2016
"Are ""non-functional"" requirements really non-functional?: an investigation of non-functional requirements in practice",38,2016
Probing for requirements knowledge to stimulate architectural thinking,5,2016
Risk-driven revision of requirements models,6,2016
"Discovering ""unknown known"" security requirements",18,2016
Behavioral log analysis with statistical guarantees,,2015
Efficient large-scale trace checking using mapreduce,9,2016
Feedback-directed instrumentation for deployed JavaScript applications,13,2016
DoubleTake: fast and precise error detection via evidence-based dynamic analysis,19,2016
Automated partitioning of android applications for trusted execution environments,20,2016
Jumping through hoops: why do Java developers struggle with cryptography APIs?,68,2016
Finding security bugs in web applications using a catalog of access control patterns,17,2016
"Reference hijacking: patching, protecting and analyzing on unmodified and non-rooted android devices",20,2016
Building a theory of job rotation in software engineering from an instrumental case study,9,2016
The challenges of staying together while moving fast: an exploratory study,19,2016
The sky is not the limit: multitasking across GitHub projects,42,2016
Quantifying and mitigating turnover-induced knowledge loss: case studies of chrome and a project at avaya,25,2016
Quality experience: a grounded theory of successful agile projects without dedicated testers,12,2016
Code review quality: how developers see it,38,2016
Revisiting code ownership and its relationship with software quality in the scope of modern code review,44,2016
IntEQ: recognizing benign integer overflows via equivalence checking across multiple precisions,5,2016
Nomen est omen: exploring and exploiting similarities between argument and parameter names,15,2016
Floating-point precision tuning using blame analysis,28,2016
Crowdsourcing program preconditions via a classification game,9,2016
Scalable thread sharing analysis,8,2016
Fixing deadlocks via lock pre-acquisitions,15,2016
Coverage-driven test code generation for concurrent classes,11,2016
Locking discipline inference and checking,9,2016
Improving refactoring speed by 10X,17,2016
SourcererCC: scaling code clone detection to big-code,129,2016
Understanding asynchronous interactions in full-stack JavaScript,26,2016
Shadow of a doubt: testing for divergences between software versions,21,2016
Mining the metadata: and its consequences,,2015
Views on internal and external validity in empirical software engineering,108,2015
Developing and evaluating software engineering process theories,11,2015
Automated data structure generation: refuting common wisdom,6,2015
Automated modularization of GUI test cases,4,2015
Making system user interactive tests repeatable: when and what should we control?,19,2015
ZoomIn: discovering failures by detecting wrong assertions,7,2015
Composite constant propagation: application to Android inter-component communication analysis,143,2015
Static control-flow analysis of user-driven callbacks in Android applications,120,2015
Truth in advertising: the hidden cost of mobile ads for software developers,80,2015
Interactive code review for systematic changes,40,2015
Automated decomposition of build targets,22,2015
Helping developers help themselves: automatic decomposition of code review changesets,66,2015
Data-delineation in software binaries and its application to buffer-overrun discovery,8,2015
Measuring software redundancy,21,2015
Gray computing: an analysis of computing with background JavaScript tasks,8,2015
Presence-condition simplification in highly configurable systems,27,2015
Symbolic model checking of product-line requirements using SAT-based methods,12,2015
Lightweight adaptive filtering for efficient learning and updating of probabilistic models,35,2015
Tempura: temporal dimension for IDEs,4,2015
Supporting selective undo in a code editor,33,2015
Cascade: a universal programmer-assisted type qualifier inference tool,9,2015
RECONTEST: effective regression testing of concurrent programs,25,2015
A synergistic analysis method for explaining failed regression tests,11,2015
An information retrieval approach for regression test prioritization based on program changes,63,2015
IccTA: detecting inter-component privacy leaks in Android apps,350,2015
Do security patterns really help designers?,34,2015
AppContext: differentiating malicious and benign mobile app behaviors using context,169,2015
TypeDevil: dynamic type inconsistency analysis for JavaScript,43,2015
Detecting inconsistencies in JavaScript MVC applications,29,2015
AutoCSP: automatically retrofitting CSP to web applications,20,2015
How much up-front?: a grounded theory of agile architecture,25,2015
Work practices and challenges in pull-based development: the integrator's perspective,152,2015
Build it yourself!: homegrown tools in a large software company,11,2015
Morpheus: variability-aware refactoring in the wild,34,2015
Does automated refactoring obviate systematic editing?,44,2015
When and why your code starts to smell bad,140,2015
Learning to log: helping developers make informed logging decisions,73,2015
Mining apps for abnormal usage of sensitive data,155,2015
Tracking static analysis violations over time to capture developer characteristics,14,2015
DirectFix: looking for simple program repairs,171,2015
Safe memory-leak fixing for C programs,55,2015
relifix: automated repair of software regressions,81,2015
The art of testing less without sacrificing quality,62,2015
"No PAIN, no gain?: the utility of PArallel fault INjections",23,2015
A flexible and non-intrusive approach for computing complex structural coverage metrics,8,2015
Combining multi-objective search and constraint solving for configuring large software product lines,97,2015
A genetic algorithm for detecting significant floating-point inaccuracies,18,2015
Learning combinatorial interaction test generation strategies using hyperheuristic search,69,2015
Borrowing from the crowd: a study of recombination in software design competitions,25,2015
From developer networks to verified communities: a fine-grained approach,37,2015
Open source-style collaborative development practices in commercial projects using GitHub,49,2015
Database-backed program analysis for scalable error propagation,7,2015
Tricorder: building a program analysis ecosystem,103,2015
Alloy*: a general-purpose higher-order relational constraint solver,50,2015
DASE: document-assisted symbolic execution for improving automated software testing,20,2015
Compositional symbolic execution with memoized replay,19,2015
Regular property guided dynamic symbolic execution,21,2015
Combining symbolic execution and model checking for data flow testing,30,2015
Are students representatives of professionals in software engineering experiments?,130,2015
Why good developers write bad code: an observational case study of the impacts of organizational factors on software quality,31,2015
Stuck and frustrated or in flow and happy: sensing developers' emotions and progress,85,2015
What makes a great software engineer?,47,2015
Efficient scalable verification of LTL specifications,8,2015
Empirical study towards a leading indicator for cost of formal software verification,18,2015
Specifying event-based systems with a counting fluent temporal logic,5,2015
Coexecutability for efficient verification of data model updates,5,2015
Assert use in GitHub projects,31,2015
A programming model for sustainable software,24,2015
A comparative study of programming languages in Rosetta code,70,2015
Revisiting the impact of classification techniques on the performance of defect prediction models,166,2015
LACE2: better privacy-preserving data sharing for cross project defect prediction,41,2015
The impact of mislabelling on the performance and interpretation of defect prediction models,56,2015
ReCBuLC: reproducing concurrency bugs using local clocks,11,2015
Dynamic generation of likely invariants for multithreaded programs,6,2015
GPredict: generic predictive concurrency analysis,22,2015
Graph-based statistical language model for code,85,2015
Discovering information explaining API types using text classification,42,2015
How can I use this method?,65,2015
Hercules: reproducing crashes in real-world application binaries,20,2015
Caramel: detecting and fixing performance problems that have non-intrusive fixes,80,2015
An empirical study on real bug fixes,77,2015
Does the failing test execute a single or multiple faults?: an approach to classifying failing tests,6,2015
"Trivial compiler equivalence: a large scale empirical study of a simple, fast and effective equivalent mutant detection technique",115,2015
Dynamic data flow testing of object oriented systems,25,2015
Enron's spreadsheets and related emails: a dataset and analysis,,2015
An empirical study on quality issues of production big data platform,,2015
Code reviews do not find bugs: how the current code review best practice slows us down,27,2015
Systematic testing of reactive software with non-deterministic events: a case study on LG electric oven,,2015
Empirically detecting false test alarms using association rules,,2015
Striving for failure: an industrial case study about test failure prediction,,2015
Automatic and continuous software architecture validation,,2015
Comparing software architecture recovery techniques using accurate dependencies,,2015
SPF: a middleware for social interaction in mobile proximity environments,,2015
Merits of organizational metrics in defect prediction: an industrial replication,,2015
Online defect prediction for imbalanced data,,2015
Measuring dependency freshness in software systems,,2015
A large-scale technology evaluation study: effects of model-based analysis and testing,,2015
Metamorphic model-based testing applied on NASA DAT: an experience report,37,2015
"Improving predictability, efficiency and trust of model-based proof activity",,2015
Performance analysis using subsuming methods: an industrial case study,,2015
An industrial case study on the automated detection of performance regressions in heterogeneous environments,,2015
Industry practices and event logging: assessment of a critical software development process,,2015
A case study in locating the architectural roots of technical debt,,2015
Design and evaluation of a customizable multi-domain reference architecture on top of product lines of self-driving heavy vehicles: an industrial case study,,2015
Approximating attack surfaces with stack traces,,2015
Avoiding security pitfalls with functional programming: a report on the development of a secure XML validator,,2015
Should we move to stack overflow?: measuring the utility of social media for developer support,,2015
A field study on fostering structural navigation with prodet,,2015
How and when to transfer software engineering research via extensions,,2015
Evolution of software development strategies,6,2015
Drawing insight from student perceptions of reflective design learning,,2015
Effectiveness of persona with personality traits on conceptual design,,2015
Industry/university collaboration in software engineering education: refreshing and retuning our strategies,,2015
Novice code understanding strategies during a software maintenance assignment,,2015
Learning global agile software engineering using same-site and cross-site teams,,2015
Code repurposing as an assessment tool,,2015
Remote development and distance delivery of innovative courses: challenges and opportunities,,2015
Improving student group work with collaboration patterns: a case study,,2015
Teaching software systems thinking at the open university,,2015
Masters-level software engineering education and the enriched student context,,2015
Combining mastery learning with project-based learning in a first programming course: an experience report,,2015
Collaborative and cooperative-learning in software engineering courses,,2015
Using GSwE2009 for the evaluation of a master degree in software engineering in the universidad de la república,,2015
System thinking: educating t-shaped software engineers,,2015
Transparently teaching in the context of game-based learning: the case of simulES-W,,2015
Educating software engineering managers: revisited: what software project managers need to know today,,2015
Contest based learning with blending software engineering and business management: for students' high motivation and high practice ability,,2015
Concurrent software engineering and robotics education,,2015
The development of a dashboard tool for visualising online teamwork discussions,,2015
Software design studio: a practical example,,2015
Code hunt: experience with coding contests at scale,,2015
Does outside-in teaching improve the learning of object-oriented programming?,,2015
Active and inductive learning in software engineering education,,2015
In search of the emotional design effect in programming,,2015
Experiences in developing and delivering a programme of part-time education in software and systems security,,2015
Teaching software architecture to undergraduate students: an experience report,,2015
CS/SE instructors can improve student writing without reducing class time devoted to technical content: experimental results,,2015
Sustainability design and software: the karlskrona manifesto,,2015
Interdisciplinary design patterns for socially aware computing,,2015
The role of design thinking and physical prototyping in social software engineering,,2015
On the role of value sensitive concerns in software engineering practice,,2015
Engineering sustainability through language,,2015
Enabling the definition and enforcement of governance rules in open source systems,,2015
AppCivist: a service-oriented software platform for socially sustainable activism,,2015
SOA4DM: applying an SOA paradigm to coordination in humanitarian disaster response,,2015
Managing emergent ethical concerns for software engineering in society,,2015
Dementia and social sustainability: challenges for software engineering,,2015
Cognitively sustainable ICT with ubiquitous mobile services: challenges and opportunities,,2015
New initiative: the naturalness of software,,2015
"Virtual reality in software engineering: affordances, applications, and challenges",,2015
CodeAware: sensor-based fine-grained monitoring and management of software artifacts,,2015
Free hugs: praising developers for their actions,,2015
How (much) do developers test?,,2015
A vision of crowd development,,2015
When app stores listen to the crowd to fight bugs in the wild,,2015
Incorporating human intention into self-adaptive systems,,2015
An initiative to improve reproducibility and empirical evaluation of software testing techniques,,2015
Inferring behavioral specifications from large-scale repositories by leveraging collective intelligence,,2015
Fast feedback cycles in empirical software engineering research,,2015
Dynamic safety cases for through-life safety assurance,,2015
Correctness and relative correctness,,2015
On architectural diversity of dynamic adaptive systems,,2015
Information transformation: an underpinning theory for software engineering,,2015
A unified framework for the comprehension of software's time dimension,,2015
Smart programming playgrounds,,2015
Capsule-oriented programming,,2015
Evolution-aware monitoring-oriented programming,,2015
Towards explicitly elastic programming frameworks,,2015
Optimising energy consumption of design patterns,,2015
Mining software repositories for social norms,,2015
Commit bubbles,,2015
"Rapid multi-purpose, multi-commit code analysis",,2015
Leveraging informal documentation to summarize classes and methods in context,,2015
Bixie: finding and understanding inconsistent code,,2015
TaskNav: task-based navigation of software documentation,,2015
ViDI: the visual design inspector,,2015
Bootstrapping mobile app development,,2015
Source code curation on StackOverflow: the vesperin system,,2015
The ECCO tool: extraction and composition for clone-and-own,,2015
Extract package refactoring in ARIES,,2015
scvRipper: video scraping tool for modeling developers' behavior using interaction data,,2015
Chiminey: reliable computing and data management platform in the cloud,,2015
Automated program repair in an integrated development environment,,2015
FlexiSketch Team: collaborative sketching and notation creation on the fly,,2015
Interactive synthesis using free-form queries,,2015
Varis: IDE support for embedded client code in PHP web applications,,2015
Mu-Mmint: an IDE for model uncertainty,,2015
StriSynth: synthesis for live programming,,2015
CACHECA: a cache language model based code suggestion tool,,2015
ChangeScribe: a tool for automatically generating commit messages,,2015
Ekstazi: lightweight test selection,,2015
TesMa and CATG: automated test generation tools for models of enterprise applications,,2015
StressCloud: a tool for analysing performance and energy consumption of cloud applications,,2015
Analysis of android inter-app security vulnerabilities using COVERT,,2015
Ariadne: topology aware adaptive security for cyber-physical systems,,2015
Security toolbox for detecting novel and sophisticated android malware,,2015
Vermeer: a tool for tracing and explaining faulty C programs,,2015
JRebel.Android: runtime class- and resource reloading for android,,2015
FormTester: effective integration of model-based and manually specified test cases,,2015
Mining temporal properties of data invariants,,2015
Profiling kernels behavior to improve cpu / gpu interactions,,2015
Fast and precise statistical code completion,,2015
A combined technique of GUI ripping and input perturbation testing for Android apps,,2015
Enabling testing of Android apps,,2015
An approach to detect Android antipatterns,,2015
Textual analysis for code smell detection,,2015
A large scale study of license usage on GitHub,,2015
Understanding conflicts arising from collaborative development,,2015
Mastering global exceptions with policy-aware recommendations,,2015
Deep representations for software engineering,,2015
Automatic categorization of software libraries using bytecode,,2015
Post-dominator analysis for precisely handling implicit flows,,2015
Casper: using ghosts to debug null deferences with dynamic causality traces,,2015
Static detection of configuration-dependent bugs in configurable software,,2015
Improving cloud-based continuous integration environments,,2015
Interactive and collaborative source code annotation,,2015
Discovering code dependencies by harnessing developer's activity,,2015
Filtering code smells detection results,,2015
Enhancing partition testing through output variation,,2015
Segmentation based online performance problem diagnosis,,2015
Symbolic execution of MPI programs,,2015
Automatically fixing real-world JavaScript performance bugs,,2015
Dynamic analysis using JavaScript proxies,,2015
Is Carmen better than George?: testing the exploratory tester using HCI techniques,,2015
"VIBeS, transition system mutation made easy",,2015
ProNat: an agent-based system design for programming in spoken natural language,,2015
Static analysis of concurrent higher-order programs,,2015
Conquering uncertainty in Java programming,,2015
MAPP: the berkeley model and algorithm prototyping platform,,2015
An efficient equivalence checking method for petri net based models of programs,,2015
Model-based run-time variability resolution for robotic applications,,2015
Tierless programming in JavaScript,,2015
Software development risk management: using machine learning for generating risk prompts,,2015
Reasoning based on imperfect context data in adaptive security,,2015
Automated planning for self-adaptive systems,,2015
Understanding the software fault introduction process,,2015
Scalable formal verification of UML models,,2015
Scalability studies on selective mutation testing,,2015
Qualitative analysis of knowledge transfer in pair programming,,2015
DIETs: recommender systems for mobile API developers,,2015
Statistical learning and software mining for agent based simulation of software evolution,,2015
Towards model driven architecture and analysis of system of systems access control,,2015
A unified approach to automatic testing of architectural constraints,,2015
Safe evolution patterns for software product lines,,2015
Strategies for prioritizing test cases generated through model-based testing approaches,,2015
Towards a practical security analysis methodology,,2015
Measuring software developers' perceived difficulty with biometric sensors,,2015
Mining patterns of sensitive data usage,,2015
Search-based migration of model variants to software product line architectures,,2015
On the architecture-driven development of software-intensive systems-of-systems,,2015
Automatic documentation generation via source code summarization,,2015
A declarative foundation for comprehensive history querying,,2015
An integrated multi-agent-based simulation approach to support software project management,,2015
Towards generation of software development tasks,,2015
"Contributor's performance, participation intentions, its influencers and project performance",,2015
Supporting scientific SE process improvement,,2015
A comprehensive framework for the development of dynamic smart spaces,,2015
Verification of Android applications,,2015
A security practices evaluation framework,,2015
The green lab: experimentation in software energy efficiency,,2015
Software requirements patterns: a state of the art and the practice,,2015
Agile project management: from self-managing teams to large-scale development,,2015
Software engineering for privacy in-the-large,,2015
"Exploration, analysis, and manipulation of source code using srcML",,2015
Reactive programming: a walkthrough,,2015
Load testing large-scale software systems,,2015
Big(ger) data in software engineering,,2015
The art and science of analyzing software data; quantitative methods,,2015
1st international workshop on big data software engineering (BIGDSE 2015),,2015
2nd international workshop on context for software development (CSD 2015),,2015
4th SEMAT workshop on general theory of software engineering (GTSE 2015),,2015
5th international workshop on product line approaches in software engineering PLE for a sustainable society (PLEASE 2015),,2015
2nd international workshop on rapid continuous software engineering (RCoSE 2015),,2015
3rd international workshop on release engineering (RELENG 2015),,2015
2nd international workshop on requirements engineering and testing (RET 2015),,2015
Second international workshop on software architecture and metrics (SAM 2015),,2015
8th international workshop on search-based software testing (SBST 2015),,2015
SE4HPCS'15: the 2015 international workshop on software engineering for high performance computing in science,,2015
2nd international workshop on software engineering research and industrial practice (SER&IP 2015),,2015
1st international workshop on software engineering for smart cyber-physical systems (SEsCPS 2015),,2015
3rd international workshop on software engineering for systems-of-systems (SESoS 2015),,2015
1st international workshop on software protection (SPRO 2015),,2015
1st international workshop on TEchnical and LEgal aspects of data pRIvacy and SEcurity (TELERISE 2015),,2015
5th international workshop on the twin peaks of requirements and architecture (TwinPeaks 2015),,2015
Workshop on applications of human error research to improve software engineering (WAHESE 2015),,2015
"Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?",82,2014
Analyze this! 145 questions for data scientists in software engineering,115,2014
The dimensions of software engineering success,39,2014
How do professionals perceive legacy systems and software modernization?,40,2014
SimRT: an automated framework to support regression testing for data races,36,2014
Performance regression testing target prioritization via performance risk analysis,37,2014
Code coverage for suite evaluation by developers,86,2014
Time pressure: a controlled experiment of test case development and requirements review,18,2014
Verifying component and connector models against crosscutting structural views,20,2014
TradeMaker: automated dynamic analysis of synthesized tradespaces,18,2014
Lifting model transformations to product lines,39,2014
Automated goal operationalisation based on interpolation and SAT solving,12,2014
Mining configuration constraints: static analyses and empirical results,104,2014
Which configuration option should I change?,53,2014
Detecting differences across multiple instances of code clones,39,2014
Achieving accuracy and scalability simultaneously in detecting application clones on Android markets,189,2014
"Two's company, three's a crowd: a case study of crowdsourcing software development",135,2014
Does latitude hurt while longitude kills? geographical and temporal separation in a large scale software development project,10,2014
Software engineering at the speed of light: how developers stay current using twitter,79,2014
Building it together: synchronous development in OSS,28,2014
"A critical review of ""automatic patch generation learned from human-written patches"": essay on the problem statement and the evaluation of automatic software repair",,2014
Data-guided repair of selection statements,26,2014
The strength of random search on automated program repair,181,2014
MintHint: automated synthesis of repair hints,70,2014
Mining behavior models from user-intensive web applications,68,2014
Reviser: efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes,27,2014
Automated design of self-adaptive software with control-theoretical formal guarantees,124,2014
Perturbation analysis of stochastic systems with empirical distribution parameters,13,2014
How do centralized and distributed version control systems impact software changes?,77,2014
"Transition from centralized to decentralized version control systems: a case study on reasons, barriers, and outcomes",35,2014
An exploratory study of the pull-based software development model,280,2014
Influence of social and technical factors for evaluating contribution in GitHub,198,2014
Understanding JavaScript event-based interactions,58,2014
Understanding understanding source code with functional magnetic resonance imaging,96,2014
Improving automated source code summarization via an eye-tracking study of programmers,97,2014
Using psycho-physiological measures to assess task difficulty in software development,123,2014
Dictionary learning based software defect prediction,93,2014
Comparing static bug finders and statistical prediction,67,2014
Coverage is not strongly correlated with test suite effectiveness,255,2014
How to make best use of cross-company data in software effort estimation?,41,2014
CARE: cache guided deterministic replay for concurrent Java programs,22,2014
Inferring models of concurrent systems from logs of their behavior with CSight,87,2014
Unleashing concurrency for irregular data structures,6,2014
ConLock: a constraint-based approach to dynamic checking on deadlocks in multithreaded programs,44,2014
SEEDS: a software engineer's energy-optimization decision support framework,126,2014
APE: an annotation language and middleware for energy-efficient mobile application development,34,2014
Making web applications more energy efficient for OLED smartphones,93,2014
Micro execution,38,2014
Unit test virtualization with VMVM,48,2014
Interpolated n-grams for model based testing,27,2014
An analysis of the relationship between conditional entropy and failed error propagation in software testing,33,2014
Trading robustness for maintainability: an empirical study of evolving c# programs,29,2014
Case studies and tools for contract specifications,21,2014
Using dynamic analysis to generate disjunctive invariants,22,2014
Inductive verification of data model invariants for web applications,16,2014
How do API documentation and static typing affect API usability?,50,2014
Live API documentation,150,2014
CodeHint: dynamic and interactive synthesis of code snippets,80,2014
Spotting working code examples,72,2014
Self-adaptation through incremental generative model transformations at runtime,39,2014
"Hope for the best, prepare for the worst: multi-tier control for adaptive systems",40,2014
Brownout: building more robust cloud applications,117,2014
Integrating adaptive user interface capabilities in enterprise applications,17,2014
Programmers' build errors: a case study (at google),85,2014
Understanding and improving software build teams,19,2014
Towards efficient optimization in package management systems,18,2014
Easing software component repository evolution,8,2014
AR-miner: mining informative reviews for developers from mobile app marketplace,285,2014
Mining billions of AST nodes to study actual and potential usage of Java language features,66,2014
"Mining interprocedural, data-oriented usage patterns in JavaScript web applications",16,2014
Mining fine-grained code changes to detect unknown change patterns,73,2014
Detecting memory leaks through introspective dynamic behavior modelling using machine learning,18,2014
Automated memory leak detection for production use,26,2014
Vejovis: suggesting fixes for JavaScript faults,39,2014
Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation,30,2014
"Us and them: a study of privacy requirements across north america, asia, and europe",25,2014
Distilling privacy requirements for mobile applications,26,2014
"Uncertainty, risk, and information value in software requirements and architecture",72,2014
Requirements fixation,36,2014
Exploring variability-aware execution for testing plugin-based web applications,77,2014
A study of equivalent and stubborn mutation operators using human analysis of equivalence,105,2014
Cross-checking oracles from intrinsic software redundancy,33,2014
Mind the gap: assessing the conformance of software traceability to relevant guidelines,51,2014
Effects of using examples on structural model comprehension: a controlled experiment,16,2014
Design rule spaces: a new form of architecture insight,52,2014
Controlled modeling environment using flexibly-formatted spreadsheets,2,2014
Feature maintenance with emergent interfaces,31,2014
Detecting performance anti-patterns for applications developed using object-relational mapping,79,2014
Characterizing and detecting performance bugs for smartphone applications,170,2014
Checking app behavior against app descriptions,297,2014
AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction,171,2014
Patch verification via multiversion interprocedural control flow graphs,21,2014
Property differencing for incremental checking,30,2014
Symbolic assume-guarantee reasoning through BDD learning,6,2014
Enhancing symbolic execution with veritesting,175,2014
Manual refactoring changes with automated refactoring validation,43,2014
Alternate refactoring paths reveal usability problems,18,2014
A study and toolkit for asynchronous programming in c#,46,2014
Reuse-oriented reverse engineering of functional components from x86 binaries,15,2014
Automatic synthesis of modular connectors via composition of protocol mediation patterns,40,2013
Robust reconfigurations of component assemblies,47,2013
Drag-and-drop refactoring: intuitive and efficient program transformation,42,2013
Managing non-functional uncertainty via model-driven adaptivity,85,2013
GuideArch: guiding the exploration of architectural solution space under uncertainty,39,2013
Coupling software architecture and human architecture for collaboration-aware system adaptation,13,2013
Learning revised models for planning in adaptive systems,50,2013
RERAN: timing- and touch-sensitive record and replay for Android,263,2013
Inferring likely mappings between APIs,41,2013
Estimating mobile application energy consumption using program analysis,240,2013
Observable modified Condition/Decision coverage,40,2013
Creating a shared understanding of testing culture on a social coding site,111,2013
Billions and billions of constraints: whitebox fuzz testing in production,136,2013
Feedback-directed unit test generation for C/C++ using concolic execution,37,2013
A learning-based method for combining testing techniques,15,2013
Human performance regression testing,13,2013
Guided test generation for web applications,44,2013
Comparing multi-point stride coverage and dataflow coverage,20,2013
Interaction-based test-suite minimization,35,2013
Bridging the gap between the total and additional test-case prioritization strategies,119,2013
Detecting spurious counterexamples efficiently in abstract model checking,17,2013
Segmented symbolic analysis,18,2013
Explicating symbolic execution (xSymExe): an evidence-based verification framework,9,2013
Aluminum: principled scenario exploration through minimality,51,2013
Counter play-out: executing unrealizable scenario-based specifications,14,2013
Unifying FSM-inference algorithms through declarative specification,46,2013
What good are strong specifications?,46,2013
Comparative causality: explaining the differences between executions,36,2013
Automatic testing of sequential and concurrent substitutability,19,2013
Data clone detection and visualization in spreadsheets,59,2013
Partition-based regression verification,42,2013
Automated diagnosis of software configuration errors,94,2013
Detecting deadlock in programs with data-centric synchronization,24,2013
The design of bug fixes,48,2013
PorchLight: a tag-based approach to bug triaging,25,2013
Expositor: scriptable time-travel debugging with first-class traces,35,2013
Chronicler: lightweight recording to reproduce field failures,41,2013
Does bug prediction support human developers? findings from a google case study,74,2013
Transfer defect learning,247,2013
"It's not a bug, it's a feature: how misclassification impacts bug prediction",248,2013
Assisting developers of big data analytics applications when deploying on hadoop clouds,100,2013
Broken sets in software repository evolution,18,2013
Boa: a language and infrastructure for analyzing ultra-large-scale software repositories,235,2013
"How, and why, process metrics are better",176,2013
The role of domain knowledge and cross-functional communication in socio-technical coordination,29,2013
Dual ecological measures of focus in software development,72,2013
Not going to take this anymore: multi-objective overtime planning for software engineering projects,61,2013
Beyond boolean product-line model checking: dealing with feature attributes and multi-features,80,2013
Strategies for product-line verification: case studies and experiments,130,2013
On the value of user preferences in search-based software engineering: a case study in software product lines,187,2013
LASE: locating and applying systematic edits by learning from examples,131,2013
Search-based genetic optimization for deployment and reconfiguration of software in the cloud,122,2013
How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms,205,2013
Green streams for data-intensive software,27,2013
Dynamic synthesis of local time requirement for service composition,25,2013
Supporting swift reaction: automatically uncovering performance problems by systematic experiments,53,2013
Toddler: detecting performance problems via similar memory-access patterns,117,2013
Departures from optimality: understanding human analyst's information foraging in assisted requirements tracing,32,2013
Analysis of user comments: an approach for software requirements evolution,223,2013
Requirements modelling by synthesis of deontic input-output automata,21,2013
Automated reliability estimation over partial systematic explorations,14,2013
Safe software updates via multi-version execution,72,2013
Reliability analysis in symbolic pathfinder,86,2013
Engineering adaptive privacy: on the role of privacy awareness requirements,41,2013
Mining SQL injection and cross site scripting vulnerabilities using hybrid program analysis,76,2013
Path sensitive static analysis of web applications for remote code execution vulnerability detection,50,2013
Automated software architecture security risk analysis using formalized signatures,55,2013
Why don't software developers use static analysis tools to find bugs?,287,2013
Exploring the impact of inter-smell relations on software maintainability: an empirical study,125,2013
An empirical study on the developers' perception of software coupling,87,2013
X-PERT: accurate identification of cross-browser issues in web applications,96,2013
"Expectations, outcomes, and challenges of modern code review",355,2013
UML in practice,206,2013
Cassandra: proactive conflict minimization through optimized task scheduling,48,2013
Are your incoming aliases really necessary? counting the cost of object ownership,10,2013
Efficient construction of approximate call graphs for JavaScript IDE services,86,2013
Improving feature location practice with multi-faceted interactive exploration,39,2013
SemFix: program repair via semantic analysis,357,2013
Automatic recovery from runtime failures,86,2013
Program transformations to fix C integers,57,2013
Automatic patch generation learned from human-written patches,382,2013
Reverb: recommending code-related web pages,38,2013
Dynamic injection of sketching features into GEF based diagram editors,6,2013
Discovering essential code elements in informal documentation,119,2013
Automatic query reformulations for text retrieval in software engineering,128,2013
"Technical debt: past, present, and future (panel)",,2013
Scaling agile methods to regulated environments: an industry case study,,2013
"Agility at scale: economic governance, measured improvement, and disciplined delivery",,2013
Distributed development considered harmful?,,2013
Measuring architecture quality by structure plus history analysis,,2013
Obtaining ground-truth software architectures,,2013
MIDAS: a design quality assessment method for industrial software,,2013
Evaluating usefulness of software metrics: an industrial experience report,,2013
Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation,,2013
Estimating software-intensive projects in the absence of historical data,,2013
Pathways to technology transfer and adoption: achievements and challenges (mini-tutorial),,2013
User involvement in software evolution practice: a case study,,2013
A characteristic study on failures of production distributed data-parallel programs,,2013
Is time-zone proximity an advantage for software development? the case of the brazilian IT industry,,2013
A study of enabling factors for rapid fielding: combined practices to balance speed and stability,,2013
JST: an automatic test generation tool for industrial Java applications with strings,,2013
Efficient and change-resilient test automation: an industrial case study,32,2013
Automatic detection of performance deviations in the load testing of large scale systems,,2013
Detecting inconsistencies in wrappers: a case study,,2013
Categorizing bugs with social networks: a case study on four open source software communities,86,2013
Predicting bug-fixing time: an empirical study of commercial software projects,,2013
Authentic assessment in software engineering education based on PBL principles: a case study in the telecom market,,2013
Studios in software engineering education: towards an evaluable model,,2013
Enabling a classroom design studio with a collaborative sketch design tool,,2013
A framework to evaluate software engineering student contests: evaluation and integration with academic programs,,2013
An evaluation of interactive test-driven labs with WebIDE in CS0,,2013
POPT: a problem-oriented programming and testing approach for novice students,,2013
Teaching developer skills in the first software engineering course,,2013
Teaching and learning programming and software engineering via interactive gaming,,2013
Town hall discussion of SE 2004 revisions (panel),,2013
Teaching students global software engineering skills using distributed scrum,,2013
Teaching software process modeling,,2013
Industry involvement in ICT curriculum: a comparative survey,,2013
Vulnerability of the day: concrete demonstrations for software engineering undergraduates,,2013
Eliminative induction: a basis for arguing system confidence,,2013
Exploring the internal state of user interfaces by combining computer vision techniques with grammatical inference,,2013
Semantic smells and errors in access control models: a case study in PHP,,2013
Practical semantic test simplification,,2013
Understanding regression failures through test-passing and test-failing code changes,,2013
Temporal code completion and navigation,,2013
Situational awareness: personalizing issue tracking systems,,2013
GROPG: a graphical on-phone debugger,,2013
Why did this code change?,,2013
Deciphering the story of software development through frequent pattern mining,,2013
Liberating pair programming research from the oppressive Driver/Observer regime,,2013
Pricing crowdsourcing-based software development tasks,,2013
Building test suites in social coding sites by leveraging drive-by commits,,2013
Supporting application development with structured queries in the cloud,,2013
Hunting for smells in natural language tests,,2013
Bottom-up model-driven development,,2013
An approach for restructuring text content,,2013
A case for human-driven software development,,2013
A framework for managing cloned product variants,,2013
Sketching software in the wild,,2013
On extracting unit tests from interactive live programming sessions,,2013
Towards automated testing and fixing of re-engineered feature models,,2013
Computational alignment of goals and scenarios for complex systems,,2013
Service networks for development communities,,2013
Formal specifications better than function points for code sizing,,2013
Using mutation analysis for a model-clone detector comparison framework,,2013
On the relationships between domain-based coupling and code clones: an exploratory study,,2013
Quantitative program slicing: separating statements by relevance,,2013
Example-driven modeling: model = abstractions + examples,,2013
Towards recognizing and rewarding efficient developer work patterns,,2013
Selecting checkpoints along the time line: a novel temporal checkpoint selection strategy for monitoring a batch of parallel business processes,,2013
LAMBDAFICATOR: from imperative to functional programming through automated refactoring,,2013
JITTAC: a just-in-time tool for architectural consistency,,2013
Seahawk: stack overflow in the IDE,,2013
DRC: a detection tool for dangling references in PHP-based web applications,,2013
TestEvol: a tool for analyzing test-suite evolution,,2013
Query quality prediction and reformulation for source code search: the refoqus tool,14,2013
A large scale Linux-kernel based benchmark for feature location research,,2013
NavClus: a graphical recommender for assisting code exploration,,2013
LASE: an example-based program transformation tool for locating and applying systematic edits,,2013
CEL: modeling everywhere,,2013
V:ISSUE:LIZER: exploring requirements clarification in online communication over time,,2013
YODA: young and newcomer developer assistant,,2013
RADAR: a tool for debugging regression problems in C/C++ software,,2013
MCT: a tool for commenting programs by multimedia comments,,2013
Memoise: a tool for memoized symbolic execution,,2013
Controller synthesis: from modelling to enactment,,2013
A study of variability spaces in open source software,,2013
Implementing database access control policy from unconstrained natural language text,,2013
Increasing anomaly handling efficiency in large organizations using applied machine learning,,2013
Analyzing the change-proneness of service-oriented systems from an industrial perspective,3,2013
Supporting maintenance tasks on transformational code generation environments,,2013
An approach to documenting and evolving architectural design decisions,,2013
An observable and controllable testing framework for modern systems,,2013
Toward a software product line for affective-driven self-adaptive systems,,2013
Normalizing source code vocabulary to support program comprehension and software quality,,2013
"Integrating systematic exploration, analysis, and maintenance in software development",,2013
Fostering software quality assessment,,2013
A framework for self-healing software systems,,2013
Building high assurance secure applications using security patterns for capability-based platforms,,2013
Systematically selecting a software module during opportunistic reuse,,2013
Informing development decisions: from data to information,,2013
Understanding and simulating software evolution,,2013
An ontology toolkit for problem domain concept location in program comprehension,,2013
Measuring the forensic-ability of audit logs for nonrepudiation,,2013
SNIPR: complementing code search with code retargeting capabilities,,2013
Supporting incremental programming with ghosts,,2013
Novice understanding of program analysis tool notifications,,2013
Energy aware self-adaptation in mobile systems,,2013
ConfDiagnoser: an automated configuration error diagnosis tool for Java software,,2013
Reproducing and debugging field failures in house,,2013
Fault comprehension for concurrent programs,,2013
A proposal for the improvement of project's cost predictability using EVM and historical data of cost,,2013
Studying the effect of co-change dispersion on software quality,,2013
A roadmap for software maintainability measurement,,2013
Reasoning with qualitative preferences to develop optimal component-based systems,,2013
From models to code and back: correct-by-construction code from UML and ALF,,2013
Mitigating the obsolescence of specification models of service-based systems,,2013
Decision theoretic requirements prioritization: a two-step approach for sliding towards value realization,,2013
Changeset based developer communication to detect software failures,,2013
Identifying failure inducing developer pairs within developer networks,,2013
On identifying user complaints of iOS apps,,2013
"Automated testing of GUI applications: models, tools, and controlling flakiness",,2013
Build your own model checker in one month,,2013
Data science for software engineering,,2013
Software analytics: achievements and challenges,,2013
Developing verified programs with dafny,,2013
Software metrics: pitfalls and best practices,,2013
Efficient quality assurance of variability-intensive systems,,2013
Software requirement patterns,,2013
1st international workshop on assurance cases for software-intensive systems (ASSURE 2013),,2013
8th international workshop on automation of software test (AST 2013),,2013
1st international workshop on combining modelling and search-based software engineering (CMSBSE 2013),,2013
3rd international workshop on collaborative teaching of globally distributed software development (CTGDSD 2013),,2013
2nd SEMAT workshop on a general theory of software engineering (GTSE 2013),,2013
1st international workshop on live programming (LIVE 2013),,2013
1st international workshop on the engineering of mobile-enabled systems (MOBS 2013),,2013
4th international workshop on managing technical debt (MTD 2013),,2013
1st international workshop on natural language analysis in software engineering (NaturaLiSE 2013),,2013
4th international workshop on product LinE approaches in software engineering (PLEASE 2013),,2013
1st international workshop on release engineering (RELENG 2013),,2013
5th international workshop on software engineering for computational science and engineering (SE-CSE 2013),,2013
5th international workshop on software engineering in health care (SEHC 2013),,2013
2nd international workshop on the twin peaks of requirements and architecture (TwinPeaks 2013),,2013
2nd international workshop on user evaluations for software engineering researchers (USER 2013),,2013
A systematic study of automated program repair: fixing 55 out of 105 bugs for $8 each,395,2012
Where should the bugs be fixed? - more accurate information retrieval-based bug localization based on bug reports,332,2012
Developer prioritization in bug repositories,125,2012
WhoseFault: automatic developer-to-fault assignment through fault localization,50,2012
Recovering traceability links between an API and its learning resources,108,2012
Generating range fixes for software configuration,96,2012
"Graph-based pattern-oriented, context-sensitive source code completion",115,2012
Automatic input rectification,56,2012
Overcoming the challenges in cost estimation for distributed software projects,33,2012
Characterizing logging practices in open-source software,115,2012
The impacts of software process improvement on developers: a systematic review,,2012
Combining functional and imperative programming for multicore software: an empirical study evaluating Scala and Java,50,2012
Uncovering performance problems in Java applications with reference propagation profiling,52,2012
Performance debugging in the large via mining millions of stack traces,144,2012
Automatically finding performance problems with feedback-directed learning software testing,94,2012
Predicting performance via automated feature-interaction detection,154,2012
Sound empirical evidence in software testing,124,2012
Privacy and utility for defect prediction: experiments with MORPH,42,2012
Bug prediction based on fine-grained module histories,80,2012
Reconciling manual and automatic refactoring,90,2012
WitchDoctor: IDE support for real-time auto-completion of refactorings,72,2012
"Use, disuse, and misuse of automated refactorings",123,2012
Test confessions: a study of testing practices for plug-in systems,59,2012
How do professional developers comprehend software?,147,2012
Asking and answering questions about unfamiliar APIs: an exploratory study,75,2012
Automated repair of HTML generation errors in PHP applications using string constraint solving,104,2012
Leveraging test generation and specification mining for automated bug detection without false positives,57,2012
Axis: automatically fixing atomicity violations through solving control constraints,72,2012
CBCD: cloned buggy code detector,84,2012
Crosscutting revision control system,5,2012
Where does this code come from and where does it go? - integrated code history tracker for open source systems -,31,2012
Improving early detection of software merge conflicts,93,2012
A history-based matching approach to identification of framework evolution,62,2012
Detecting similar software applications,105,2012
Content classification of development emails,79,2012
Identifying Linux bug fixing patches,90,2012
Active refinement of clone anomaly reports,30,2012
Automated analysis of CSS rules to support style maintenance,48,2012
Graph-based analysis and prediction for software evolution,172,2012
Integrated impact analysis for managing software changes,124,2012
Detecting and visualizing inter-worksheet smells in spreadsheets,115,2012
An empirical study about the effectiveness of debugging when random test cases are used,17,2012
Reducing confounding bias in predicate-level statistical debugging metrics,35,2012
BugRedux: reproducing field failures for in-house debugging,147,2012
Object-centric debugging,62,2012
Disengagement in pair programming: does it matter?,16,2012
Ambient awareness of build status in collocated software teams,22,2012
What make long term contributors: willingness and opportunity in OSS community,104,2012
Development of auxiliary functions: should you be agile? an empirical assessment of pair programming and test-first programming,21,2012
Maintaining invariant traceability through bidirectional transformations,46,2012
Slicing MATLAB simulink models,59,2012
Partial evaluation of model transformations,16,2012
Partial models: towards modeling and reasoning with uncertainty,113,2012
Static detection of resource contention problems in server-side scripts,23,2012
Amplifying tests to validate exception handling code,20,2012
MagicFuzzer: scalable deadlock detection for large-scale applications,68,2012
Does organizing security patterns focus architectural choices?,30,2012
Enhancing architecture-implementation conformance with change management and support for behavioral mapping,30,2012
A tactic-centric approach for automating traceability of quality concerns,74,2012
Build code analysis with symbolic evaluation,52,2012
An automated approach to generating efficient constraint solvers,12,2012
Simulation-based abstractions for software product-line model checking,60,2012
Using dynamic analysis to discover polynomial and array invariants,66,2012
Metadata invariants: checking and inferring metadata coding conventions,15,2012
Generating obstacle conditions for requirements completeness,34,2012
make test-zesti: a symbolic execution solution for improving regression testing,66,2012
BALLERINA: automatic generation and clustering of efficient random unit tests for multithreaded code,51,2012
On-demand test suite reduction,68,2012
Automated detection of client-state manipulation vulnerabilities,16,2012
Understanding integer overflow in C/C++,141,2012
A large scale exploratory analysis of software vulnerability life cycles,115,2012
Synthesizing API usage examples,136,2012
Semi-automatically extracting FAQs to improve accessibility of software development knowledge,47,2012
Temporal analysis of API usage concepts,43,2012
Inferring method specifications from natural language API descriptions,113,2012
Automatic parameter recommendation for practical API usage,90,2012
On the naturalness of software,405,2012
Recommending source code for use in rapid software prototypes,55,2012
Active code completion,71,2012
"Automated oracle creation support, or: how I learned to stop worrying about fault propagation and love mutation testing",64,2012
Automating test automation,76,2012
Stride: search-based deterministic replay in polynomial time via bounded linkage,29,2012
iTree: efficiently discovering high-coverage configurations using interaction trees,,2012
Inferring class level specifications for distributed systems,24,2012
Statically checking API protocol conformance with mined multi-object specifications,65,2012
Behavioral validation of JFSL specifications through model synthesis,1,2012
Verifying client-side input validation functions using string analysis,24,2012
Specification patterns from research to industry: a case study in service-based applications,,2012
Methodology for migration of long running process instances in a global large scale BPM environment in credit suisse's SOA landscape,,2012
Information needs for software development analytics,,2012
Software analytics in practice: mini tutorial,,2012
Large-scale formal verification in practice: a process perspective,,2012
Constructing parser for industrial software specifications containing formal and natural language description,7,2012
"Formal correctness, safety, dependability, and performance analysis of a satellite",,2012
Goldfish bowl panel: software development analytics,,2012
Making sense of healthcare benefits,,2012
On the proactive and interactive visualization for feature evolution comprehension: an industrial investigation,,2012
Extending static analysis by mining project-specific rules,,2012
Debugger canvas: industrial experience with the code bubbles paradigm,,2012
Characterizing and predicting which bugs get reopened,120,2012
ReBucket: a method for clustering duplicate crash reports based on call stack similarity,,2012
Understanding the impact of pair programming on developers attention: a case study on a large industrial experimentation,,2012
How much does unused code matter for maintenance?,,2012
Using knowledge elicitation to improve web effort estimation: lessons from six industrial case studies,,2012
Efficient reuse of domain-specific test knowledge: an industrial case in the smart card domain,,2012
The quamoco product quality modelling and assessment approach,103,2012
Industrial application of concolic testing approach: a case study on libexif by using CREST-BV and KLEE,,2012
Teaching software engineering and software project management: an integrated and practical approach,,2012
Teaching collaborative software development: a case study,,2012
Using continuous integration of code and content to teach software engineering with limited resources,,2012
Stages in teaching software testing,,2012
Integrating tools and frameworks in undergraduate software engineering curriculum,,2012
What scope is there for adopting evidence-informed teaching in SE?,18,2012
FOCUS: an adaptation of a SWEBOK-based curriculum for industry requirements,,2012
Ten tips to succeed in global software engineering education,,2012
Collaboration patterns in distributed software development projects,,2012
Improving PSP education by pairing: an empirical study,,2012
Five days of empirical software engineering: the PASED experience,,2012
Automatically detecting developer activities and problems in software development work,,2012
Software process improvement through the identification and removal of project-level knowledge flow obstacles,,2012
Symbiotic general-purpose and domain-specific languages,,2012
Evaluating the specificity of text retrieval queries to support software engineering tasks,,2012
Co-adapting human collaborations and software architectures,,2012
Release engineering practices and pitfalls,,2012
Augmented intelligence - the new AI - unleashing human capabilities in knowledge work,,2012
On how often code is cloned across repositories,,2012
Mining input sanitization patterns for predicting SQL injection and cross site scripting vulnerabilities,,2012
Inferring developer expertise through defect analysis,,2012
Green mining: investigating power consumption across versions,,2012
Multi-label software behavior learning,,2012
Trends in object-oriented software evolution: investigating network properties,,2012
Exploring techniques for rationale extraction from existing documents,,2012
Continuous social screencasting to facilitate software tool discovery,,2012
UDesignIt: towards social media for community-driven design,,2012
Influencing the adoption of software engineering methods using social software,,2012
"Toward actionable, broadly accessible contests in software engineering",,2012
CodeTimeline: storytelling with versioning data,,2012
Analyzing multi-agent systems with probabilistic model checking approach,8,2012
Brace: an assertion framework for debugging cyber-physical systems,,2012
Augmenting test suites effectiveness by increasing output diversity,,2012
Improving IDE recommendations by considering global implications of existing recommendations,,2012
Towards flexible evolution of dynamically adaptive systems,,2012
Towards business processes orchestrating the physical enterprise with wireless sensor networks,,2012
Engineering and verifying requirements for programmable self-assembling nanomachines,,2012
Facilitating communication between engineers with CARES,,2012
Interactive refinement of combinatorial test plans,,2012
"TraceLab: an experimental workbench for equipping researchers to innovate, synthesize, and comparatively evaluate traceability solutions",,2012
Specification engineering and modular verification using a web-integrated verifying compiler,,2012
Writing dynamic service orchestrations with DSOL,,2012
MASH: a tool for end-user plug-in composition,,2012
BabelRef: detection and renaming tool for cross-language program entities in dynamic web applications,,2012
MDSheet: a framework for model-driven spreadsheet engineering,,2012
WorkItemExplorer: visualizing software development tasks using an interactive exploration environment,,2012
Runtime monitoring of component changes with Spy@Runtime,,2012
"GraPacc: a graph-based pattern-oriented, context-sensitive code completion tool",,2012
Code bubbles: a practical working-set programming environment,,2012
EVOSS: a tool for managing the evolution of free and open source software systems,,2012
Supporting extract class refactoring in eclipse: the ARIES project,,2012
EXSYST: search-based GUI testing,,2012
JavaMOP: efficient parametric runtime monitoring framework,,2012
Augmenting test suites automatically,,2012
Using the GPGPU for scaling up mining software repositories,,2012
FastFix: monitoring control for remote software maintenance,,2012
Modeling cloud performance with kriging,,2012
SOA adoption in the italian industry,,2012
A bidirectional model-driven spreadsheet environment,,2012
A self-healing technique for Java applications,,2012
When open source turns cold on innovation - the challenges of navigating licensing complexities in new research domains,,2012
Language modularity with the MPS language workbench,,2012
Mining application repository to recommend XML configuration snippets,,2012
Locating features in dynamically configured avionics software,,2012
Detecting metadata bugs on the fly,,2012
Blaze,,2012
ConTexter feedback system,,2012
xMapper: an architecture-implementation mapping tool,,2012
ConcernReCS: finding code smells in software aspectization,,2012
Egidio: a non-invasive approach for synthesizing organizational models,,2012
SDiC: context-based retrieval in eclipse,,2012
An integrated bug processing framework,,2012
Repository for model driven development (ReMoDD),,2012
Going global with agile service networks,,2012
Using structural and semantic information to support software refactoring,,2012
An approach to variability management in service-oriented product lines,,2012
Using machine learning to enhance automated requirements model transformation,,2012
Security testing of web applications: a research plan,,2012
Application of self-adaptive techniques to federated authorization models,,2012
Improving information retrieval-based concept location using contextual relationships,,2012
Effective specification of decision rights and accountabilities for better performing software engineering projects,,2012
Search based design of software product lines architectures,,2012
Software fault localization based on program slicing spectrum,,2012
Architectural task allocation in distributed environment: a traceability perspective,,2012
Using invariant relations in the termination analysis of while loops,,2012
Software regression as change of input partitioning,,2012
A generic methodology to derive domain-specific performance feedback for developers,,2012
Towards the verification of multi-diagram UML models,,2012
Documenting and sharing knowledge about code,,2012
Timely and efficient facilitation of coordination of software developers' activities,,2012
Stack layout transformation: towards diversity for securing binary programs,,2012
Synthesis of event-based controllers: a software engineering challenge,,2012
Empirically researching development of international software,,2012
Model translations among big-step modeling languages,,2012
HARPPIE: hyper algorithmic recipe for productive parallelism intensive endeavors,,2012
On the analysis of evolution of software artefacts and programs,1,2012
Societal computing,,2012
Finding suitable programs: semantic search with incomplete and lightweight specifications,,2012
Certification-based development of critical systems,,2012
Testing and debugging UML models based on fUML,,2012
Bridging the divide between software developers and operators using logs,,2012
The co-evolution of socio-technical structures in sustainable software development: lessons from the open source software communities,,2012
Log-based testing,,2012
Moving mobile applications between mobile devices seamlessly,,2012
Timely detection of coordination requirements to support collaboration among software developers,,2012
Improving failure-inducing changes identification using coverage analysis,,2012
A study on improving static analysis tools: why are we not using them?,,2012
Winbook: a social networking based framework for collaborative requirements elicitation and WinWin negotiations,,2012
Using automatic static analysis to identify technical debt,,2012
Coupled evolution of model-driven spreadsheets,,2012
Managing evolution of software product line,,2012
Enabling dynamic metamodels through constraint-driven modeling,,2012
Assisting end-user development in browser-based mashup tools,,2012
"Hot clones: combining search-driven development, clone management, and code provenance",,2012
Capturing and exploiting fine-grained IDE interactions,,2012
Restructuring unit tests with TestSurgeon,,2012
A requirements-based approach for the design of adaptive systems,,2012
Petri nets state space analysis in the cloud,,2012
Mining Java class identifier naming conventions,,2012
Online sharing and integration of results from mining software repositories,,2012
Refounding software engineering: the semat initiative (invited presentation),,2012
Autofolding for Source Code Summarization,17,2017
AutoSense: A Framework for Automated Sensitivity Analysis of Program Data,5,2017
On the Positive Effect of Reactive Programming on Software Comprehension: An Empirical Study,14,2017
Reasoning About Identifier Spaces: How to Make Chord Correct,7,2017
Semantics-Based Obfuscation-Resilient Binary Code Similarity Comparison with Applications to Software and Algorithm Plagiarism Detection,,2017
"The Work Life of Developers: Activities, Switches and Perceived Productivity",33,2017
Language Inclusion Checking of Timed Automata with Non-Zenoness,0,2017
Model Transformation Modularization as a Many-Objective Optimization Problem,21,2017
Testing from Partial Finite State Machines without Harmonised Traces,4,2017
Using Natural Language Processing to Automatically Detect Self-Admitted Technical Debt,36,2017
When and Why Your Code Starts to Smell Bad (and Whether the Smells Go Away),45,2017
Clarifications on the Construction and Use of the ManyBugs Benchmark,1,2017
"Comments on ScottKnottESD in response to ""An empirical comparison of model validation techniques for defect prediction models""",,2017
Adaptive Multi-Objective Evolutionary Algorithms for Overtime Planning in Software Projects,18,2017
Automated Extraction and Clustering of Requirements Glossary Terms,8,2017
Deriving Bisimulation Relations from Path Extension Based Equivalence Checkers,1,2017
Identifying Extract Method Refactoring Opportunities Based on Functional Relevance,11,2017
Software Numerical Instability Detection and Diagnosis by Combining Stochastic and Infinite-Precision Testing,4,2017
A Qualitative Study of Application-Level Caching,9,2017
A Survey of App Store Analysis for Software Engineering,,2017
Reporting Usability Defects: A Systematic Literature Review,,2017
Static Analysis of Model Transformations,25,2017
Automatic Contract Insertion with CCBot,4,2017
GK-Tail+ An Efficient Approach to Learn Software Models,11,2017
Imprecise Matching of Requirements Specifications for Software Services Using Fuzzy Logic,7,2017
Locating Software Faults Based on Minimum Debugging Frontier Set,5,2017
Preventing Defects: The Impact of Requirements Traceability Completeness on Software Quality,25,2017
A Dissection of the Test-Driven Development Process: Does It Really Matter to Test-First or to Test-Last?,35,2017
A Feature-Based Classification of Model Repair Approaches,22,2017
Keyword Search for Building Service-Based Systems,11,2017
Supporting Change Impact Analysis Using a Recommendation System: An Industrial Case Study in a Safety-Critical Context,25,2017
A Taxonomy and Qualitative Comparison of Program Analysis Techniques for Security Assessment of Android Software,,2017
Automated Steering of Model-Based Test Oracles to Admit Real Program Behaviors,7,2017
Online Reliability Prediction via Motifs-Based Dynamic Bayesian Networks for Service-Oriented Systems,13,2017
The Value of Exact Analysis in Requirements Selection,15,2017
Approaches to Co-Evolution of Metamodels and Models: A Survey,19,2017
A System for Profiling and Monitoring Database Access Patterns by Application Programs for Anomaly Detection,13,2017
Model-Based Self-Aware Performance and Resource Management Using the Descartes Modeling Language,38,2017
Self-Adaptive and Online QoS Modeling for Cloud-Based Software Services,18,2017
The Use of Summation to Aggregate Software Metrics Hinders the Performance of Defect Prediction Models,27,2017
An Enhanced Bailout Protocol for Mixed Criticality Embedded Software,16,2017
An Improved SDA Based Defect Prediction Framework for Both Within-Project and Cross-Project Class-Imbalance Problems,42,2017
Efficient Dynamic Updates of Distributed Components Through Version Consistency,9,2017
Mining Sequences of Developer Interactions in Visual Studio for Usage Smells,17,2017
Test Oracle Strategies for Model-Based Testing,21,2017
Automating Live Update for Generic Server Programs,7,2017
CACheck: Detecting and Repairing Cell Arrays in Spreadsheets,14,2017
Dependence Guided Symbolic Execution,17,2017
Improving Automated Bug Triaging with Specialized Topic Model,38,2017
ARENA: An Approach for the Automated Generation of Release Notes,19,2017
A Study of Causes and Consequences of Client-Side JavaScript Bugs,14,2017
Automated Synthesis and Dynamic Analysis of Tradeoff Spaces for Object-Relational Mapping,6,2017
DECAF: A Platform-Neutral Whole-System Dynamic Binary Analysis Platform,17,2017
How Social and Communication Channels Shape and Challenge a Participatory Culture in Software Development,59,2017
An Empirical Comparison of Model Validation Techniques for Defect Prediction Models,121,2017
Interaction Models and Automated Control under Partial Observable Environments,5,2017
Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs,140,2017
Process Aspects and Social Dynamics of Contemporary Code Review: Insights from Open Source Development and Industrial Practice at Microsoft,22,2017
Timed Automata Modeling and Verification for Publish-Subscribe Structures Using Distributed Resources,9,2017
A Study of Social Interactions in Open Source Component Use,4,2018
Collaborative Model-Driven Software Engineering: A Classification Framework and a Research Map,,2018
EARMO: An Energy-Aware Refactoring Approach for Mobile Apps,11,2018
Entropy Based Software Reliability Analysis of Multi-Version Open Source Software,5,2018
On the Use of Hidden Markov Model to Predict the Time to Fix Bugs,4,2018
Revisiting the Performance Evaluation of Automated Approaches for the Retrieval of Duplicate Issue Reports,9,2018
Tracking Load-Time Configuration Options,43,2018
Data Scientists in Software Teams: State of the Art and Challenges,18,2018
Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases,33,2018
Expanding Queries for Code Search Using Semantically Related API Class-names,3,2018
Metamorphic Testing of RESTful Web APIs,11,2018
Predicting Future Developer Behavior in the IDE Using Topic Models,5,2018
Using Local Clocks to Reproduce Concurrency Bugs,0,2018
Authors’ Reply to “Comments on ‘Researcher Bias: The Use of Machine Learning in Software Defect Prediction’”,,2018
A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion,8,2018
Coordination Challenges in Large-Scale Software Development: A Case Study of Planning Misalignment in Hybrid Settings,13,2018
Measuring Program Comprehension: A Large-Scale Field Study with Professionals,18,2018
The Scent of a Smell: An Extensive Comparison Between Textual and Structural Smells,26,2018
Two-Phase Assessment Approach to Improve the Efficiency of Refactoring Identification,1,2018
A Comparative Study to Benchmark Cross-Project Defect Prediction Approaches,28,2018
Enhancing the Description-to-Behavior Fidelity in Android Apps with Privacy Policy,11,2018
Global-Aware Recommendations for Repairing Violations in Exception Handling,5,2018
Heterogeneous Defect Prediction,95,2018
Towards Prioritizing Documentation Effort,4,2018
A Comparison of Program Comprehension Strategies by Blind and Sighted Programmers,3,2018
A Formal Specification and Verification Framework for Timed Security Protocols,4,2018
A Survey of Recent Trends in Testing Concurrent Software Systems,,2018
Control-Theoretical Software Adaptation: A Systematic Literature Review,,2018
Effectively Incorporating Expert Knowledge in Automated Software Remodularisation,0,2018
Implementing and Evaluating Candidate-Based Invariant Generation,3,2018
Mining Semantic Loop Idioms,6,2018
On Accelerating Source Code Analysis at Massive Scale,2,2018
On the Semantics of Distributed Reactive Programming: The Cost of Consistency,9,2018
A PVS-Simulink Integrated Environment for Model-Based Analysis of Cyber-Physical Systems,9,2018
MAHAKIL: Diversity Based Oversampling Approach to Alleviate the Class Imbalance Issue in Software Defect Prediction,43,2018
Predicting Delivery Capability in Iterative Software Development,10,2018
Specialising Software for Different Downstream Applications Using Genetic Improvement and Code Transplantation,11,2018
Towards Model Checking Android Applications,9,2018
Are Fix-Inducing Changes a Moving Target? A Longitudinal Case Study of Just-In-Time Defect Prediction,15,2018
Detecting Overly Strong Preconditions in Refactoring Engines,5,2018
Discipline Matters: Refactoring of Preprocessor Directives in the#ifdefHell,15,2018
EnergyPatch: Repairing Resource Leaks to Improve Energy-Efficiency of Android Apps,15,2018
Reviving Sequential Program Birthmarking for Multithreaded Software Plagiarism Detection,7,2018
Detecting Trivial Mutant Equivalences via Compiler Optimisations,23,2018
Hybrid Program Dependence Approximation for Effective Dynamic Impact Prediction,1,2018
Refactoring Inspection Support for Manual Refactoring Edits,3,2018
Understanding Diverse Usage Patterns from Large-Scale Appstore-Service Profiles,19,2018
Automatic Software Refactoring via Weighted Clustering in Method-Level Networks,1,2018
"Choosing Component Origins for Software Intensive Systems: In-House, COTS, OSS or Outsourcing?—A Case Survey",,2018
Complete and Interpretable Conformance Checking of Business Processes,33,2018
Formulating Criticality-Based Cost-Effective Fault Tolerance Strategies for Multi-Tenant Service-Based Systems,8,2018
A Templating System to Generate Provenance,16,2018
Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets,44,2018
Measuring the Impact of Code Dependencies on Software Architecture Recovery Techniques,14,2018
Semantic Slicing of Software Version Histories,22,2018
A Developer Centered Bug Prediction Model,27,2018
Eliminating Path Redundancy via Postconditioned Symbolic Execution,9,2018
Empirical Evaluation of the Impact of Object-Oriented Code Refactoring on Quality Attributes: A Systematic Literature Review,,2018
Test Case Generation for Boolean Expressions by Cell Covering,1,2018
Efficient hybrid typestate analysis by determining continuation-equivalent states,74,2010
Performance modeling in industry: a case study on storage virtualization,,2010
Improving throughput via slowdowns,,2010
A role-based qualification and certification program for software architects: an experience report from Siemens,,2010
Assessments in global software development: a tailorable framework for industrial projects,,2010
Penalty policies in professional software development practice: a multi-method field study,,2010
A modeling language's evolution driven by tight interaction between academia and industry,,2010
Staying afloat in an expanding sea of choices: emerging best practices for eclipse rich client platform development,,2010
Integrating legacy systems with MDE,19,2010
Can clone detection support quality assessments of requirements specifications?,,2010
Comprehending module dependencies and sharing,11,2010
Making defect-finding tools work for you,,2010
Formalization and validation of a subset of the European Train Control System,,2010
Transparent combination of expert and measurement data for defect prediction: an industrial case study,,2010
From scripts to specifications: the evolution of a flight software testing effort,,2010
Experiences in initiating concurrency software research efforts,,2010
A cost-benefit framework for making architectural decisions in a business context,,2010
Social computing networks: a new paradigm for engineering self-adaptive pervasive software systems,,2010
An eclectic approach for change impact analysis,,2010
Domain-specific tailoring of code smells: an empirical study,,2010
CUTA4UML: bridging the gap between informal and formal requirements for dynamic system aspects,,2010
Can we certify systems for freedom from malware,,2010
Using dynamic execution traces and program invariants to enhance behavioral model inference,,2010
Synthesized essence: what game jams teach about prototyping of new software products,,2010
"An analysis of the effects of company culture, education and experience on confirmation bias levels of software developers and testers",,2010
Compose & conquer: modularity for end-users,,2010
Slicing and dicing bugs in concurrent programs,,2010
Requirements reflection: requirements as runtime entities,,2010
"Adinda: a knowledgeable, browser-based IDE",,2010
Code canvas: zooming towards better development environments,,2010
Knowledge transfer in global software development: leveraging acceptance test case specifications,,2010
Dynamic symbolic data structure repair,,2010
Towards better support for the evolution of safety requirements via the model monitoring approach,,2010
Supporting program comprehension with source code summarization,,2010
Detecting recurring and similar software vulnerabilities,,2010
Bridging lightweight and heavyweight task organization: the role of tags in adopting new task categories,,2010
Syde: a tool for collaborative software development,,2010
StakeSource: harnessing the power of crowdsourcing and social networks in stakeholder analysis,101,2010
CoDesign: a highly extensible collaborative software modeling framework,,2010
Flexible architecture conformance assessment with ConQAT,,2010
Visualizing the Java heap,,2010
FLAT3: feature location and textual tracing tool,,2010
Exemplar: EXEcutable exaMPLes ARchive,,2010
LSdiff: a program differencing tool to identify systematic structural differences,,2010
Legacy component integration by the Fujaba real-time tool suite,,2010
BPGen: an automated breakpoint generator for debugging,,2010
Runtime repair of software faults using event-driven monitoring,,2010
TestFul: automatic unit-test generation for Java classes,,2010
End-user requirements blogging with iRequire,,2010
The small project observatory: a tool for reverse engineering software ecosystems,,2010
A research demonstration of code bubbles,,2010
A flexible tool suite for change-aware test-driven development of web applications,,2010
Reverse engineering with the reclipse tool suite,,2010
SOABench: performance evaluation of service-oriented middleware made easy,,2010
SM@RT: representing run-time system data as MOF-compliant models,,2010
Eliminating dead-code from XQuery programs,,2010
EMFStore: a model repository for EMF models,,2010
CUTS: a system execution modeling tool for realizing continuous system integration testing,,2010
"SSG: a model-based development environment for smart, security-aware GUIs",,2010
Managing iterations with UNICASE,,2010
JDF: detecting duplicate bug reports in Jazz,,2010
Using invariant functions and invariant relations to compute loop functions,,2010
LM: a miner for scenario-based specifications,,2010
RAW: runtime automatic workarounds,,2010
Portable secure identity management for software engineering,,2010
Dynamic service quality and resource negotiation for high-availability service-oriented systems,,2010
Zenet: generating and enforcing real-time temporal invariants,,2010
Balancing collaboration and discipline in software development processes,,2010
A proposal for consistency checking in dynamic software product line models using OCL,,2010
Behavioural validation of software engineering artefacts,,2010
Umple: a model-oriented programming language,,2010
An incremental methodology for quantitative software architecture evaluation with probabilistic models,,2010
Synthesize software product line,,2010
Choreography of intelligent e-services,,2010
A framework for handling variants of software models,,2010
Improving wide-area distributed system availability,,2010
Risk assessment on distributed software projects,,2010
VisAr3D: an approach to software architecture teaching based on virtual and augmented reality,,2010
Change impact analysis from business rules,,2010
Software architecture for systems of software intensive systems (S3): the concepts and detection of inter-system relationships,,2010
Formal methods for web services: a taxonomic approach,,2010
Exploratory study of a UML metric for fault prediction,,2010
Feature-oriented requirements modelling,,2010
Automatic enforcement of architectural design rules,,2010
SMT-based bounded model checking for multi-threaded software in embedded systems,,2010
Enhancing collaboration of multi-developer projects with synchronous changes,,2010
SOFAS: software analysis services,,2010
Informal software design knowledge reuse,,2010
The role of emergent knowledge structures in collaborative software development,,2010
Capturing the long-term impact of changes,,2010
Failure preventing recommendations,,2010
Impact analysis for event-based components and systems,,2010
Empirical evaluation of effort on composing design models,,2010
Analysis of execution log files,,2010
Towards end-user enabled web service consumption for Mashups,,2010
Constraint solving techniques for software testing and analysis,,2010
A methodology to support load test analysis,,2010
"SUITE 2010: 2nd International Workshop on Search-Driven Development - Users, Infrastructure, Tools & Evaluation",,2010
New Horizons in Multicore Software Engineering,,2010
The 6th International Workshop on Software Engineering for Secure Systems (SESS'10),,2010
Fifth International Workshop on Sharing and Reusing Architectural Knowledge (SHARK 2010),,2010
First International Workshop on Product Line Approaches in Software Engineering (PLEASE 2010),,2010
Fifth Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS 2010),,2010
Second International Workshop on Software Research and Climate Change,,2010
First International Workshop on <u>Qu</u>antitative St<u>o</u>chastic Models in the <u>V</u>erific<u>a</u>tion and <u>D</u>es<u>i</u>gn of <u>S</u>oftware Systems (QUOVADIS 2010),,2010
RSSE 2010: Second International Workshop on Recommendation Systems for Software Engineering,,2010
Web2SE: First Workshop on Web 2.0 for Software Engineering,,2010
1st International Workshop on Replication in Empirical Software Engineering Research (RESER),,2010
Software Development Governance (SDG) Workshop,,2010
Fourth International Workshop on Software Clones (IWSC),,2010
2010 ICSE International Workshop on Advances and Applications of Problem Orientation (WAAPO-2010),,2010
"Analysing ""people"" problems in requirements engineering",,2010
"Software architecture: foundations, theory, and practice",,2010
Generative software development,,2010
Cloud service engineering,,2010
Bayesian methods for data analysis in software engineering,,2010
Cost effectiveness analysis in software engineering,,2010
Coaching agile software projects: tutorial proposal - ICSE 2010,,2010
Parameterized unit testing: theory and practice,,2010
"The ""physics"" of notations: a scientific approach to designing visual notations in software engineering",,2010
Engineering safety- and security-related requirements for software-intensive systems: tutorial summary,,2010
Using ethnographic methods in software engineering research,,2010
Design science methodology: principles and practice,,2010
Combinatorial test design in practice,,2010
Software architecture and agile software development: a clash of two cultures?,,2010
Code clone detection in practice,,2010
New processes for new horizons: the incremental commitment model,,2010
Mining software engineering data,,2010
QED: a proof system based on reduction and abstraction for the static verification of concurrent software,,2010
Software engineering abstractions for the multi-touch revolution,11,2010
Predicting build outcome with developer interaction in Jazz,,2010
Improved social trustability of code search results,,2010
Test-driven roles for pair programming,,2010
Providing support for creating next generation software architecture languages,,2010
STORM: static unit checking of concurrent programs,,2010
Making program refactoring safer,,2010
Staying aware of relevant feeds in context,,2010
Developing and evaluating the code bubbles metaphor,,2010
Summarizing software concerns,,2010
Commit 2.0: enriching commit comments with visualization,,2010
Helios: impact analysis for event-based components and systems,,2010
Predicting build failures using social network analysis on developer communication,204,2009
How tagging helps bridge the gap between social and technical aspects in software development,81,2009
Tesseract: Interactive visual exploration of socio-technical relationships in software development,177,2009
HOLMES: Effective statistical debugging via efficient path profiling,272,2009
Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization,143,2009
Lightweight fault-localization using multiple coverage types,284,2009
Succession: Measuring transfer of code and developer productivity,56,2009
Predicting faults using the complexity of code changes,485,2009
A case-study on using an Automated In-process Software Engineering Measurement and Analysis system in an industrial environment,58,2009
Using quantitative analysis to implement autonomic IT systems,108,2009
Model evolution by run-time parameter adaptation,276,2009
Taming Dynamically Adaptive Systems using models and aspects,258,2009
Accurate Interprocedural Null-Dereference Analysis for Java,77,2009
The road not taken: Estimating path execution frequency statically,47,2009
Automatic dimension inference and checking for object-oriented programs,16,2009
In-field healing of integration problems with COTS components,33,2009
Modular string-sensitive permission analysis with demand-driven precision,37,2009
License integration patterns: Addressing license mismatches in component-based development,113,2009
Automatic creation of SQL Injection and cross-site scripting attacks,395,2009
Invariant-based automatic testing of AJAX user interfaces,243,2009
"FEATUREHOUSE: Language-independent, automated software composition",258,2009
Automatically capturing source code context of NL-queries for software maintenance and reuse,189,2009
Semantics-based code search,270,2009
Reasoning about edits to feature models,355,2009
Learning operational requirements from goal models,88,2009
Complete and accurate clone detection in graph-based models,142,2009
"How we refactor, and how we know it",,2009
The secret life of bugs: Going past the errors and omissions in software repositories,224,2009
Discovering and representing systematic code changes,172,2009
Improving API documentation usability with knowledge pushing,104,2009
Listening to programmers Taxonomies and characteristics of comments in operating system code,47,2009
Equality and hashing for (almost) free: Generating implementations from abstraction functions,17,2009
Locating need-to-translate constant strings for software internationalization,18,2009
Automatically finding patches using genetic programming,575,2009
FlexSync: An aspect-oriented approach to Java synchronization,22,2009
Effective static deadlock detection,175,2009
Refactoring sequential Java code for concurrency via concurrent libraries,145,2009
Maintaining and evolving GUI-directed test scripts,171,2009
MINTS: A general framework and tool for supporting test-suite minimization,99,2009
Synthesizing intensional behavior models by graph transformation,100,2009
Analyzing critical process models through behavior model synthesis,40,2009
Validation of contracts using enabledness preserving finite state abstractions,22,2009
WISE: Automated test generation for worst-case complexity,102,2009
Taint-based directed whitebox fuzzing,263,2009
Do code clones matter?,419,2009
Mining exception-handling rules as sequence association rules,111,2009
Safe-commit analysis to facilitate team software development,57,2009
Does distributed development affect software quality? An empirical case study of Windows Vista,260,2009
The impact of process choice in high maturity environments: An empirical analysis,29,2009
How to avoid drastic software process change (using stochastic stability),28,2009
UEMan: A tool to manage user evaluation in development environments,,2009
TranStrL: An automatic need-to-translate string locator for software internationalization,,2009
SmartTutor: Creating IDE-based interactive tutorials via editable replay,,2009
A toolset for automated failure analysis,,2009
JUnitMX - A change-aware unit testing tool,,2009
CocoViz with ambient audio software exploration,,2009
ConcernLines: A timeline view of co-occurring concerns,,2009
Alitheia Core: An extensible software quality monitoring platform,,2009
VIDA: Visual interactive debugging,,2009
Feedback-driven requirements engineering: The Heuristic Requirements Assistant,,2009
Ævol: A tool for defining and planning architecture evolution,,2009
Ldiff: An enhanced line differencing tool,,2009
SemDiff: Analysis and recommendation support for API evolution,,2009
CloneDetective - A workbench for clone detection research,125,2009
"Save-IDE - A tool for design, analysis and implementation of component-based embedded systems",,2009
FeatureIDE: A tool framework for feature-oriented software development,218,2009
Synthesis of timed behavior from scenarios in the Fujaba Real-Time Tool Suite,,2009
ContextServ: A platform for rapid and flexible development of context-aware Web services,,2009
ReMan: A pro-active reputation management infrastructure for composite Web services,,2009
ITACA: An integrated toolbox for the automatic composition and adaptation of Web services,,2009
"Michael Freed , Daniel Bryce , Jiaying Shen , Ciaran O'Reilly, Interactive bootstrapped learning for end-user programming, Proceedings of the 7th AAAI Conference on Artificial Intelligence and Smarter Living: The Conquest of Complexity, p.27-32, January 01, 2011",,2010
"Andrei Arusoaie , Dorel Lucanu , Vlad Rusu, Symbolic execution based on language transformation, Computer Languages, Systems and Structures, v.44 n.PA, p.48-71, December 2015",,2010
Analyzing security architectures,25,2010
VikiBuilder: end-user specification and generation of visual wikis,4,2010
Software design sketching with calico,55,2010
Automatically documenting program changes,114,2010
Towards automatically generating summary comments for Java methods,257,2010
Automatic detection of nocuous coordination ambiguities in natural language requirements,50,2010
Flexible and scalable consistency checking on product line variability models,57,2010
Variability modeling in the real: a perspective from the operating systems domain,155,2010
RESISTing reliability degradation through proactive reconfiguration,31,2010
Automatic construction of an effective training set for prioritizing static analysis warnings,,2010
An automated approach for finding variable-constant pairing bugs,6,2010
Deviance from perfection is a better criterion than closeness to evil when identifying risky code,70,2010
"Seamlessly integrated, but loosely coupled: building user interfaces from heterogeneous components",,2010
Tool support for quality-driven development of software architectures,,2010
MiTV: multiple-implementation testing of user-input validators for web applications,,2010
Model comparison with GenericDiff,,2010
Eliminating products to test in a software product line,,2010
A visual interactive debugger based on symbolic execution,,2010
Model-driven reverse engineering of legacy graphical user interfaces,,2010
A two-step technique for extract class refactoring,49,2010
Detecting user-visible failures in AJAX web applications by analyzing users' interaction behaviors,,2010
Architectural style as an independent variable,,2010
Text mining in supporting software systems risk assurance,,2010
JCCD: a flexible and extensible API for implementing custom code clone detectors,,2010
PeerUnit: a framework for testing peer-to-peer systems,,2010
Reconfigurable run-time support for distributed service component architectures,,2010
MoDisco: a generic and extensible framework for model driven reverse engineering,,2010
Tool support for continuous maintenance of state machine models in program code,,2010
Reac2o: a runtime for enterprise system models,,2010
Symbolic PathFinder: symbolic execution of Java bytecode,224,2010
Enumeration refactoring: a tool for automatically converting Java constants to enumerated types,,2010
Verification-driven slicing of UML/OCL models,55,2010
Automated support for repairing input-model faults,13,2010
Security-driven model-based dynamic adaptation,42,2010
JRF-E: using model checking to give advice on eliminating memory model-related bugs,,2010
A bounded statistical approach for model checking of unbounded until properties,20,2010
Eliminating navigation errors in web applications via model checking and runtime enforcement of navigation state machines,53,2010
Towards mining replacement queries for hard-to-retrieve traces,68,2010
Tool support for essential use cases to better capture software requirements,33,2010
Timesheet assistant: mining and reporting developer effort,,2010
An experience report on scaling tools for mining software repositories using MapReduce,29,2010
iMashup: assisting end-user programming for the service-oriented web,,2010
MODA: automated test generation for database applications via mock objects,,2010
Random unit-test generation with MUT-aware sequence recommendation,,2010
End-user oriented critic specification for domain-specific visual language tools,,2010
Checking roundoff errors using counterexample-guided narrowing,,2010
Realizing architecture frameworks through megamodelling techniques,,2010
Recovering inter-project dependencies in software ecosystems,,2010
Automated program repair through the evolution of assembly code,,2010
Integrating model verification and self-adaptation,,2010
When to use data from other projects for effort estimation,,2010
Kadre: domain-specific architectural recovery for scientific software systems,,2010
Automated SQL query generation for systematic testing of database engines,,2010
Tag and prune: a pragmatic approach to software product line implementation,,2010
"Reducing estimation uncertainty with continuous assessment: tracking the ""cone of uncertainty""",,2010
Using transitive changesets to support feature location,,2010
RuMoR: monitoring and recovery for BPEL applications,,2010
"Model/analyzer: a tool for detecting, visualizing and fixing design errors in UML",,2010
CoGenTe: a tool for code generator testing,,2010
Impendulo: debugging the programmer,,2010
SpecDiff: debugging formal specifications,,2010
Deriving behavior of multi-user processes from interactive requirements validation,4,2010
Tool support for code generation from a UMLsec property,,2010
PlayGo: towards a comprehensive tool for scenario based programming,,2010
REMES tool-chain: a set of integrated tools for behavioral modeling and analysis of embedded systems,,2010
C2O: a tool for guided decision-making,16,2010
Search-carrying code,5,2010
Solving string constraints lazily,55,2010
Scenario-based and value-based specification mining: better together,,2010
Test generation to expose changes in evolving programs,54,2010
How did you specify your test suite,32,2010
Dynamic and transparent analysis of commodity production systems,54,2010
Apt-pbo: solving the software dependency problem using pseudo-boolean optimization,28,2010
A sentence-matching method for automatic license identification of source code files,81,2010
Detection of recurring software vulnerabilities,45,2010
Matching dependence-related queries in the system dependence graph,44,2010
PLASMA: a plan-based layered architecture for software model-driven adaptation,86,2010
A program differencing algorithm for verilog HDL,18,2010
Error-avoiding adaptors for black-box software components,,2010
Automated model grouping,,2010
Automatic inference of abstract type behavior,,2010
Extraction and visualization of traceability relationships between documents and source code,,2010
Model checking graph representation of precise boolean inter-procedural flow analysis,,2010
The influence of multiple artifacts on the effectiveness of software testing,,2010
Automated web application testing using search based software engineering,101,2011
Auto-locating and fix-propagating for HTML validation errors to PHP server-side code,37,2011
Scaling up automated test generation: Automatically generating maintainable regression unit tests for programs,46,2011
Heap cloning: Enabling dynamic symbolic execution of java programs,9,2011
Automatic generation of load tests,78,2011
Symbolic search-based testing,88,2011
Automated documentation inference to explain failed tests,52,2011
Generating program inputs for database application testing,49,2011
Prioritizing tests for fault localization through ambiguity group reduction,56,2011
Identifying future field accesses in exhaustive state space traversal,15,2011
Model checking distributed systems by combining caching and process checkpointing,12,2011
Supporting domain-specific state space reductions through local partial-order reduction,20,2011
Scalable and precise symbolic analysis for atomicity violations,13,2011
"DC2: A framework for scalable, scope-bounded software verification",22,2011
Formalizing hardware/software interface specifications,11,2011
Safe asynchronous multicore memory operations,2,2011
A rule-based approach to the semantic lifting of model differences in the context of model versioning,87,2011
A model-driven framework for guided design space exploration,,2011
Automated extraction of architecture-level performance models of distributed component-based systems,79,2011
Precomputing possible configuration error diagnoses,73,2011
An optimal strategy for algorithmic debugging,5,2011
Localizing SQL faults in database applications,29,2011
Improving automated documentation to code traceability by combining retrieval techniques,46,2011
Iterative mining of resource-releasing specifications,23,2011
Flexible design pattern detection based on feature types,35,2011
Towards more accurate retrieval of duplicate bug reports,204,2011
A topic-based approach for narrowing the search space of buggy files from a bug report,131,2011
Specifying and detecting meaningful changes in programs,16,2011
Self-adaptive software meets control theory: A preliminary approach supporting reliability requirements,80,2011
Generalizing evolutionary coupling with stochastic dependencies,12,2011
"Differential precondition checking: A lightweight, reusable analysis for refactoring tools",30,2011
A performance comparison of contemporary algorithmic approaches for automated analysis operations on feature models,42,2011
Finding relevant answers in software forums,74,2011
Software process evaluation: A machine learning approach,17,2011
Local vs. global models for effort estimation and defect prediction,124,2011
Capacity planning for event-based systems using automated performance predictions,12,2011
Ecological inference in empirical software engineering,84,2011
Detection of feature interactions using feature-aware verification,,2011
Querying source code with natural language,,2011
Coverage rewarded: Test input generation via adaptation-based programming,,2011
Mendel: Source code recommendation based on a genetic metaphor,,2011
Optimizing the automatic test generation by SAT and SMT solving for Boolean expressions,,2011
Code-based automated program fixing,,2011
Taming changes With 1.x-Way architecture-implementation mapping,,2011
Evaluating test selection strategies for end-user specified flow-based applications,,2011
Towards dynamic backward slicing of model transformations,,2011
Mining test oracles of web search engines,,2011
AutoODC: Automated generation of Orthogonal Defect Classifications,,2011
Observations on the connectedness between requirements-to-code traces and calling relationships for trace validation,,2011
Proximity based weighting of test cases to improve spectrum based fault localization,,2011
Slicing feature models,,2011
Using model checking to analyze static properties of declarative models,,2011
Finding the merits and drawbacks of software resources from comments,,2011
Combining search-based and constraint-based testing,70,2011
Stateful testing: Finding more errors in code and contracts,,2011
Do software engineers benefit from source code navigation with traceability? -- An experiment in software change management,,2011
Automating analysis of qualitative preferences in goal-oriented requirements engineering,,2011
History slicing,30,2011
Analyzing temporal API usage patterns,29,2011
Isomorphism in model tools and editors,,2011
A case for alloy annotations for efficient incremental analysis via domain specific solvers,,2011
Exploring caching for efficient collection operations,,2011
Tracing requirements to tests with high precision and recall,,2011
Extracting structured data from natural language documents with island parsing,,2011
GRoundTram: An integrated framework for developing well-behaved bidirectional model transformations,,2011
Run-time systems failure prediction via proactive monitoring,,2011
Towards an approach and framework for test-execution plan derivation,,2011
Statistical debugging with elastic predicates,,2011
Diagnosis of software failures using computational geometry,,2011
GitBAC: Flexible access control for non-modular concerns,,2011
Client-side web application slicing,,2011
Supporting activity based computing paradigm in global software development,,2011
Inferred dependence coverage to support fault contextualization,,2011
Using model-based assurance to strengthen diagnostic procedures,,2011
Fault-localization using dynamic slicing and change impact analysis,,2011
Improving source code search with natural language phrasal representations of method signatures,,2011
Deviation management during process execution,,2011
PRECIS: Inferring invariants using program path guided clustering,,2011
Automated planning for feature model configuration based on stakeholders' business concerns,63,2011
An adaptive approach to impact analysis from change requests to source code,,2011
Domain and value checking of web application invocation arguments,,2011
Mixed constraints for test input generation - An initial exploration,,2011
Enhancing architectural recovery using concerns,,2011
Search-based fault localization,,2011
Towards requirements aware systems: Run-time resolution of design-time assumptions,,2011
Generating essential user interface prototypes to validate requirements,,2011
Automatically exploring how uncertainty impacts behavior of dynamically adaptive systems,,2011
iDiff: Interaction-based program differencing tool,,2011
CloneDifferentiator: Analyzing clones by differentiation,,2011
Implementing efficient model validation in EMF tools,,2011
JPF-AWT: Model checking GUI applications,,2011
The CORE system: Animation and functional correctness of pointer programs,,2011
APIExample: An effective web search based usage example recommendation system for java APIs,,2011
BEST: A symbolic testing tool for predicting multi-threaded program failures,,2011
"Decomposing feature models: language, environment, and applications",,2011
SAUML: A tool for symbolic analysis of UML-RT models,,2011
TestEra: A tool for testing Java programs using alloy specifications,,2011
MAJOR: An efficient and extensible tool for mutation analysis in a Java compiler,,2011
jCT: A Java Code Tomograph,,2011
Generating realistic test models for model processing tools,,2011
Guided test visualization: Making sense of errors in concurrent programs,,2011
The Capture Calculus Toolset,,2011
A model checking framework for hierarchical systems,,2011
Automatically detecting the quality of the query and its implications in IR-based concept location,,2011
Using Formal Concept Analysis to support change analysis,,2011
A framework for managing uncertainty in self-adaptive software systems,,2011
Toward consistency checking of natural language temporal requirements,,2011
Analyzing temporal properties of abstract models,1,2011
Improving spectrum-based fault localization using proximity-based weighting of test cases,,2011
Automatic assessment of software documentation quality,,2011
The GISMOE challenge: constructing the pareto program surface using genetic programming to find better programs (keynote paper),,2012
Re-founding software engineering – SEMAT at the age of three (keynote abstract),,2012
Practical isolation of failure-inducing changes for debugging regression faults,22,2012
Diversity maximization speedup for fault localization,27,2012
Improving the effectiveness of spectra-based fault localization using specifications,40,2012
To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools,28,2012
Diagnosys: automatic generation of a debugging interface to the Linux kernel,13,2012
Duplicate bug report detection with a combination of information retrieval and topic modeling,141,2012
User-aware privacy control via extended static-information-flow analysis,45,2012
Automatic query performance assessment during the retrieval of software artifacts,35,2012
Supporting automated vulnerability analysis using formalized vulnerability signatures,35,2012
A qualitative study on user guidance capabilities in product configuration tools,48,2012
Structured merge with auto-tuning: balancing precision and performance,46,2012
An automated approach to forecasting QoS attributes based on linear and non-linear time series modeling,50,2012
Puzzle-based automatic testing: bringing humans into the loop by solving puzzles,39,2012
Using unfoldings in automated testing of multithreaded programs,24,2012
Runtime monitoring of software energy hotspots,42,2012
Can I clone this piece of code here?,50,2012
Predicting recurring crash stacks,30,2012
Automated inference of goal-oriented performance prediction functions,43,2012
Code patterns for automatically validating requirements-to-code traces,23,2012
Unbounded data model verification using SMT solvers,12,2012
Computing repair trees for resolving inconsistencies in design models,47,2012
Supporting automated software re-engineering using re-aspects,,2012
Supporting operating system kernel data disambiguation using points-to analysis,,2012
Automatic recovery of statecharts from procedural code,,2012
Locating distinguishing features using diff sets,,2012
Slicing and replaying code change history,,2012
Generating model transformation rules from examples using an evolutionary algorithm,,2012
Augmented dynamic symbolic execution,,2012
Using GUI ripping for automated testing of Android applications,,2012
kbe-anonymity: test data anonymization for evolving programs,,2012
Selection of regression system tests for security policy evolution,,2012
Fast and precise points-to analysis with incremental CFL-reachability summarisation: preliminary experience,,2012
Automatically securing permission-based software by reducing the attack surface: an application to Android,138,2012
Support vector machines for anti-pattern detection,,2012
Detection of embedded code smells in dynamic web applications,,2012
Boreas: an accurate and scalable token-based approach to code clone detection,,2012
Refactorings without names,,2012
Automated API migration in a user-extensible refactoring tool for Erlang programs,,2012
Using mobile devices for collaborative requirements engineering,,2012
Automatically generating and adapting model constraints to support co-evolution of design models,,2012
Adaptability of model comparison tools,,2012
Predicting common web application vulnerabilities from input validation and sanitization code patterns,,2012
Software defect prediction using semi-supervised learning with dimension reduction,,2012
Healing online service systems via mining historical issue repositories,,2012
Automated evaluation of syntax error recovery,,2012
MaramaAI: tool support for capturing and managing consistency of multi-lingual requirements,,2012
GUITest: a Java library for fully automated GUI robustness testing,,2012
Observatory of trends in software related microblogs,,2012
Arcade.PLC: a verification platform for programmable logic controllers,,2012
Test suite selection based on traceability annotations,,2012
PuMoC: a CTL model-checker for sequential programs,,2012
Weave droid: aspect-oriented programming on Android devices: fully embedded or in the cloud,,2012
Caprice: a tool for engineering adaptive privacy,,2012
JStereoCode: automatically identifying method and class stereotypes in Java code,,2012
CHESS: a model-driven engineering tool environment for aiding the development of complex industrial systems,,2012
SYMake: a build code analysis and refactoring tool for makefiles,,2012
Quokka: visualising interactions of enterprise software environment emulators,,2012
Communicating continuous integration servers for increasing effectiveness of automated testing,,2012
GZoltar: an eclipse plug-in for testing and debugging,,2012
Semantic patch inference,,2012
REInDetector: a framework for knowledge-based requirements engineering,,2012
Formal verification techniques for model transformations specified by-demonstration,,2012
A model-driven parser generator with reference resolution support,,2012
Property-preserving program refinement,,2012
Predicting software complexity by means of evolutionary testing,,2012
Identifying refactoring sequences for improving software maintainability,,2012
Round-up: runtime checking quasi linearizability of concurrent data structures,12,2013
Constraint-based automatic symmetry detection,5,2013
Proving MCAPI executions are correct using SMT,8,2013
Efficient data race prediction with incremental reasoning on time-stamped lock history,1,2013
PIEtrace: platform independent executable trace,4,2013
Improving efficiency of dynamic analysis with dynamic dependence summaries,,2013
Efficient parametric runtime verification with deterministic string rewriting,10,2013
Identifying execution points for dynamic analyses,3,2013
Operator-based and random mutant selection: better together,56,2013
Testing properties of dataflow program operators,6,2013
"Bita: Coverage-guided, automatic testing of actor programs",27,2013
SABRINE: state-based robustness testing of operating systems,16,2013
BLITZ: compositional bounded model checking for real-world programs,27,2013
Ranger: parallel analysis of alloy models by range partitioning,14,2013
Automated verification of pattern-based interaction invariants in Ajax applications,4,2013
"Software model checking for distributed systems with selector-based, non-blocking communication",18,2013
A study of repetitiveness of code changes in software evolution,75,2013
Consistency-preserving edit scripts in model versioning,52,2013
JFlow: practical refactorings for flow-based parallelism,5,2013
Automated planning for software architecture evolution,22,2013
Automatically synthesizing SQL queries from input-output examples,31,2013
SEDGE: symbolic example data generation for dataflow programs,11,2013
Characteristic studies of loop problems for structural test generation via symbolic execution,47,2013
Entropy-based test generation for improved fault localization,48,2013
Detecting bad smells in source code using change history information,155,2013
Personalized defect prediction,122,2013
Automatic recommendation of API methods from feature requests,52,2013
Variability-aware performance prediction: a statistical learning approach,91,2013
A scalable approach for malware detection through bounded feature space behavior modeling,24,2013
Automatically partition software into least privilege components using dynamic data dependency analysis,21,2013
Finding architectural flaws using constraints,16,2013
Improving bug localization using structured information retrieval,178,2013
Leveraging program equivalence for adaptive program repair: models and first results,167,2013
Detecting and characterizing semantic inconsistencies in ported code,27,2013
Lightweight control-flow instrumentation and postmortem analysis in support of debugging,,2013
Characterizing and detecting resource leaks in android applications,73,2013
Dangling references in multi-configuration and dynamic PHP-based web applications,12,2013
Dynamically transforming data structures,3,2013
Towards precise metrics for predicting graph query performance,19,2013
TzuYu: learning stateful typestates,26,2013
Mining branching-time scenarios,32,2013
Measuring the structural complexity of feature models,25,2013
Scalable product line configuration: a straw to break the camel's back,117,2013
Software analytics for incident management of online services: an experience report,31,2013
A comparative analysis of software architecture recovery techniques,98,2013
Towards contextual and on-demand code clone management by continuous monitoring,9,2013
The potential of polyhedral optimization: an empirical study,7,2013
Automated unit testing of large industrial embedded software using concolic testing,38,2013
Minimizing CPU time shortage risks in integrated embedded software,5,2013
Model based test validation and oracles for data acquisition systems,10,2013
Automated verification of interactive rule-based configuration systems,5,2013
AutoComment: mining question and answer sites for automatic comment generation,,2013
Detecting system use cases and validations from documents,,2013
Multi-user variability configuration: a game theoretic approach,,2013
From comparison matrix to variability model: the Wikipedia case study,,2013
Learning effective query transformations for enhanced requirements trace retrieval,,2013
Environment rematching: toward dependability improvement for self-adaptive applications,,2013
Cloud twin: native execution of android applications on the windows phone,,2013
SBFR: a search based approach for reproducing failures of programs with grammar based input,,2013
PYTHIA: generating test cases with oracles for JavaScript applications,,2013
Randomizing regression tests using game theory,,2013
Automated inference of classifications and dependencies for combinatorial testing,,2013
Adding context to fault localization with integration coverage,,2013
Using automatically generated invariants for regression testing and bug localization,,2013
Class level fault prediction using software clustering,,2013
ExPort: detecting and visualizing API usages in large source code repositories,,2013
Flow permissions for android,,2013
A pattern-based approach to parametric specification mining,,2013
Semi-automatic generation of metamodels from model sketches,,2013
Assessing the maturity of requirements through argumentation: a good enough approach,,2013
Natural language requirements quality analysis based on business domain models,,2013
Model/code co-refactoring: an MDE approach,,2013
Recovering model transformation traces using multi-objective optimization,,2013
Model repair and transformation with Echo,,2013
Smart cloud broker: finding your home in the clouds,,2013
OCRA: a tool for checking the refinement of temporal contracts,,2013
The bounded model checker LLBMC,,2013
CSeq: a concurrency pre-processor for sequential C verification tools,,2013
Automated testing of cloud-based elastic systems with AUToCLES,,2013
Tool support for automatic model transformation specification using concrete visualisations,,2013
CCmutator: a mutation generator for concurrency constructs in multithreaded C/C++ applications,,2013
Crushinator: a framework towards game-independent testing,,2013
Pex4Fun: a web-based environment for educational gaming via automated test generation,,2013
Developing self-verifying service-based systems,,2013
TRAM: a tool for transforming textual requirements into analysis models,,2013
iProbe: a lightweight user-level dynamic instrumentation tool,4,2013
Detecting and fixing emergent behaviors in distributed software systems using a message content independent method,,2013
Synthesizing fault-tolerant programs from deontic logic specifications,,2013
Supporting bug investigation using history analysis,,2013
Context-aware task allocation for distributed agile team,,2013
"Preventing erosion of architectural tactics through their strategic implementation, preservation and visualization",,2013
Automated analysis of multithreaded programs for performance modeling,4,2014
Behavioral resource-aware model inference,40,2014
Targeted test input generation using symbolic-concrete backward execution,,2014
Discriminating influences among instructions in a dynamic slice,,2014
Dompletion: DOM-aware JavaScript code completion,9,2014
Continuous test generation: enhancing continuous integration with automated test generation,32,2014
Leveraging existing tests in automated test generation for web applications,53,2014
Automated unit test generation for classes with environment dependencies,31,2014
Finding HTML presentation failures using image comparison techniques,,2014
Accelerated test execution using GPUs,,2014
Seeking the user interface,,2014
Interrogative-guided re-ranking for question-oriented software text retrieval,,2014
An empirical study on reducing omission errors in practice,,2014
Fusion fault localizers,39,2014
Automated variability analysis and testing of an E-commerce site.: an experience report,11,2014
PrefFinder: getting the right preference in configurable software systems,20,2014
MiL testing of highly configurable continuous controllers: scalable search using surrogate models,12,2014
Assertion guided abstraction: a cooperative optimization for dynamic partial order reduction,19,2014
Symbolic state validation through runtime data,0,2014
Verifying self-adaptive applications suffering uncertainty,24,2014
Automated synthesis and deployment of cloud applications,30,2014
Concurrent transformation components using contention context sensors,,2014
Assigning time budgets to component functions in the design of time-critical automotive systems,9,2014
symMMU: symbolically executed runtime libraries for symbolic memory access,4,2014
Evaluation of string constraint solvers in the context of symbolic execution,22,2014
Incremental symbolic execution for automated test suite maintenance,,2014
Program analysis for secure big data processing,17,2014
Multi-objective optimization in rule-based design space exploration,43,2014
Understanding performance stairs: elucidating heuristics,8,2014
Fine-grained and accurate source code differencing,167,2014
Combining rule-based and information retrieval techniques to assign software change requests,,2014
Recommendation system for software refactoring using innovization and interactive dynamic optimization,,2014
Recommending refactorings based on team co-maintenance patterns,,2014
Diver: precise dynamic impact analysis using dependence-based trace pruning,,2014
Automating regression verification,69,2014
An empirical evaluation and comparison of manual and automated test selection,24,2014
Taming test inputs for separation assurance,15,2014
Transferring an automated test generation tool to practice: from pex to fakes and code digger,41,2014
Angels and monsters: an empirical investigation of potential test effectiveness and efficiency improvement from strongly subsuming higher order mutation,35,2014
Scaling exact multi-objective combinatorial optimization by parallelization,38,2014
42 variability bugs in the linux kernel: a qualitative analysis,,2014
Automating the formalization of product comparison matrices,19,2014
Tracking load-time configuration options,43,2014
Statistical learning approach for mining API usage mappings for code migration,55,2014
Compatibility testing using patterns-based trace comparison,3,2014
Personas in the middle: automated support for creating personas as focal points in feature gathering forums,,2014
Constructing adaptive configuration dialogs using crowd data,,2014
Validating ajax applications using a delay-based mutation technique,4,2014
"Static, lightweight includes resolution for PHP",14,2014
Information flows as a permission mechanism,43,2014
Improving the accuracy of oracle verdicts through automated model steering,5,2014
Automated domain-specific C verification with mbeddr,16,2014
Pattern-based auto-completion of UML modeling activities,,2014
Abstraction-aware verifying compiler for yet another MDD,,2014
Docovery: toward generic automatic document recovery,12,2014
Exact and approximate probabilistic symbolic execution for nondeterministic programs,38,2014
Derailer: interactive security analysis for web applications,15,2014
Tracking down root causes of defects in simulink models,,2014
The confidence in our k-tails,,2014
Localization of concurrency bugs using shared memory access pairs,10,2014
Towards self-healing smartphone software via automated patching,,2014
Minimal strongly unsatisfiable subsets of reactive system specifications,,2014
Droidmarking: resilient software watermarking for impeding android application repackaging,38,2014
From out-place transformation evolution to in-place model patching,,2014
Using visual dataflow programming for interactive model comparison,5,2014
NeedFeed: taming change notifications by modeling code relevance,15,2014
Active code search: incorporating user feedback to improve code search relevance,,2014
Resilient user interface level tests,,2014
Studying task allocation decisions of novice agile teams with data from agile project management tools,,2014
PiE: programming in eliza,,2014
Search-based inference of polynomial metamorphic relations,32,2014
A dynamic analysis to support object-sharing code refactorings,7,2014
Language fuzzing using constraint logic programming,,2014
Tracing software build processes to uncover license compliance inconsistencies,12,2014
Automatic verification of interactions in asynchronous systems with unbounded buffers,16,2014
Towards an intelligent domain-specific traceability solution,11,2014
Automated requirements analysis for a molecular watchdog timer,15,2014
Formalisation of the integration of behavior trees,,2014
Automatic early defects detection in use case documents,,2014
SymCrash: selective recording for reproducing crashes,22,2014
Potential biases in bug localization: do they matter?,32,2014
MIMIC: locating and understanding bugs by analyzing mimicked executions,21,2014
Workspace updates of visual models,,2014
Meta-Model validation and verification with MetaBest,,2014
A web based UML modeling tool with touch screens,,2014
SeSAME: modeling and analyzing high-quality service compositions,,2014
MPAnalyzer: a tool for finding unintended inconsistencies in program source code,,2014
Firecrow: a tool for web application analysis and reus,,2014
HUSACCT: architecture compliance checking with rich sets of module and rule types,,2014
CoCoTest: a tool for model-in-the-loop testing of continuous controllers,,2014
8Cage: lightweight fault-based test generation for simulink,,2014
PBGT tool: an integrated modeling and testing environment for pattern-based GUI testing,,2014
A tool chain for generating the description files of highly available software,,2014
DupFinder: integrated tool support for duplicate bug report detection,,2014
Model-driven development of content management systems based on Joomla,,2014
Determining the most probable root causes of run-time errors in simulink models,,2014
Utilizing feature location techniques for feature addition and feature enhancement,,2014
AugIR: the conceptual design and evaluation of an augmented interaction room,,2014
A requirements monitoring infrastructure for systems of systems,,2014
Embrace your issues: compassing the software engineering landscape using bug reports,,2014
Issues of automated software composition in AI planning,,2014
A proposal for revisiting coverage testing metrics,,2014
Variability-aware change impact analysis of multi-language product lines,,2014
Improvement of applications' stability through robust APIs,,2014
An empirical investigation into the nature of test smells,38,2016
Evaluating non-adequate test-case reduction,16,2016
Optimizing customized program coverage,11,2016
What makes killing a mutant hard,,2016
Test case permutation to improve execution time,,2016
Predicting semantically linkable knowledge in developer online forums via convolutional neural network,57,2016
Testing advanced driver assistance systems using multi-objective search and neural networks,32,2016
Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation,4,2016
Deep learning code fragments for code clone detection,134,2016
Automatically recommending code reviewers based on their expertise: an empirical comparison,8,2016
Evaluating the evaluations of code recommender systems: a reality check,11,2016
Too much automation? the bellwether effect and its implications for transfer learning,30,2016
Automatic microbenchmark generation to prevent dead code elimination and constant folding,4,2016
Visualization of combinatorial models and test plans,4,2016
Finding access control bugs in web applications with CanCheck,4,2016
SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities,11,2016
Supporting oracle construction via static analysis,7,2016
Local-based active classification of test report to assist crowdsourced testing,25,2016
Multi-objective test report prioritization using image understanding,23,2016
CrowdService: serving the individuals through mobile crowdsourcing and service composition,,2016
QUICKAR: automatic query reformulation for concept location using crowdsourced knowledge,,2016
Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps,58,2016
Automated model-based Android GUI testing using multi-level GUI comparison criteria,48,2016
HybriDroid: static analysis framework for Android hybrid applications,29,2016
Locus: locating bugs from software changes,35,2016
Fine-tuning spectrum based fault localisation with frequent method item sets,23,2016
Recommending relevant classes for bug reports using multi-objective search,16,2016
An empirical study on dependence clusters for effort-aware fault-proneness prediction,12,2016
StraightTaint: decoupled offline symbolic taint analysis,18,2016
IncA: a DSL for the definition of incremental program analyses,24,2016
What developers want and need from program analysis: an empirical study,54,2016
DistIA: a cost-effective dynamic impact analysis for distributed programs,8,2016
Radius aware probabilistic testing of deadlocks with guarantees,3,2016
LockPeeker: detecting latent locks in Java APIs,5,2016
Sound static deadlock analysis for C/Pthreads,11,2016
Static race detection for device drivers: the Goblint approach,13,2016
An empirical evaluation of two user interfaces of an interactive program verifier,9,2016
Traceability maintenance: factors and guidelines,18,2016
"Usage, costs, and benefits of continuous integration in open-source projects",107,2016
DSL-maps: from requirements to design of domain-specific languages,,2016
The IDE as a scriptable information system,,2016
Inferring annotations for device drivers from verification histories,7,2016
Array length inference for C library bindings,4,2016
APEx: automated inference of error specifications for C APIs,8,2016
On essential configuration complexity: measuring interactions in highly-configurable systems,58,2016
Precise semantic history slicing through dynamic delta refinement,8,2016
Goal-conflict detection based on temporal satisfiability checking,4,2016
Symbolic execution of stored procedures in database management systems,4,2016
Conc-iSE: incremental symbolic execution of concurrent software,20,2016
Model-based whitebox fuzzing for program binaries,44,2016
Symbolic execution of complex program driven by machine learning based constraint solving,,2016
Towards bounded model checking using nonlinear programming solver,,2016
Identifying domain elements from textual specifications,7,2016
Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching,5,2016
Efficient detection of inconsistencies in a multi-developer engineering environment,5,2016
How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications,14,2016
Greedy combinatorial test case generation using unsatisfiable cores,15,2016
Towards automatically generating descriptive names for unit tests,14,2016
Applying combinatorial test data generation to big data applications,13,2016
Generating test cases to expose concurrency bugs in Android applications,,2016
Automatic test image generation using procedural noise,,2016
Move-optimized source code tree differencing,20,2016
Migrating cascading style sheets to preprocessors by introducing mixins,9,2016
Automatic runtime recovery via error handler synthesis,9,2016
Mining revision histories to detect cross-language clones without intermediates,,2016
Battery-aware transformations in mobile applications,,2016
Bugram: bug detection with n-gram language models,37,2016
Mining input grammars from dynamic taints,,2016
Phrase-based extraction of user opinions in mobile app reviews,,2016
Practical guidelines for change recommendation using association rule mining,12,2016
Learning a dual-language vector space for domain-specific cross-lingual question retrieval,15,2016
Reflection-aware static analysis of Android apps,,2016
Relda2: an effective static analysis tool for resource leak detection in Android apps,,2016
An end-user oriented tool suite for development of mobile applications,,2016
Model driven design of heterogeneous synchronous embedded systems,,2016
MACKE: compositional analysis of low-level vulnerabilities with symbolic execution,,2016
BovInspector: automatic inspection and repair of buffer overflow vulnerabilities,,2016
CORRECT: code reviewer recommendation at GitHub for Vendasta technologies,,2016
ProcessPAIR: a tool for automated performance analysis and improvement recommendation in software development,,2016
CVExplorer: identifying candidate developers by mining and exploring their open source contributions,,2016
Lightweight collection and storage of software repository data with DataRover,,2016
Visual contract extractor: a tool for reverse engineering visual contracts using dynamic analysis,,2016
SuperMod: tool support for collaborative filtered model-driven software product line engineering,,2016
AnModeler: a tool for generating domain models from textual specifications,,2016
SimilarTech: automatically recommend analogical libraries across different programming languages,,2016
TeeVML: tool support for semi-automatic integration testing environment emulation,,2016
The interactive verification debugger: effective understanding of interactive proof attempts,,2016
Verifying simulink stateflow model: timed automata approach,,2016
GUICat: GUI testing as a service,,2016
An automated collaborative requirements engineering tool for better validation of requirements,,2016
An extensible framework for variable-precision data-flow analyses in MPS,,2016
Towards efficient and effective automatic program repair,,2016
Automated testing and notification of mobile app privacy leak-cause behaviours,,2016
Factoring requirement dependencies in software requirement selection using graphs and integer programming,,2016
Statistical analysis of large sets of models,,2016
Developer targeted analytics: supporting software development decisions with runtime information,,2016
API recommendation system for software development,,2016
Systematically testing background services of mobile apps,5,2017
Crowd intelligence enhances automated mobile testing,14,2017
EHBDroid: beyond GUI testing for Android applications,16,2017
Sketch-guided GUI test generation for mobile applications,,2017
Saying źhi!ź is not enough: mining inputs for effective test generation,,2017
Learn&Fuzz: machine learning for input fuzzing,90,2017
The impact of continuous integration on other software development practices: a large-scale empirical study,32,2017
Perceived language complexity in GitHub issue discussions and their effect on issue resolution,9,2017
Can automated pull requests encourage software developers to upgrade out-of-date dependencies?,23,2017
Are developers aware of the architectural impact of their changes?,13,2017
SentiCR: a customized sentiment analysis tool for code review interactions,,2017
Detecting fragile comments,8,2017
Improving software text retrieval using conceptual knowledge in source code,3,2017
Automatically generating commit messages from diffs using neural machine translation,38,2017
Improving missing issue-commit link recovery using positive and unlabeled data,,2017
APIBot: question answering bot for API documentation,,2017
Automatic summarization of API reviews,16,2017
iCoq: regression proof selection for large-scale verification projects,3,2017
More effective interpolations in software model checking,3,2017
Proof-based coverage metrics for formal verification,,2017
Model checker execution reports,,2017
Modular verification of interrupt-driven software,6,2017
BProVe: a formal verification framework for business process models,12,2017
Static detection of asymptotic resource side-channel vulnerabilities in web applications,1,2017
PAD: programming third-party web advertisement censorship,,2017
"All about activity injection: threats, semantics, and detection",1,2017
Detecting information flow by mutating input data,12,2017
Automatically assessing crashes from heap overflows,,2017
Learning to share: engineering adaptive decision-support for online social networks,,2017
UI driven Android application reduction,2,2017
SimplyDroid: efficient event sequence simplification for Android application,4,2017
Automated cross-platform inconsistency detection for mobile apps,14,2017
In-memory fuzzing for binary code similarity analysis,8,2017
DSIbin: identifying dynamic data structures in C/C++ binaries,5,2017
Towards robust instruction-level trace alignment of binary code,0,2017
Testing intermediate representations for binary analysis,13,2017
Comprehensive failure characterization,1,2017
TrEKer: tracing error propagation in operating system kernels,3,2017
RuntimeSearch: Ctrl+F for a running program,,2017
Mining implicit design templates for actionable code reuse,5,2017
Exploring regular expression comprehension,13,2017
Automatically assessing code understandability: how far are we?,11,2017
Improved query reformulation for concept location using CodeRank and document structures,6,2017
Understanding feature requests by leveraging fuzzy method and linguistic analysis,0,2017
O2O service composition with social collaboration,2,2017
Gremlin-ATL: a scalable model transformation framework,7,2017
Diagnosing assumption problems in safety-critical products,1,2017
Software performance self-adaptation through efficient model predictive control,5,2017
Transfer learning for performance modeling of configurable systems: an exploratory analysis,24,2017
A comprehensive study of real-world numerical bug characteristics,9,2017
A comprehensive study on real world concurrency bugs in Node.js,12,2017
Generating simpler AST edit scripts by considering copy-and-paste,7,2017
Renaming and shifted code in structured merging: looking ahead for precision and performance,5,2017
Semantics-assisted code review: an efficient toolchain and a user study,4,2017
Detecting unknown inconsistencies in web applications,1,2017
Why and how JavaScript developers use linters,11,2017
Automatic testing of symbolic execution engines via program generation and differential testing,9,2017
Floating-point symbolic execution: a case study in n-version programming,15,2017
Rethinking pointer reasoning in symbolic execution,,2017
Leveraging abstract interpretation for efficient dynamic symbolic execution,,2017
Tortoise: interactive system configuration repair,16,2017
Contract-based program repair without the contracts,31,2017
ELIXIR: effective object oriented program repair,36,2017
Leveraging syntax-related code for automated program repair,42,2017
Boosting complete-code tool for partial program,8,2017
A language model for statements of software code,,2017
Context-aware integrated development environment command recommender systems,,2017
Predicting relevance of change recommendations,4,2017
AnswerBot: automated generation of answer summary to developersź technical questions,,2017
Recommending crowdsourced software developers in consideration of skill improvement,,2017
The rise of the (modelling) bots: towards assisted modelling via social networks,,2017
UNDEAD: detecting and preventing deadlocks in production software,9,2017
Promoting secondary orders of event pairs in randomized scheduling using a randomized stride,1,2017
Parallel bug-finding in concurrent programs via reduced interleaving instances,6,2017
Understanding and overcoming parallelism bottlenecks in ForkJoin applications,6,2017
Quick verification of concurrent programs by iteratively relaxed scheduling,,2017
Automatic loop-invariant generation and refinement through selective sampling,3,2017
FiB: squeezing loop invariants by interpolation between Forward/Backward predicate transformers,5,2017
SymInfer: inferring program invariants using symbolic states,4,2017
Parsimony: an IDE for example-guided synthesis of lexers and parsers,2,2017
Mining constraints for event-based monitoring in systems of systems,,2017
Programming bots by synthesizing natural language expressions into API invocations,,2017
Test suite parallelization in open-source projects: a study on its usage and impact,4,2017
Systematic reduction of GUI test sequences,3,2017
Automatically reducing tree-structured test inputs,11,2017
Synthetic data generation for statistical testing,6,2017
SEALANT: a detection and visualization tool for inter-app security vulnerabilities in Android,,2017
Visualization support for requirements monitoring in systems of systems,,2017
A demonstration of simultaneous execution and editing in a development environment,,2017
TREM: a tool for mining timed regular specifications from system traces,,2017
ModelWriter: text and model-synchronized document engineering platform,,2017
Incrementally slicing editable submodels,,2017
DSSynth: an automated digital controller synthesis tool for physical plants,,2017
A static analysis tool with optimizations for reachability determination,,2017
CogniCrypt: supporting developers in using cryptography,,2017
BProVe: tool support for business process verification,,2017
taco: a tool to generate tensor algebra kernels,,2017
STARTS: STAtic regression test selection,,2017
EventFlowSlicer: a tool for generating realistic goal-driven GUI tests,,2017
ANDROFLEET: testing WiFi peer-to-peer mobile apps in the large,,2017
FEMIR: a tool for recommending framework extension examples,,2017
TiQi: a natural language interface for querying software project data,,2017
Opiner: an opinion search and summarization engine for APIs,,2017
Defaultification refactoring: a tool for automatically converting Java methods to default,,2017
Kobold: web usability as a service,,2017
IntPTI: automatic integer error repair with proper-type inference,,2017
Learning effective changes for software projects,,2017
Characterizing and taming non-deterministic bugs in JavaScript applications,,2017
Towards API-specific automatic program repair,,2017
Managing software evolution through semantic history slicing,,2017
Towards the automatic classification of traceability links,,2017
Towards a software vulnerability prediction model using traceable code patterns and software metrics,,2017
Towards search-based modelling and analysis of requirements and architecture decisions,,2017
Privacy-aware data-intensive applications,,2017
"Software heritage: collecting, preserving, and sharing all our source code (keynote)",,2018
On adopting linters to deal with performance concerns in Android apps,2,2018
PerfLearner: learning from bug reports to understand and generate performance test frames,1,2018
AutoConfig: automatic configuration tuning for distributed message systems,1,2018
Is this class thread-safe? inferring documentation using graph-based learning,2,2018
A large-scale study of test coverage evolution,3,2018
Effectiveness and challenges in generating concurrent tests for thread-safe classes,3,2018
Scalable incremental building with dynamic task dependencies,0,2018
Noise and heterogeneity in historical build data: an empirical study of Travis CI,5,2018
Automated directed fairness testing,5,2018
Concolic testing for deep neural networks,39,2018
DeepGauge: multi-granularity testing criteria for deep learning systems,36,2018
DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems,30,2018
Testing autonomous cars for feature interaction failures using many-objective search,4,2018
Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems,2,2018
Understanding and detecting evolution-induced compatibility issues in Android apps,8,2018
Characterizing the natural language descriptions in software logging statements,3,2018
Assessing the type annotation burden,1,2018
Mining file histories: should we consider branches?,4,2018
Tell them apart: distilling technology differences from crowd-scale comparison discussions,4,2018
ReScue: crafting regular expression DoS attacks,3,2018
TDroid: exposing app switching attacks in Android with control flow specialization,3,2018
Model-driven run-time enforcement of complex role-based access control policies,1,2018
ContractFuzzer: fuzzing smart contracts for vulnerability detection,23,2018
SEEDE: simultaneous execution and editing in a development environment,0,2018
Effective API recommendation without historical software repositories,1,2018
API method recommendation without worrying about the task-API knowledge gap,5,2018
An automated approach to estimating code coverage measures via execution logs,3,2018
How many of all bugs do we find? a study of static bug detectors,7,2018
TRIMMER: application specialization for code debloating,7,2018
A unified lattice model and framework for purity analyses,,2018
Control flow-guided SMT solving for program verification,0,2018
PaMpeR: proof method recommendation system for Isabelle/HOL,4,2018
Neural-machine-translation-based commit message generation: how far are we?,8,2018
Deep learning based feature envy detection,2,2018
Improving automatic source code summarization via deep reinforcement learning,7,2018
Template-guided concolic testing via online learning,1,2018
Android testing via synthetic symbolic execution,2,2018
PARTI: a multi-interval theory solver for symbolic execution,1,2018
Client-specific equivalence checking,0,2018
Replay without recording of production bugs for service oriented applications,2,2018
Reducing interactive refactoring effort via clustering-based multi-objective search,1,2018
FairFuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage,19,2018
Efficiently manifesting asynchronous programming errors in Android apps,10,2018
Expandable group identification in spreadsheets,2,2018
Break the dead end of dynamic slicing: localizing data and control omission bug,1,2018
A genetic algorithm for goal-conflict identification,0,2018
Understanding and detecting callback compatibility issues for Android applications,1,2018
Detecting and summarizing GUI changes in evolving mobile apps,1,2018
Empirically assessing opportunities for prefetching and caching in mobile apps,1,2018
Safe stream-based programming with refinement types,2,2018
Automated model repair for Alloy,8,2018
PFix: fixing concurrency bugs based on memory access patterns,1,2018
Generating reusable web components from mockups,1,2018
Semantic crash bucketing,6,2018
A symbolic model checking approach to the analysis of string and length constraints,0,2018
Domain-independent multi-threaded software model checking,3,2018
Scheduling constraint based abstraction refinement for weak memory models,0,2018
Datalog-based scalable semantic diffing of concurrent programs,1,2018
αDiff: cross-version binary code similarity detection with DNN,,2018
ClDiff: generating concise linked code differences,4,2018
Characterizing and identifying misexposed activities in Android applications,1,2018
A tale of two cities: how WebView induces bugs to Android applications,3,2018
Dual-force: understanding WebView malware via cross-language forced execution,0,2018
Self-protection of Android systems from inter-component communication attacks,0,2018
An empirical study of Android test generation tools in industrial cases,3,2018
Achieving test automation with testers without coding skills: an industrial report,,2018
Navigating the maze: the impact of configurability in bioinformatics software,4,2018
Automatically testing implementations of numerical abstract domains,2,2018
Experiences applying automated architecture analysis tool suites,1,2018
Continuous code quality: are we (really) doing that?,,2018
RUDSEA: recommending updates of Dockerfiles via software environment analysis,,2018
Delta debugging microservice systems,,2018
Personalized teammate recommendation for crowdsourced software developers,,2018
S-gram: towards semantic-aware security auditing for Ethereum smart contracts,,2018
An evolutionary approach for analyzing Alloy specifications,,2018
A neural framework for retrieval and summarization of source code,,2018
An empirical investigation into learning bug-fixing patches in the wild via neural machine translation,,2018
Loop path reduction by state pruning,,2018
node2defect: using network embedding to improve software defect prediction,,2018
Towards automating disambiguation of regulations: using the wisdom of crowds,,2018
jStanley: placing a green thumb on Java collections,,2018
SRCIROR: a toolset for mutation testing of C source code and LLVM intermediate representation,,2018
Lightweight source code monitoring with Triggr,,2018
OCELOT: a search-based test-data generation tool for C,,2018
Live versioning of web applications through refactoring,,2018
code_call_lens: raising the developer awareness of critical code,,2018
Code2graph: automatic generation of static call graphs for Python source code,,2018
The electrum analyzer: model checking relational first-order temporal specifications,,2018
ESBMC 5.0: an industrial-strength C model checker,,2018
L-CMP: an automatic learning-based parameterized verification tool,,2018
VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary,,2018
CPA-SymExec: efficient symbolic execution in CPAchecker,,2018
CANAL: a cache timing analysis framework via LLVM transformation,,2018
Descartes: a PITest engine to detect pseudo-tested methods: tool demonstration,,2018
DKVF: a framework for rapid prototyping and evaluating distributed key-value stores,,2018
DroidMate-2: a platform for Android test generation,,2018
Assessing and evaluating functional suitability of software,,2018
Automatic mining of constraints for monitoring systems of systems,,2018
Towards automatic restrictification of CUDA kernel arguments,,2018
A DSL for requirements in the context of a seamless approach,,2018
A multi-objective framework for effective performance fault injection in distributed systems,,2018
Top-down model-driven engineering of web services from extended OpenAPI models,,2018
Differential program analysis with fuzzing and symbolic execution,,2018
Software engineering techniques applied to relational databases,,2018
Automatically quantifying the impact of a change in systems (journal-first abstract),,2018
Estimating the number of remaining links in traceability recovery (journal-first abstract),,2018
Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract),,2018
"Roberto E. Lopez-Herrejon , Alexander Egyed, Towards fixing inconsistencies in models with variability, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, p.93-100, January 25-27, 2012, Leipzig, Germany",,2009
Asserting and checking determinism for multithreaded programs,86,2009
Static data race detection for concurrent programs with asynchronous calls,67,2009
Symbolic pruning of concurrent program executions,49,2009
Darwin: an approach for debugging evolving programs,106,2009
Capturing propagation of infected program states,126,2009
Saturation-based testing of concurrent programs,30,2009
The massification and webification of systems' modeling and simulation with virtual worlds,8,2009
Backward-compatible constant-time exception-protected memory,3,2009
Automated security testing of web widget interactions,41,2009
Cross-project defect prediction: a large scale experiment on data vs. domain vs. process,496,2009
On the relationship between process maturity and geographic distribution: an empirical analysis of their impact on software quality,50,2009
Improving bug triage with bug tossing graphs,376,2009
Fair and balanced?: bias in bug-fix datasets,325,2009
Qos-driven runtime adaptation of service oriented architectures,141,2009
Automatic synthesis of behavior protocols for composable web-services,153,2009
Data flow testing of service choreography,52,2009
Whitening SOA testing,59,2009
Refactoring for reentrancy,77,2009
Monitoring probabilistic properties,43,2009
MSeqGen: object-oriented unit-test generation via mining source code,92,2009
Api hyperlinking via structural overlap,53,2009
Learning from examples to improve code completion systems,252,2009
Improving slice accuracy by compression of data and control flow paths,10,2009
Insights from expert software design practice,42,2009
Fitting the pieces together: a machine-checked model of safe composition,74,2009
Ensuring interoperable service-oriented systems through engineered self-healing,36,2009
Debugging debugging: acm sigsoft impact paper award keynote,,2009
Facilitating software refactoring with appropriate resolution order of bad smells,,2009
Software change dynamics: evidence from 35 java projects,15,2009
Practical framework constraints,,2009
Evaluating recovery aware components for grid reliability,,2009
Towards accurate probabilistic models using state refinement,,2009
Verification and performance evaluation of aadl models,,2009
Reo2MC: a tool chain for performance analysis of coordination models,,2009
Smart views for analyzing problem reports: tool demo,,2009
SCA: a semantic conflict analyzer for parallel changes,,2009
Test case comparison and clustering using program profiles and static execution,,2009
ReCrashJ: a tool for capturing and reproducing program crashes in deployed applications,,2009
Javalanche: efficient mutation testing for Java,,2009
ConcernMorph: metrics-based detection of crosscutting patterns,,2009
Srijan: a graphical toolkit for sensor network macroprogramming,,2009
Synthesizing partial component-level behavior models from system specifications,46,2009
Supporting automatic model inconsistency fixing,91,2009
Behavioral automata composition for automatic topology independent verification of parameterized systems,17,2009
Probabilistic environments in the quantitative analysis of (non-probabilistic) behaviour models,11,2009
Automatic steering of behavioral model inference,98,2009
Sireum/Topi LDP: a lightweight semi-decision procedure for optimizing symbolic execution-based analyses,18,2009
Engineering search computing applications: vision and challenges,,2009
DebugAdvisor: a recommender system for debugging,113,2009
Graph-based mining of multiple object usage patterns,211,2009
Producing software by integration: challenges and research directions (keynote),,2013
Empirical answers to fundamental software engineering problems (panel),,2013
Efficiency and early fault detection with lower and higher strength combinatorial interaction testing,79,2013
Con2colic testing,59,2013
Boosting concolic testing via interpolation,47,2013
Adequate monitoring of service compositions,,2013
Prediction of atomic web services reliability based on k-means clustering,38,2013
Scalable analysis of variable software,132,2013
Bayesian inference using data flow analysis,46,2013
Second-order constraints in dynamic invariant inference,7,2013
Z3-str: a z3-based string solver for web application analysis,157,2013
An empirical analysis of the co-evolution of schema and code in database applications,55,2013
Automated oracles: an empirical study on cost and effectiveness,24,2013
Sample size vs. bias in defect prediction,68,2013
Finding incorrect compositions of atomicity,20,2013
Tightfit: adaptive parallelization with foresight,3,2013
Distributed program tracing,3,2013
Will you still compile me tomorrow? static cross-version compiler validation,22,2013
Convergent contemporary software peer review practices,15,2013
Do all task dependencies require coordination? the role of task properties in identifying critical coordination needs in software projects,15,2013
Dynodroid: an input generation system for Android apps,468,2013
KATCH: high-coverage testing of software patches,76,2013
Termination proofs from tests,26,2013
SPLat: lightweight dynamic analysis for reducing combinatorics in testing configurable systems,51,2013
Cachetor: detecting cacheable data to remove bloat,49,2013
Effective dynamic detection of alias analysis errors,13,2013
Feature model extraction from large collections of informal product descriptions,123,2013
N-way model merging,46,2013
Compiling mockups to flexible UIs,15,2013
Making offline analyses continuous,20,2013
Regression tests to expose change interaction errors,35,2013
Differential assertion checking,84,2013
Preventing database deadlocks in applications,17,2013
Identifying message flow in distributed event-based systems,29,2013
Improving trace accuracy through data-driven configuration and composition of tracing features,61,2013
Precision reuse for efficient regression verification,36,2013
Cascading verification: an integrated method for domain-specific model checking,9,2013
Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization,23,2013
Mining behavior models from enterprise web applications,49,2013
Incrementally synthesizing controllers from scenario-based product line specifications,28,2013
Synthesis of component and connector models from crosscutting structural views,38,2013
Searching for better configurations: a rigorous approach to clone evaluation,126,2013
Diversity in software engineering research,112,2013
API change and fault proneness: a threat to the success of Android apps,187,2013
Jalangi: a selective record-replay and dynamic analysis framework for JavaScript,190,2013
Practical static analysis of JavaScript applications in the presence of frameworks and libraries,101,2013
Server interface descriptions for automated testing of JavaScript web applications,10,2013
Explaining inconsistent code,14,2013
A statistical semantic language model for source code,119,2013
Crossing the gap from imperative to functional programming through refactoring,44,2013
Scalable and incremental software bug detection,24,2013
Inferring project-specific bug patterns for detecting sibling bugs,9,2013
Mining succinct predicated bug signatures,21,2013
SocialCDE: a social awareness tool for global software teams,,2013
REDACT: preventing database deadlocks from application-based transactions,,2013
aPET: a test case generation tool for concurrent objects,,2013
RUBRIC: a flexible tool for automated checking of conformance to requirement boilerplates,,2013
RiTHM: a tool for enabling time-triggered runtime verification for C programs,,2013
PoMMaDe: pushdown model-checking for malware detection,,2013
RADA: a tool for reasoning about algebraic data types with abstractions,,2013
"Jalangi: a tool framework for concolic testing, selective record-replay, and dynamic analysis of JavaScript",,2013
RSA-MBT: a test tool for generating test artifacts based on models,,2013
USMMC: a self-contained model checker for UML state machines,,2013
Extracting URLs from JavaScript via program analysis,,2013
Data debugging with continuous testing,,2013
Iterative test suites refinement for elastic computing systems,,2013
Using fault history to improve mutation reduction,,2013
A cost-effectiveness criterion for applying software defect prediction models,,2013
BugMap: a topographic map of bugs,,2013
Lexical statistical machine translation for language migration,,2013
Code fragment summarization,,2013
Understanding gamification mechanisms for software development,,2013
Toward understanding the causes of unanswered questions in software information sites: a case study of stack overflow,,2013
Where is the business logic?,,2013
Towards emotional awareness in software development teams,,2013
Precise range analysis on large industry code,,2013
Agreements for software reuse in corporations,,2013
Good technology makes the difficult task easy,,2013
ShAir: extensible middleware for mobile peer-to-peer resource sharing,,2013
Risky files: an approach to focus quality improvement effort,,2013
System reliability calculation based on the run-time analysis of ladder program,12,2013
h-ubu: an industrial-strength service-oriented component framework for JavaScript applications,,2013
Design and optimization of multi-clocked embedded systems using formal technique,57,2013
The economics of static analysis tools,,2013
Automatically describing software faults,,2013
Fuzzy service matching in on-the-fly computing,,2013
PHRT: a model and programmable tool for hardware reengineering automation,,2013
Using topic models to understand the evolution of a software ecosystem,,2013
Automotive architecture description and its quality,,2013
Towards open architecture system,,2013
A framework for defining the dynamic semantics of DSLs,,2013
Proactive self-adaptation under uncertainty: a probabilistic model checking approach,87,2015
Automated multi-objective control for self-adaptive software design,52,2015
Detecting event anomalies in event-based systems,38,2015
Suggesting accurate method and class names,141,2015
Measure it? Manage it? Ignore it? software practitioners and technical debt,96,2015
Automatically computing path complexity of programs,6,2015
Systematic testing of asynchronous reactive systems,21,2015
Effective test suites for mixed discrete-continuous stateflow controllers,16,2015
GR(1) synthesis for LTL specification patterns,17,2015
Modeling readability to improve unit tests,46,2015
Improving model-based test generation by model decomposition,2,2015
Synthesizing tests for detecting atomicity violations,22,2015
Optimizing energy consumption of GUIs in Android apps: a multi-objective approach,62,2015
Generating TCP/UDP network data for automated unit test generation,10,2015
Staged program repair with condition synthesis,202,2015
"When, how, and why developers (do not) test in their IDEs",83,2015
How developers search for code: a case study,64,2015
Tracing software developers' eyes and interactions for change tasks,41,2015
Assertions are strongly correlated with test suite effectiveness,40,2015
Test report prioritization to assist crowdsourced testing,32,2015
Comparing and combining test-suite reduction and regression test selection,50,2015
Questions developers ask while diagnosing potential security vulnerabilities with static analysis,35,2015
Quantifying developers' adoption of security tools,34,2015
Auto-patching DOM-based XSS at scale,17,2015
Performance-influence models for highly configurable systems,103,2015
Users beware: preference inconsistencies ahead,17,2015
"Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software",66,2015
Crowd debugging,28,2015
On the use of delta debugging to reduce recordings and facilitate debugging of web applications,19,2015
MemInsight: platform-independent memory debugging for JavaScript,20,2015
JITProf: pinpointing JIT-unfriendly JavaScript code,46,2015
Cross-language program slicing for dynamic web applications,28,2015
Detecting JavaScript races that matter,24,2015
The making of cloud applications: an empirical study on software development for the cloud,62,2015
An empirical study of goto in C code from GitHub repositories,15,2015
How practitioners perceive the relevance of software engineering research,64,2015
What change history tells us about thread synchronization,22,2015
Finding schedule-sensitive branches,16,2015
Effective and precise dynamic detection of hidden races for Java programs,28,2015
A user-guided approach to program analysis,44,2015
Hidden truths in dead software paths,8,2015
P3: partitioned path profiling,5,2015
Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning,77,2015
Heterogeneous defect prediction,,2015
Clone-based and interactive recommendation for modifying pasted code,9,2015
Is the cure worse than the disease? overfitting in automated program repair,136,2015
Responsive designs in a snap,8,2015
CLOTHO: saving programs from malformed strings and incorrect string-handling,4,2015
Query-based configuration of text retrieval solutions for software engineering tasks,24,2015
Information retrieval and spectrum based bug localization: better together,63,2015
Rule-based extraction of goal-use case models from text,8,2015
Symbolic execution of programs with heap inputs,18,2015
Automatically deriving pointer reference expressions from binary code for memory dump analysis,4,2015
Summarizing and measuring development activity,23,2015
A method to identify and correct problematic software activity data: exploiting capacity constraints and data redundancies,5,2015
Gamification for enforcing coding conventions,12,2015
String analysis for Java and Android applications,31,2015
Auto-completing bug reports for Android applications,48,2015
CLAPP: characterizing loops in Android applications,31,2015
"TLV: abstraction through testing, learning, and validation",9,2015
Mimic: computing models for opaque code,19,2015
Witness validation and stepwise testification across software verifiers,43,2015
Efficient and reasonable object-oriented concurrency,19,2015
FlexJava: language support for safe and modular approximate programming,40,2015
Getting to know you: towards a capability model for Java,6,2015
Efficient dependency detection for safe Java test acceleration,26,2015
Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing,30,2015
Guided differential testing of certificate validation in SSL/TLS implementations,29,2015
Quality and productivity outcomes relating to continuous integration in GitHub,141,2015
Developer onboarding in GitHub: the role of prior social links and language experience,47,2015
Impact of developer turnover on quality in open-source software,37,2015
MultiSE: multi-path symbolic execution using value summaries,69,2015
Assertion guided symbolic execution of multithreaded programs,30,2015
Iterative distribution-aware sampling for probabilistic symbolic execution,11,2015
Bespoke tools: adapted to the concepts developers know,,2015
I heart hacker news: expanding qualitative research findings by analyzing social news websites,,2015
GitSonifier: using sound to portray developer conflict history,,2015
Automatically recommending test code examples to inexperienced developers,,2015
Using software theater for the demonstration of innovative ubiquitous applications,,2015
Inner oracles: input-specific assertions on internal states,,2015
Targeted program transformations for symbolic execution,,2015
Crash reproduction via test case mutation: let existing test cases help,,2015
RDIT: race detection from incomplete traces,,2015
TACO: test suite augmentation for concurrent programs,,2015
Navigating through the archipelago of refactorings,,2015
Detecting semantic merge conflicts with variability-aware execution,,2015
Product lines can jeopardize their trade secrets,,2015
JSketch: sketching for Java,,2015
Don't panic: reverse debugging of kernel drivers,,2015
UMTG: a toolset to automatically generate system test cases from use case specifications,,2015
DexterJS: robust testing platform for DOM-based XSS vulnerabilities,,2015
T3i: a tool for generating and querying test suites for Java,,2015
iTrace: enabling eye tracking on software artifacts within the IDE to support software engineering tasks,,2015
Nyx: a display energy optimizer for mobile web apps,,2015
NARCIA: an automated tool for change impact analysis in natural language requirements,,2015
Commit guru: analytics and risk prediction of software commits,,2015
OSSMETER: a software measurement platform for automatically analysing open source software projects,,2015
Comprehensive service matching with MatchBox,,2015
UEDashboard: awareness of unusual events in commit histories,,2015
MatrixMiner: a red pill to architect informal product descriptions in the matrix,,2015
Predicting field reliability,,2015
REMI: defect prediction for efficient API testing,,2015
OnSpot system: test impact visibility during code edits in real software,,2015
"Products, developers, and milestones: how should I build my N-Gram language model",,2015
Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering,,2015
Barriers and enablers for shortening software development lead-time in mechatronics organizations: a case study,,2015
Semantic degrees for Industrie 4.0 engineering: deciding on the degree of semantic formalization to select appropriate technologies,,2015
Towards automating the security compliance value chain,,2015
"Requirements, architecture, and quality in a mission critical system: 12 lessons learned",,2015
Decentralized self-adaptation in large-scale distributed systems,,2015
Vehicle level continuous integration in the automotive industry,,2015
Quantifying architectural debts,,2015
User-centric security: optimization of the security-usability trade-off,,2015
Automated unit test generation for evolving software,,2015
Increasing the efficiency of search-based unit test generation using parameter control,,2015
Enhancing Android application bug reporting,,2015
Improving energy consumption in Android apps,,2015
Automated generation of programming language quizzes,,2015
Spotting familiar code snippet structures for program comprehension,,2015
Combining eye tracking with navigation paths for identification of cross-language code dependencies,,2015
A textual domain specific language for requirement modelling,,2015
Automated attack surface approximation,,2015
Pockets: a tool to support exploratory programming for novices and educators,,2015
"Reflections on the REST architectural style and ""principled design of the modern web architecture"" (impact paper award)",,2017
A fast causal profiler for task parallel programs,7,2017
On the scalability of Linux kernel maintainers' work,3,2017
Modeling and verification of evolving cyber-physical spaces,15,2017
Easy over hard: a case study on deep learning,51,2017
Finding near-optimal configurations in product lines by random sampling,22,2017
Revisiting unsupervised learning for defect prediction,25,2017
Loopster: static loop termination analysis,1,2017
CodeCarbonCopy,11,2017
"The power of ""why"" and ""why not"": enriching scenario exploration with provenance",14,2017
Where is the bug and how is it fixed? an experiment with practitioners,2,2017
Understanding misunderstandings in source code,11,2017
Measuring neural efficiency of program comprehension,22,2017
Bayesian specification learning for finding API usage errors,20,2017
Synergistic debug-repair of heap manipulations,,2017
Failure-directed program trimming,6,2017
Why modern open source projects fail,33,2017
"Trade-offs in continuous integration: assurance, security, and flexibility",45,2017
µDroid: an energy-aware mutation testing framework for Android,,2017
PATDroid: permission-aware GUI testing of Android,15,2017
Enabling mutation testing for Android apps,29,2017
"Guided, stochastic model-based GUI testing of Android apps",48,2017
Using bad learners to find good configurations,31,2017
Attributed variability models: outside the comfort zone,11,2017
Kmax: finding all configurations of Kbuild makefiles statically,6,2017
Is there a mismatch between real-world feature models and product-line research?,15,2017
Adaptively generating high quality fixes for atomicity violations,2,2017
AtexRace: across thread and execution sampling for in-house race detection,0,2017
Symbolic execution of programmable logic controller code,9,2017
Thread-modular static analysis for relaxed memory models,7,2017
ARTINALI: dynamic invariant detection for cyber-physical system security,4,2017
A symbolic justice violations transition system for unrealizable GR(1) specifications,4,2017
Automated control of multiple software goals using multiple actuators,12,2017
Why do developers use trivial packages? an empirical case study on npm,28,2017
Detecting missing information in bug descriptions,22,2017
Continuous variable-specific resolutions of feature interactions,7,2017
"Model-level, platform-independent debugging in the context of the model-driven development of real-time systems",12,2017
Cooperative kernels: GPU multitasking for blocking algorithms,8,2017
Toward full elasticity in distributed static analysis: the case of callgraph analysis,6,2017
Probabilistic model checking of perturbed MDPs with applications to cloud computing,3,2017
Understanding the impact of refactoring on smells: a longitudinal study of 23 software projects,9,2017
Cimplifier: automatically debloating containers,11,2017
Craig vs. Newton in software model checking,5,2017
Fairness testing: testing software for discrimination,46,2017
The care and feeding of wild-caught mutants,22,2017
QTEP: quality-aware test case prioritization,19,2017
Constraint normalization and parameterized caching for quantitative program analysis,3,2017
Generalized observational slicing for tree-represented modelling languages,6,2017
On evidence preservation requirements for forensic-ready systems,1,2017
BDCI: behavioral driven conflict identification,0,2017
NoFAQ: synthesizing command repairs from examples,8,2017
S3: syntax- and semantic-guided repair synthesis via programming by examples,75,2017
Counterexample-guided approach to finding numerical invariants,10,2017
Discovering relational specifications,10,2017
Steelix: program-state based binary fuzzing,63,2017
CodeMatch: obfuscation won't conceal your repackaged app,19,2017
A compiler and verifier for page access oblivious computation,8,2017
Automatic generation of inter-component communication exploits for Android applications,14,2017
OASIS: prioritizing static analysis warnings for Android apps based on app user reviews,5,2017
"Recovering clear, natural identifiers from obfuscated JS names",21,2017
DESCRY: reproducing system-level concurrency failures,7,2017
Reproducing concurrency failures from crash stacks,10,2017
Automatically analyzing groups of crashes for finding correlations,4,2017
Automatic inference of code transforms for patch generation,54,2017
A feasibility study of using automated program repair for introductory programming assignments,23,2017
Automatically diagnosing and repairing error handling bugs in C,13,2017
Are deep neural networks the best choice for modeling source code?,62,2017
Understanding the impact of support for iteration on code search,5,2017
LAMP: data provenance for graph based machine learning algorithms through derivative computation,3,2017
More accurate recommendations for method-level changes,2,2017
Regression test selection across JVM boundaries,13,2017
Measuring the cost of regression testing in practice: a study of Java projects using continuous integration,25,2017
Better test cases for better automated program repair,34,2017
When program analysis meets mobile security: an industrial study of misusing Android internet sockets,,2017
File-level vs. module-level regression test selection for .NET,,2017
Record and replay for Android: are we there yet in industrial cases?,,2017
Model-driven software engineering in practice: privacy-enhanced filtering of network traffic,,2017
Strong agile metrics: mining log data to determine predictive power of software metrics for continuous delivery teams,,2017
Screening heuristics for project gating systems,,2017
Natural language querying in SAP-ERP platform,,2017
Serverless computing: economic and architectural impact,,2017
What do software engineers care about? gaps between research and practice,,2017
Reference architectures and Scrum: friends or foes?,,2017
Guidelines for adopting frontend architectures and patterns in microservices-based systems,,2017
Improving understanding of dynamically typed software developed by agile practitioners,,2017
Automated identification of security issues from commit messages and bug reports,,2017
LaChouTi: kernel vulnerability responding framework for the fragmented Android devices,,2017
Applying deep learning based automatic bug triager to industrial projects,,2017
Static analysis for optimizing big data queries,,2017
Automated testing of hybrid Simulink/Stateflow controllers: industrial case studies,,2017
QEMU-based framework for non-intrusive virtual machine instrumentation and introspection,,2017
RunDroid: recovering execution call graphs for Android applications,,2017
RGSE: a regular property guided symbolic executor for Java,,2017
A tool for automated reasoning about traces based on configurable formal semantics,,2017
VART: a tool for the automatic detection of regression faults,,2017
DynAlloy analyzer: a tool for the specification and analysis of alloy models with dynamic behaviour,,2017
From scenario modeling to scenario programming for reactive systems with dynamic topology,,2017
CLTSA: labelled transition system analyser with counting fluent support,,2017
The MONDO collaboration framework: secure collaborative modeling over existing version control systems,,2017
Model-based privacy and security analysis with CARiSMA,,2017
"Cherry-picking of code commits in long-running, multi-release software",,2017
ARCC: assistant for repetitive code comprehension,,2017
JoanAudit: a tool for auditing common injection vulnerabilities,,2017
XSearch: a domain-specific cross-language relevant question retrieval tool,,2017
Using search-based software engineering to handle the changes with uncertainties for self-adaptive systems,,2017
DRACO: discovering refactorings that improve architecture using fine-grained co-change dependencies,,2017
User- and analysis-driven context aware software development in mobile computing,,2017
Recommender system for model driven software development,,2017
On the similarity of software development documentation,,2017
Application of search-based software engineering methodologies for test suite optimization and evolution in mission critical mobile application development,,2017
Summarizing software engineering communication artifacts from different sources,,2017
Model-based dynamic software project scheduling,,2017
System performance optimization via design and configuration space exploration,,2017
Suggesting meaningful variable names for decompiled code: a machine translation approach,,2017
Practical symbolic verification of regular properties,,2017
FOSS version differentiation as a benchmark for static analysis security testing tools,,2017
DecisionDroid: a supervised learning-based system to identify cloned Android applications,,2017
Reasons and drawbacks of using trivial npm packages: the developers' perspective,,2017
Detecting wearable app permission mismatches: a case study on Android wear,,2017
Automating traceability link recovery through classification,,2017
Improving performance of automatic program repair using learned heuristics,,2017
Ten years of hunting for similar code for fun and profit (keynote),,2018
CloudRaid: hunting concurrency bugs in the cloud via log-mining,2,2018
Testing multithreaded programs via thread speed control,1,2018
Data race detection on compressed traces,2,2018
Practical AJAX race detection for JavaScript web applications,,2018
Using finite-state models for log differencing,1,2018
Identifying impactful service system problems via log analysis,2,2018
Learning to sample: exploiting similarities across environments to learn performance models for configurable systems,7,2018
Performance comprehension at WiredTiger,0,2018
MemFix: static analysis-based repair of memory deallocation errors for C,3,2018
RefiNym: using names to refine types,1,2018
Darwinian data structure selection,4,2018
Scalability-first pointer analysis with self-tuning context-sensitivity,5,2018
DeepSim: deep learning code functional similarity,6,2018
Deep learning type inference,6,2018
Code vectors: understanding programs through embedded abstracted symbolic traces,13,2018
MODE: automated neural network model debugging via state differential analysis and input selection,3,2018
Towards a theory of software development expertise,,2018
What makes a code change easier to review: an empirical investigation on code change reviewability,5,2018
Singularity: pattern fuzzing for worst case complexity,3,2018
Bug synthesis: challenging bug-finding tools with deep faults,3,2018
"Modify, enhance, select: co-evolution of combinatorial models and test plans",1,2018
The impact of regular expression denial of service (ReDoS) in practice: an empirical study at the ecosystem scale,2,2018
FraudDroid: automated ad fraud detection for Android apps,8,2018
"AppFlow: using machine learning to synthesize robust, reusable UI tests",0,2018
Winning the app production rally,4,2018
One size does not fit all: an empirical study of containerized continuous deployment workflows,1,2018
Be careful of when: an empirical study on time-related misuse of issue tracking data,2,2018
Do the dependency conflicts in my project matter?,4,2018
Do Android taint analysis tools keep their promises?,6,2018
Neural-augmented static analysis of Android communication,2,2018
Oreo: detection of clones in the twilight zone,13,2018
Concurrency verification with maximal path causality,0,2018
Adversarial symbolic execution for detecting concurrency-related cache timing leaks,5,2018
Symbolic execution with existential second-order constraints,5,2018
Parameterized model counting for string and numeric constraints,1,2018
NAR-miner: discovering negative association rules from code for bug detection,0,2018
Path-based function embedding and its application to error-handling specification mining,6,2018
Putback-based bidirectional model transformations,0,2018
"Model transformation languages under a magnifying glass: a controlled experiment with Xtend, ATL, and QVT",1,2018
Applications of psychological science for actionable analytics,6,2018
A novel automated approach for software effort estimation based on data augmentation,2,2018
Predicting Node failure in cloud service systems,2,2018
Detecting speech act types in developer question/answer conversations during bug repair,3,2018
Visual web test repair,7,2018
Syntax-guided synthesis of Datalog programs,9,2018
Large-scale study of substitutability in the presence of effects,0,2018
An empirical study on crash recovery bugs in large-scale distributed systems,3,2018
Complementing global and local contexts in representing API descriptions to improve API retrieval tasks,2,2018
Phys: probabilistic physical unit assignment and inconsistency detection,0,2018
Testing probabilistic programming systems,2,2018
Verifying the long-run behavior of probabilistic system models in the presence of uncertainty,0,2018
Automated patch extraction via syntax- and semantics-aware Delta debugging on source code changes,2,2018
Feedback-directed differential testing of interactive debuggers,1,2018
Improving IR-based bug localization with context-aware query reformulation,7,2018
How should compilers explain problems to developers?,2,2018
Ecosystem-level determinants of sustained activity in open-source projects: a case study of the PyPI ecosystem,5,2018
Optimizing test prioritization via test distribution analysis,1,2018
How well are regular expressions tested in the wild?,5,2018
Which generated test failures are fault revealing? prioritizing failures based on inferred precondition violations using PAF,0,2018
Detection of energy inefficiencies in Android wear watch faces,1,2018
Stochastic energy optimization for mobile GPS applications,2,2018
Gamifying static analysis,,2018
The case for experiment-oriented computing,,2018
On the naturalness of proofs,,2018
Does ACM’s code of ethics change ethical decision making in software development?,,2018
How are spreadsheet templates used in practice: a case study on Enron,,2018
DLFuzz: differential fuzzing testing of deep learning systems,,2018
Towards data-driven vulnerability prediction for requirements,,2018
Beyond testing configurable systems: applying variational execution to automatic program repair and higher order mutation testing,,2018
Software fairness,,2018
Software engineering collaboratories (SEClabs) and collaboratories as a service (CaaS),,2018
Towards counterexample-guided k-induction for fast bug detection,,2018
Salient-class location: help developers understand code change in code review,,2018
Towards quantifying the development value of code contributions,,2018
Operationalizing human values in software: a research roadmap,,2018
Modeling and testing a family of surgical robots: an experience report,,2018
Efficient static checking of library updates,,2018
Are mobile banking apps secure? what can be improved?,,2018
VulSeeker-pro: enhanced semantic learning based binary vulnerability seeker with emulation,,2018
PAFL: extend fuzzing optimizations of single mode to industrial parallel mode,,2018
Software development challenges with air-gap isolation,,2018
Design and validation of precooked developer dashboards,,2018
Testing and validating end user programmed calculated fields,,2018
Automated refactoring of nested-IF formulae in spreadsheets,,2018
FACTS: automated black-box testing of FinTech systems,,2018
Regression test selection for TizenRT,,2018
Building lean continuous integration and delivery pipelines by applying DevOps principles: a case study at Varidesk,,2018
"The impact of failing, flaky, and high failure tests on the number of crash reports associated with Firefox builds",,2018
BigSift: automated debugging of big data analytics in data-intensive scalable computing,,2018
"FOT: a versatile, configurable, extensible fuzzing framework",,2018
Themis: automatically testing software for discrimination,,2018
Vista: web test repair using computer vision,,2018
Augmenting stack overflow with API usage patterns mined from GitHub,,2018
PowerStation: automatically detecting and fixing inefficiencies of database-backed web applications in IDE,,2018
SketchFix: a tool for automated program repair approach using lazy candidate generation,,2018
WarningsGuru: integrating statistical bug models with static analysis to provide timely and specific bug warnings,,2018
DSM: a specification mining tool using recurrent neural network based language model,,2018
EClone: detect semantic clones in Ethereum via symbolic transaction sketch,,2018
INFAR: insight extraction from app reviews,,2018
PyDriller: Python framework for mining software repositories,,2018
A formal verification tool for Ethereum VM bytecode,,2018
ASketch: a sketching framework for Alloy,,2018
AlloyInEcore: embedding of first-order relational logic into meta-object facility for automated model reasoning,,2018
VT-revolution: interactive programming tutorials made possible,,2018
Practices and tools for better software testing,,2018
Automated support for mobile application testing and maintenance,,2018
Moving towards objective measures of program comprehension,,2018
Semantic inference from natural language privacy policies and Android code,,2018
Intelligent bug fixing with software bug knowledge graph,,2018
Quality assurance automation in autonomous systems,,2018
"How do developers resolve merge conflicts? an investigation into the processes, tools, and improvements",,2018
Automated scenario-based integration testing of distributed systems,,2018
Towards learning-augmented languages,,2018
On the adoption of neural networks in modeling software reliability,,2018
Type migration in large-scale code bases,,2018
Reshaping distributed agile and adaptive development environment,,2018
How Dance(Sport) can help to produce better software,,2018
Feature-interaction aware configuration prioritization,,2018
Dara: hybrid model checking of distributed systems,,2018
Bugs in the wild: examining the effectiveness of static analyzers at finding real-world bugs,,2018
Mining error-handling specifications for systems software,,2018
Diversity and decorum in open source communities,,2018
Runtime Fault Detection in Programmed Molecular Systems,3,2019
Understanding and Analyzing Java Reflection,,2019
"Domain Analysis and Description Principles, Techniques, and Modelling Languages",,2019
Status Quo in Requirements Engineering: A Theory and a Global Family of Surveys,,2019
Isolation Modeling and Analysis Based on Mobility,,2019
How Understandable Are Pattern-based Behavioral Constraints for Novice Software Designers?,,2019
Oracles for Testing Software Timeliness with Uncertainty,0,2019
The State of Empirical Evaluation in Static Feature Location,4,2019
RESTful API Automated Test Case Generation with EvoMaster,3,2019
An Active Learning Approach for Improving the Accuracy of Automated Domain Model Extraction,0,2019
Software Effort Interval Prediction via Bayesian Inference and Synthetic Bootstrap Resampling,,2019
Test-Equivalence Analysis for Automatic Patch Generation,5,2018
Recommending Who to Follow in the Software Engineering Twitter Space,2,2018
Refactoring Multi-Level Models,2,2018
Variability-Aware Static Analysis at Scale: An Empirical Study,3,2018
Shadow Symbolic Execution for Testing Software Patches,1,2018
The ABC of Software Engineering Research,7,2018
Linear Programming as a Baseline for Software Effort Estimation,7,2018
Spectrum-Based Fault Localization in Model Transformations,2,2018
Multi-Objective Optimization of Energy Consumption of GUIs in Android Apps,2,2018
FEMOSAA: Feature-Guided and Knee-Driven Multi-Objective Optimization for Self-Adaptive Software,7,2018
Prove it! Inferring Formal Proof Scripts from CafeOBJ Proof Scores,0,2018
STADS: Software Testing as Species Discovery,3,2018
Maintaining Architecture-Implementation Conformance to Support Architecture Centrality: From Single System to Product Line Development,4,2018
How Far We Have Progressed in the Journey? An Examination of Cross-Project Defect Prediction,13,2018
Assessing the Refactoring of Brain Methods,0,2018
An Empirical Study of Meta- and Hyper-Heuristic Search for Multi-Objective Release Planning,6,2018
Inferring Extended Probabilistic Finite-State Automaton Models from Software Executions,2,2018
Understanding and Combating Memory Bloat in Managed Data-Intensive Systems,4,2018
Detecting the Behavior of Design Patterns through Model Checking and Dynamic Analysis,6,2018
Configuring Software Product Lines by Combining Many-Objective Optimization and SAT Solvers,10,2018
Global and Local Deadlock Freedom in BIP,3,2018
Variability Bugs in Highly Configurable Systems: A Qualitative Analysis,13,2018
"Lightweight, Obfuscation-Resilient Detection and Family Identification of Android Malware",22,2018
Fixing Faults in C and Java Source Code: Abbreviated vs. Full-Word Identifier Names,4,2017
A Logic-Based Approach for the Verification of UML Timed Models,0,2017
Early Evaluation of Implementation Alternatives of Composite Data Structures Toward Maintainability,2,2017
Augmenting Field Data for Testing Systems Subject to Incremental Requirements Changes,4,2017
Ensuring the Consistency of Adaptation through Inter- and Intra-Component Dependency Analysis,1,2017
Predicting Query Quality for Applications of Text Retrieval to Software Engineering Tasks,13,2017
Human Competitiveness of Genetic Programming in Spectrum-Based Fault Localisation: Theoretical and Empirical Analysis,11,2017
Parallel Algorithms for Generating Distinguishing Sequences for Observable Non-deterministic FSMs,6,2017
Impact-Driven Process Model Repair,32,2017
Generating API Call Rules from Version History and Stack Overflow Posts,14,2017
Dynamic Dependence Summaries,1,2017
"A Posteriori Typing for Model-Driven Engineering: Concepts, Analysis, and Applications",16,2017
Multi-Step Learning and Adaptive Search for Learning Complex Model Transformations from Examples,15,2016
Learning Weighted Assumptions for Compositional Verification of Markov Decision Processes,6,2016
Mining Privacy Goals from Privacy Policies Using Hybridized Task Recomposition,16,2016
Multi-Criteria Code Refactoring Using Search-Based Software Engineering: An Industrial Case Study,38,2016
Using Cohesion and Coupling for Software Remodularization: Is It Enough?,36,2016
The Effect of Program and Model Structure on the Effectiveness of MC/DC Test Adequacy Coverage,16,2016
Stochastic Performance Analysis of Global Software Development Teams,3,2016
Hierarchical Program Paths,4,2016
Understanding JavaScript Event-Based Interactions with Clematis,8,2016
Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects,23,2016
Concurrency Debugging with Differential Schedule Projections,22,2016
Control Explicit--Data Symbolic Model Checking,2,2016
Less is More: Estimating Probabilistic Rewards over Partial System Explorations,4,2016
SIP: Optimal Product Selection from Feature Models Using Many-Objective Evolutionary Optimization,50,2016
DiaPro: Unifying Dynamic Impact Analyses for Improved and Variable Cost-Effectiveness,6,2016
A Stack Memory Abstraction and Symbolic Analysis Framework for Executables,4,2016
Understanding Integer Overflow in C/C++,141,2015
Intelligent Code Completion with Bayesian Networks,27,2015
Combining Genetic Algorithms and Constraint Programming to Support Stress Testing of Task Deadlines,16,2015
Do Automatically Generated Test Cases Make Debugging Easier? An Experimental Assessment of Debugging Effectiveness and Efficiency,18,2015
Test Case Prioritization Using Extended Digraphs,6,2015
Boa: Ultra-Large-Scale Software Repository and Source-Code Mining,44,2015
The Effectiveness of Test Coverage Criteria for Relational Database Schema Integrity Constraints,17,2015
Type-Based Call Graph Construction Algorithms for Scala,6,2015
Estimating Semantic Relatedness in Source Code,13,2015
Guidelines for Coverage-Based Comparisons of Non-Adequate Test Suites,19,2015
Does Automated Unit Test Generation Really Help Software Testers? A Controlled Empirical Study,42,2015
Effective Techniques for Static Race Detection in Java Parallel Loops,9,2015
"Data Model Property Inference, Verification, and Repair for Web Applications",3,2015
Automated Support for Reproducing and Debugging Field Failures,5,2015
aToucan: An Automated Framework to Derive UML Analysis Models from Use Case Models,48,2015
Documenting Design-Pattern Instances: A Family of Experiments on Source-Code Comprehensibility,19,2015
Deciding Type-Based Partial-Order Constraints for Path-Sensitive Analysis,1,2015
Automatic Workarounds: Exploiting the Intrinsic Redundancy of Web Applications,13,2015
Many-Objective Software Remodularization Using NSGA-III,96,2015
Software Change Contracts,8,2015
Platys: An Active Learning Framework for Place-Aware Application Development and Its Evaluation,24,2015
A Baseline Model for Software Effort Estimation,45,2015
Residual Investigation: Predictive and Precise Bug Detection,15,2014
A Large-Scale Evaluation of Automated Unit Test Generation Using EvoSuite,81,2014
Conditional Commitments: Reasoning and Model Checking,14,2014
A Unified Test Case Prioritization Approach,61,2014
Formal Verification of Software Countermeasures against Side-Channel Attacks,29,2014
When and How to Use Multilevel Modelling,86,2014
Assessing the Effect of Screen Mockups on the Comprehension of Functional Requirements,25,2014
A Continuous ASM Modelling Approach to Pacemaker Sensing,9,2014
Directed Incremental Symbolic Execution,21,2014
Mining Unit Tests for Discovery and Migration of Math APIs,4,2014
Combining Centralised and Distributed Testing,11,2014
Code-Smell Detection as a Bilevel Problem,44,2014
Automated Detection of Client-State Manipulation Vulnerabilities,16,2014
DIG: A Dynamic Invariant Generator for Polynomial and Array Invariants,20,2014
On the Comprehension of Program Comprehension,98,2014
Amplifying Tests to Validate Exception Handling Code: An Extended Study in the Mobile Application Domain,59,2014
Some Code Smells Have a Significant but Small Effect on Faults,77,2014
Scaling Up Symbolic Analysis by Removing Z-Equivalent States,5,2014
"Peer Review on Open-Source Software Projects: Parameters, Statistical Models, and Theory",52,2014
Generating Test Cases for Programs that Are Coded against Interfaces and Annotations,11,2014
A Methodology for Exposing Risk in Achieving Emergent System Properties,5,2014
Scalable Runtime Bloat Detection Using Abstract Dynamic Slicing,17,2014
GreASE: A Tool for Efficient “Nonequivalence” Checking,,2014
Architecture-Level Configuration of Large-Scale Embedded Software Systems,10,2014
Solving the Search for Source Code,65,2014
Guided test generation for database applications via synthesized database interactions,30,2014
On the impact of UML analysis models on source-code comprehensibility and modifiability,31,2014
Degree-of-knowledge: Modeling a developer's knowledge of code,43,2014
Required behavior of sequence diagrams: Semantics and conformance,9,2014
A taxonomy for requirements engineering and software test alignment,,2014
ADAM: External dependency-driven architecture discovery and analysis of quality attributes,3,2014
Key factors for adopting inner source,47,2014
Exact scalable sensitivity analysis for the next release problem,24,2014
Dynamite: A tool for the verification of alloy models based on PVS,6,2014
Architecture-centric support for adaptive service collaborations,23,2014
Automated cookie collection testing,12,2014
Improving software modularization via automated analysis of latent topics and dependencies,88,2014
Do we need to handle every temporal violation in scientific workflow systems?,57,2014
Model-based synthesis of control software from system-level formal specifications,22,2014
Join point interfaces for safe and flexible decoupling of aspects,45,2014
Prevalence of coincidental correctness and mitigation of its impact on fault localization,50,2014
Traceability and SysML design slices to support safety inspections: A controlled experiment,46,2014
An in-depth study of the potentially confounding effect of class size in fault prediction,39,2014
Test-and-adapt: An approach for improving service interchangeability,11,2013
A methodology for testing CPU emulators,7,2013
Exception handlers for healing component-based systems,11,2013
A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization,185,2013
Path exploration based on symbolic output,45,2013
Path- and index-sensitive string analysis based on monadic second-order logic,69,2013
On software component co-installability,31,2013
Software effort estimation as a multiobjective learning problem,73,2013
A web-centred approach to end-user software engineering,8,2013
Portfolio: Searching for relevant functions and their usages in millions of lines of code,54,2013
Evaluating a query framework for software evolution data,10,2013
Precise memory leak detection for java software using container profiling,13,2013
Marple: Detecting faults in path segments using automatically generated analyses,4,2013
Fault localization prioritization: Comparing information-theoretic and coverage-based approaches,74,2013
Bounded satisfiability checking of metric temporal logic specifications,42,2013
The value of design rationale information,39,2013
Trading obliviousness for modularity with cooperative aspect-oriented programming,9,2013
An algebra of design patterns,33,2013
Finite satisfiability of UML class diagrams with constrained class hierarchy,29,2013
Enabledness-based program abstractions for behavior validation,17,2013
Using a functional size measurement procedure to evaluate the quality of models in MDD environments,9,2013
Use case and task models: An integrated development methodology and its formal foundation,10,2013
ConMem: Detecting Crash-Triggering Concurrency Bugs through an Effect-Oriented Approach,15,2013
Business Process Model Merging: An Approach to Business Process Consolidation,216,2013
Personalized Reliability Prediction of Web Services,78,2013
Automated Comparison of State-Based Software Models in Terms of Their Language and Structure,18,2013
"An Information Foraging Theory Perspective on Tools for Debugging, Refactoring, and Reuse Tasks",55,2013
Verification across Intellectual Property Boundaries,5,2013
Modeling and verifying hierarchical real-time systems using stateful timed CSP,66,2013
Views: Synthesizing fine-grained concurrency control,,2013
Facilitating the transition from use case models to analysis models: Approach and experiments,99,2013
Achieving scalable model-based testing through test case diversity,148,2013
Detecting missing method calls as violations of the majority rule,23,2013
Scaling predictive analysis of concurrent programs by removing trace redundancy,20,2013
Synthesizing nonanomalous event-based controllers for liveness goals,47,2013
Systematizing pragmatic software reuse,85,2012
A formal model for automated software modularity and evolvability analysis,6,2012
Validation of requirements for hybrid systems: A formal approach,34,2012
Concept location using formal concept analysis and information retrieval,88,2012
Validating software metrics: A spectrum of philosophies,75,2012
"HAMPI: A solver for word equations over strings, regular expressions, and context-free grammars",42,2012
Type checking annotation-based product lines,146,2012
A framework for the checking and refactoring of crosscutting concepts,2,2012
A logical verification methodology for service-oriented computing,41,2012
Accounting for defect characteristics in evaluations of testing techniques,20,2012
A two-phase approximation for model checking probabilistic unbounded until properties of probabilistic systems,4,2012
DARWIN: An approach to debugging evolving programs,20,2012
A Precise Method-Method Interaction-Based Cohesion Metric for Object-Oriented Classes,109,2012
Weak Alphabet Merging of Partial Behavior Models,26,2012
An Approach for Modeling Architectural Design Rules in UML and its Application to Embedded Software,16,2012
A Generative Programming Framework for Context-Aware CSCW Applications,17,2012
Symbolic Message Sequence Charts,,2012
Verification and Validation of UML Conceptual Schemas with OCL Constraints,67,2012
Feasibility of Stepwise Design of Multitolerant Programs,12,2011
QVM: An Efficient Runtime for Detecting Defects in Deployed Systems,30,2011
Expressive and Extensible Parameter Passing for Distributed Object Systems,3,2011
How Well Do Search Engines Support Code Retrieval on the Web?,54,2011
Lattice-Based Sampling for Path Property Monitoring,2,2011
The Choice Calculus: A Representation for Software Variation,126,2011
Runtime Verification for LTL and TLTL,441,2011
The Minimal Failure-Causing Schema of Combinatorial Testing,56,2011
Discovering Multidimensional Correlations among Regulatory Requirements to Understand Risk,13,2011
Gaia-PL: A Product Line Engineering Approach for Efficiently Designing Multiagent Systems,18,2011
A Compiler for Multimodal Scenarios: Transforming LSCs into AspectJ,21,2011
Recommending Adaptive Changes for Framework Evolution,199,2011
PrIMe: A methodology for developing provenance-aware applications,76,2011
Temporal dependency-based checkpoint selection for dynamic verification of temporal constraints in scientific workflow systems,76,2011
Reducing the effort of bug report triage: Recommenders for development-oriented decisions,208,2011
A model for spectra-based software diagnosis,283,2011
FlagRemover: A testability transformation for transforming loop-assigned flags,22,2011
A revisit of fault class hierarchies in general boolean specifications,34,2011
Extracting and answering why and why not questions about Java program output,43,2010
Modular aspect-oriented design with XPIs,56,2010
The small-world effect: The influence of macro-level properties of developer collaboration networks on open-source project success,97,2010
Supporting dynamic aspect-oriented features,14,2010
Types and modularity for implicit invocation with implicit announcement,89,2010
Method and developer characteristics for effective agile method tailoring: A study of XP expert opinion,122,2010
Clone region descriptors: Representing and tracking duplication in source code,82,2010
Analysis and applications of timed service protocols,33,2010
Semantic self-assessment of query results in dynamic environments,15,2010
A verification system for interval-based specification languages,9,2010
Synthesizing hierarchical state machines from expressive scenario descriptions,54,2010
Partial constraint checking for context consistency in pervasive computing,73,2010
Design and implementation of Sator: A web service aggregator,6,2010
Conceptual data model-based software size estimation for information systems,37,2009
Measuring the strength of information flows in programs,44,2009
Amoeba: A methodology for modeling and evolving cross-organizational business processes,100,2009
J-Orchestra: Enhancing Java programs with distribution capabilities,59,2009
From business process models to process-oriented software systems,241,2009
Unifying aspect- and object-oriented design,27,2009
Interacting process classes,14,2009
Verdict functions in testing with a fault domain or test hypotheses,20,2009
Programming pervasive and mobile computing applications: The TOTA approach,212,2009
Composing expressive runtime security policies,50,2009
A systematic review of theory use in studies investigating the motivations of software engineers,,2009
Empirical evaluation of a nesting testability transformation for evolutionary testing,55,2009
Tools and experiments supporting a testing-based theory of component composition,21,2009
Online inference and enforcement of temporal properties,101,2010
Quality of service profiling,219,2010
Collaborative reliability prediction of service-oriented systems,261,2010
A discriminative model approach for accurate duplicate bug report retrieval,230,2010
Has the bug really been fixed?,81,2010
An exploratory study of fault-proneness in evolving aspect-oriented programs,61,2010
Archface: a contract place where architectural design and code meet together,70,2010
Developing next generation ADLs through MDE techniques,45,2010
Software traceability with topic modeling,285,2010
An analysis of the variability in forty preprocessor-based software product lines,268,2010
A large-scale empirical study of practitioners' use of object-oriented concepts,28,2010
Codebook: discovering and exploiting relationships in software repositories,209,2010
Liability in software engineering: overview of the LISE approach and illustration on a case study,20,2010
An exploratory study of the evolution of software licensing,73,2010
A machine learning approach for tracing regulatory codes to product specific requirements,158,2010
Supporting developers with natural language queries,56,2010
Using information fragments to answer the questions developers ask,164,2010
Developers ask reachability questions,129,2010
Mining API mapping for language migration,113,2010
Using twinning to adapt programs to alternative APIs,70,2010
Oracle-guided component-based program synthesis,327,2010
Test generation through programming in UDITA,148,2010
Detecting atomic-set serializability violations in multithreaded programs through active randomized testing,85,2010
Falcon: fault localization in concurrent programs,133,2010
Adaptive bug isolation,62,2010
Practical fault localization for dynamic web applications,91,2010
Moving into a new software project landscape,115,2010
Organizing self-organizing teams,119,2010
StakeNet: using social networks to analyse the stakeholders of large-scale software projects,125,2010
Identifying crosscutting concerns using historical code changes,54,2010
Recurring bug fixes in object-oriented programs,118,2010
AURA: a hybrid approach to identify framework evolution,115,2010
Model checking lots of systems: efficient verification of temporal properties in software product lines,308,2010
A cut-off approach for bounded verification of parameterized systems,20,2010
An empirical study of optimizations in YOGI,28,2010
"Awareness 2.0: staying aware of projects, developers and tasks using dashboards and feeds",116,2010
Linking e-mails and source code artifacts,150,2010
A degree-of-knowledge model to capture source code familiarity,111,2010
Views: object-inspired concurrency control,16,2010
Engineering parallel applications with tunable architectures,24,2010
DETERMIN: inferring likely deterministic specifications of multithreaded programs,21,2010
From behaviour preservation to behaviour modification: constraint-based mutant generation,10,2010
Is operator-based mutant selection superior to random mutant selection?,96,2010
Using symbolic evaluation to understand behavior in configurable software systems,109,2010
Code bubbles: rethinking the user interface paradigm of integrated development environments,137,2010
Customized awareness: recommending relevant external change events,61,2010
A search engine for finding highly relevant applications,131,2010
An empirical study of reported bugs in server software with implications for automated bug diagnosis,58,2010
Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows,221,2010
Summarizing software artifacts: a case study of bug reports,142,2010
LEAKPOINT: pinpointing the causes of memory leaks,78,2010
Precise calling context encoding,,2010
Effective interprocedural resource leak detection,51,2010
"Measuring complexity, effectiveness and efficiency in software course projects",14,2010
Advanced hands-on training for distributed and outsourced software engineering,,2010
"A HOT --- Human, Organizational and Technological --- framework for a software engineering course",,2010
An empirical analysis of team review approaches for teaching quality software development,2,2010
An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model,60,2010
The educational value of mapping studies of software engineering literature,,2010
Towards contextualised software engineering education: an African perspective,21,2010
