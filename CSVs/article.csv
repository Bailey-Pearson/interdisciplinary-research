title,timesCited
"A Flexible Infrastructure for Multilevel Language Engineering",126
"The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering",
"Grammar Recovery from Parse Trees and Metrics-Guided Grammar Refactoring",21
"Engineering of Framework-Specific Modeling Languages",70
"A Model-Based Approach to Families of Embedded Domain-Specific Languages",53
"FAML: A Generic Metamodel for MAS Development",163
"Software Dependencies, Work Dependencies, and Their Impact on Failures",259
"Combining Perceptions and Prescriptions in Requirements Engineering Process Assessment: An Industrial Case Study",45
"Examining the Potentially Confounding Effect of Class Size on the Associations between Object-Oriented Metrics and Change-Proneness",100
"Impact of Budget and Schedule Pressure on Software Development Cycle Time and Effort",95
"An Integrative Economic Optimization Approach to Systems Development Risk Management",13
"Scalable and Effective Test Generation for Role-Based Access Control Systems",42
"Specifying and Validating Data-Aware Temporal Web Service Properties",50
"A Systematic Survey of Program Comprehension through Dynamic Analysis",
"Using Stochastic State Classes in Quantitative Evaluation of Dense-Time Reactive Systems",67
"Visualizing Co-Change Information with the Evolution Radar",95
"Recomputing Coverage Information to Assist Regression Testing",63
"How Software Developers Use Tagging to Support Reminding and Refinding",63
"Common Trends in Software Fault and Failure Data",131
"A Data Mining Approach for Detecting Higher-Level Clones in Software",129
"An Efficient and Scalable Approach to Correct Class Model Refinement",11
"The Impact of Design and Code Reviews on Software Quality: An Empirical Study Based on PSP Data",119
"Maturing Software Engineering Knowledge through Classifications: A Case Study on Unit Testing Techniques",37
"Power-Law Distributions of Component Size in General Software Systems",34
"Software Architecture Reconstruction: A Process-Oriented Taxonomy",
"Automatic Extraction of Heap Reference Properties in Object-Oriented Programs",6
"CHARMY: A Framework for Designing and Verifying Architectural Specifications",73
"Identification of Move Method Refactoring Opportunities",256
"The Impact of Lessons-Learned Sessions on Effort Estimation and Uncertainty Assessments",83
"Synthesis of Partial Behavior Models from Properties and Scenarios",126
"Variability and Reproducibility in Software Engineering: A Study of Four Companies that Developed the Same System",78
"What Types of Defects Are Really Discovered in Code Reviews?",134
"Enhanced Modeling and Solution of Layered Queueing Networks",193
"CoMoM: Efficient Class-Oriented Evaluation of Multiclass Performance Models",
"State-Density Functions over DBM Domains in the Analysis of Non-Markovian Models",40
"Automated Trace Analysis of Discrete-Event System Models",42
"Model Checking Probabilistic and Stochastic Extensions of the π-Calculus",
"Model Checking Timed and Stochastic Properties with CSL^{TA}",98
"Counterexample Generation in Probabilistic Model Checking",115
"Linear and Branching System Metrics",77
"Compositional Dependability Evaluation for STATEMATE",49
"An Investigation into the Functional Form of the Size-Defect Relationship for Software Modules",115
"Atomicity Analysis of Service Composition across Organizations",40
"Carving and Replaying Differential Unit Test Cases from System Test Cases",47
"Compositional Control of IP Media",26
"Engineering Privacy",352
"Linking Model-Driven Development and Software Architecture: A Case Study",69
"Mutation Operators for Spreadsheets",73
"Optimized Resource Allocation for Software Release Planning",58
"Predicting Project Velocity in XP Using a Learning Dynamic Bayesian Network Model",69
"A Systematic Review of the Application and Empirical Investigation of Search-Based Test Case Generation",
"Efficient Software Verification: Statistical Testing Using Automated Search",59
"A Genetic Algorithm-Based Stress Test Requirements Generator Tool and Its Empirical Evaluation",25
"Interactive, Evolutionary Search in Upstream Object-Oriented Class Design",85
"Solving the Class Responsibility Assignment Problem in Object-Oriented Analysis with Multi-Objective Genetic Algorithms",107
"ASCENT: An Algorithmic Technique for Designing Hardware and Software in Tandem",17
"Evolutionary Optimization of Software Quality Modeling with Multiple Repositories",114
"Using Genetic Search for Reverse Engineering of Parametric Behavior Models for Performance Prediction",70
"The Effects of Time Constraints on Test Case Prioritization: A Series of Controlled Experiments",136
"What Makes a Good Bug Report?",446
"Context-Aware Adaptive Applications: Fault Patterns and Their Automated Identification",93
"A Comparison of Six UML-Based Languages for Software Process Modeling",108
"How Reliable Are Systematic Reviews in Empirical Software Engineering?",83
"Reverse Engineering Input Syntactic Structure from Program Execution and Its Applications",
"Stressing Search with Scenarios for Flexible Solutions to Real-Time Task Allocation Problems",23
"Time and Probability-Based Information Flow Analysis",15
"An Experience in Testing the Security of Real-World Electronic Voting Systems",52
"Finding Bugs in Web Applications Using Dynamic Test Generation and Explicit-State Model Checking",164
"Proofs from Tests",179
"Aspect-Oriented Race Detection in Java",35
"The Probabilistic Program Dependence Graph and Its Application to Fault Diagnosis",181
"Learning a Metric for Code Readability",187
"Assessing Software Service Quality and Trustworthiness at Selection Time",146
"Evaluation of Accuracy in Design Pattern Occurrence Detection",62
"Incremental Test Generation for Software Product Lines",91
"Software Reliability and Testing Time Allocation: An Architecture-Based Approach",87
"Verification and Trade-Off Analysis of Security Properties in UML System Models",32
"Vulnerability Discovery with Attack Injection",52
"Discovering Services during Service-Based System Design Using UML",49
"Learning Communicating Automata from MSCs",25
"On Event-Based Middleware for Location-Aware Mobile Applications",34
"Program Behavior Discovery and Verification: A Graph Grammar Approach",34
"Understanding Exception Handling: Viewpoints of Novices and Experts",56
"Exception Handling Patterns for Process Modeling",131
"A Framework for Programming Robust Context-Aware Applications",58
"Exception Handling for Repair in Service-Based Processes",134
"A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems",124
"A Theoretical and Empirical Study of Search-Based Testing: Local, Global, and Hybrid Search",338
"Bayesian Approaches to Matching Architectural Diagrams",12
"Engineering a Sound Assertion Semantics for the Verifying Compiler",13
"Service-Level Agreements for Electronic Services",69
"Better Debugging via Output Tracing and Callstack-Sensitive Slicing",42
"DECOR: A Method for the Specification and Detection of Code and Design Smells",557
"Directed Explicit State-Space Search in the Generation of Counterexamples for Stochastic Model Checking",61
"Effects of Personality on Pair Programming",141
"Generating Event Sequence-Based Test Cases Using GUI Runtime State Feedback",126
"How Developers' Experience and Ability Influence Web Application Comprehension Tasks Supported by UML Stereotypes: A Series of Four Experiments",79
"Providing Architectural Languages and Tools Interoperability through Model Transformation Technologies",105
"A Dynamic Slicing Technique for UML Architectural Models",42
"Evaluating Complexity, Code Churn, and Developer Activity Metrics as Indicators of Software Vulnerabilities",292
"Measuring the Discriminative Power of Object-Oriented Class Cohesion Metrics",65
"Preventing Temporal Violations in Scientific Workflows: Where and How",58
"Putting Preemptive Time Petri Nets to Work in a V-Model SW Life Cycle",17
"Swarm Verification Techniques",78
"Tuning Temporal Features within the Stochastic π-Calculus",
"On the Distribution of Bugs in the Eclipse System",47
"A Classification Framework for Software Component Models",276
"A Comparison of Tabular Expression-Based Testing Strategies",10
"A Risk Management Methodology for Project Risk Dependencies",86
"An Analysis and Survey of the Development of Mutation Testing",1186
"Dynamic Software Updating Using a Relaxed Consistency Model",54
"The Impact of Irrelevant and Misleading Information on Software Development Effort Estimates: A Randomized Controlled Field Experiment",52
"Toward a Formalism for Conservative Claims about the Dependability of Software-Based Systems",28
"WAM—The Weighted Average Method for Predicting the Performance of Systems with Bursts of Customer Sessions",
"A Controlled Experiment for Evaluating the Impact of Coupling on the Maintainability of Service-Oriented Software",53
"A Flowchart Language for Quantum Programming",18
"Dynamic Analysis for Diagnosing Integration Faults",92
"Empirical Studies of Pair Programming for CS/SE Teaching in Higher Education: A Systematic Literature Review",
"FlowTalk: Language Support for Long-Latency Operations in Embedded Devices",4
"Frameworks Generate Domain-Specific Languages: A Case Study in the Multimedia Domain",19
"GUI Interaction Testing: Incorporating Event Context",187
"Zebu: A Language-Based Approach for Network Protocol Message Processing",24
"Does Socio-Technical Congruence Have an Effect on Software Build Success? A Study of Coordination in a Software Project",102
"The Awareness Network, To Whom Should I Display My Actions? And, Whose Actions Should I Monitor?",96
"A Controlled Experiment for Program Comprehension through Trace Visualization",119
"A General Software Defect-Proneness Prediction Framework",273
"An Attack Surface Metric",553
"Dynamic QoS Management and Optimization in Service-Based Systems",333
"Efficient Consistency Measurement Based on Behavioral Profiles of Process Models",248
"Which Crashes Should I Fix First?: Predicting Top Crashes at an Early Stage to Prioritize Debugging Efforts",69
"A Comparative Study of Software Model Checkers as Unit Testing Tools: An Industrial Case Study",36
"Assessing, Comparing, and Combining State Machine-Based Testing and Structural Testing: A Series of Experiments",72
"Automatically Detecting and Tracking Inconsistencies in Software Design Models",113
"Improving Source Code Lexicon via Traceability and Information Retrieval",61
"Loupe: Verifying Publish-Subscribe Architectures with a Magnifying Lens",15
"Self-Supervising BPEL Processes",137
"Software Module Clustering as a Multi-Objective Search Problem",269
"Systematic review and aggregation of empirical studies on elicitation techniques",
"Bristlecone: Language Support for Robust Software Applications",10
"Deriving a Slicing Algorithm via FermaT Transformations",16
"Developing a Single Model and Test Prioritization Strategies for Event-Driven Software",138
"From UML to Petri Nets: The PCM-Based Methodology",60
"Genetic Algorithms for Randomized Unit Testing",87
"Plat_Forms: A Web Development Platform Comparison by an Exploratory Experiment Searching for Emergent Platform Properties",28
"Semi-Proving: An Integrated Method for Program Proving, Testing, and Debugging",59
"Verifying the Evolution of Probability Distributions Governed by a DTMC",11
"A Comprehensive Approach to Naming and Accessibility in Refactoring Java Programs",24
"A Static Approach to Prioritizing JUnit Test Cases",104
"A Systematic Literature Review on Fault Prediction Performance in Software Engineering",
"Analyzing the Effect of Gain Time on Soft-Task Scheduling Policies in Real-Time Systems",6
"Architecture-Based Reliability Prediction with the Palladio Component Model",104
"Evaluating Dynamic Software Update Safety Using Systematic Testing",41
"Matching and Merging of Variant Feature Specifications",32
"Modeling Product Line Software Assets Using Domain-Specific Kits",14
"On the Value of Ensemble Effort Estimation",187
"Programmer-Friendly Refactoring Errors",17
"The Link between Dependency and Cochange: Empirical Evidence",25
"Toward a Tool-Based Development Methodology for Pervasive Computing Applications",59
"Two Studies of Framework-Usage Templates Extracted from Dynamic Traces",18
"A Practical Approach to Size Estimation of Embedded Software Components",12
"Clone Management for Evolving Software",102
"Coping with Existing Systems in Information Systems Development",3
"Dealing with Burstiness in Multi-Tier Applications: Models and Their Parameterization",48
"Structural Complexity and Programmer Team Strategy: An Experimental Test",17
"Exemplar: A Source Code Search Engine for Finding Highly Relevant Applications",99
"Formal Analysis of the Probability of Interaction Fault Detection Using Random Testing",50
"Formal Specification-Based Inspection for Verification of Programs",31
"Mining Crosscutting Concerns through Random Walks",13
"MOSES: A Framework for QoS Driven Runtime Adaptation of Service-Oriented Systems",171
"Precise Calling Context Encoding",60
"Reasoning about the Reliability of Diverse Two-Channel Systems in Which One Channel Is ""Possibly Perfect""",39
"Solving the Large Scale Next Release Problem with a Backbone-Based Multilevel Algorithm",72
"What Do We Know about the Effectiveness of Software Design Patterns?",95
"A Semi-Automatic Approach for Extracting Software Product Lines",32
"Adaptation of Service Protocols Using Process Algebra and On-the-Fly Reduction Techniques",
"BURN: Enabling Workload Burstiness in Customized Service Benchmarks",14
"DESSERT: a DividE-and-conquer methodology for identifying categorieS, choiceS, and choicE Relations for Test case generation",16
"Does Software Process Improvement Reduce the Severity of Defects? A Longitudinal Field Study",52
"Domain-Specific Service Selection for Composite Services",42
"Finding Atomicity-Violation Bugs through Unserializable Interleaving Testing",22
"Fluid Rewards for a Stochastic Process Algebra",30
"Mutable Protection Domains: Adapting System Fault Isolation for Reliability and Efficiency",10
"Palantir: Early Detection of Development Conflicts Arising from Parallel Code Changes",89
"Pert: The Application-Aware Tailoring of Java Object Persistence",4
"Quality Requirements in Industrial Practice—An Extended Interview Study at Eleven Companies",
"Size-Constrained Regression Test Case Selection Using Multicriteria Optimization",64
"SMT-Based Bounded Model Checking for Embedded ANSI-C Software",250
"Tools for the Rapid Prototyping of Provably Correct Ambient Intelligence Applications",26
"A Theoretical and Empirical Analysis of the Role of Test Sequence Length in Software Testing for Structural Coverage",34
"An Autonomous Engine for Services Configuration and Deployment",16
"Comparing Semi-Automated Clustering Methods for Persona Development",16
"Comparing the Defect Reduction Benefits of Code Inspection and Test-Driven Development",30
"DEC: Service Demand Estimation with Confidence",33
"Exploiting Dynamic Information in IDEs Improves Speed and Correctness of Software Maintenance Tasks",37
"Model Checking Semantically Annotated Services",40
"On the Evolution of Services",115
"Oracles for Distributed Testing",33
"Pointcut Rejuvenation: Recovering Pointcut Expressions in Evolving Aspect-Oriented Software",26
"QoS Assurance for Dynamic Reconfiguration of Component-Based Software Systems",32
"Software Development Estimation Biases: The Role of Interdependence",36
"Specifying Dynamic Analyses by Extending Language Semantics",1
"StakeRare: Using Social Networks and Collaborative Filtering for Large-Scale Requirements Elicitation",147
"Automatically Generating Test Cases for Specification Mining",61
"Random Testing: Theoretical Results and Practical Implications",134
"Mutation-Driven Generation of Unit Tests and Oracles",330
"Automatic Detection of Unsafe Dynamic Component Loadings",11
"Fault Localization for Dynamic Web Applications",42
"A Model of Data Warehousing Process Maturity",67
"A UML/MARTE Model Analysis Method for Uncovering Scenarios Leading to Starvation and Deadlocks in Concurrent Systems",30
"Data Mining Techniques for Software Effort Estimation: A Comparative Study",192
"Evaluation and Measurement of Software Process Improvement—A Systematic Literature Review",
"Exploiting the Essential Assumptions of Analogy-Based Effort Estimation",165
"Forecasting Risk Impact on ERP Maintenance with Augmented Fuzzy Cognitive Maps",87
"Input Domain Reduction through Irrelevant Variable Removal and Its Effect on Local, Global, and Hybrid Search-Based Structural Test Data Generation",66
"PerLa: A Language and Middleware Architecture for Data Management and Integration in Pervasive Information Systems",64
"How We Refactor, and How We Know It",493
"Work Item Tagging: Communicating Concerns in Collaborative Software Development",52
"Invariant-Based Automatic Testing of Modern Web Applications",133
"GenProg: A Generic Method for Automatic Software Repair",512
"Aspectizing Java Access Control",24
"Aspect-Oriented Refactoring of Legacy Applications: An Evaluation",37
"Automated Abstractions for Contract Validation",34
"Defining and Evaluating a Measure of Open Source Project Survivability",37
"Measuring Code Quality to Improve Specification Mining",39
"Reducing Unauthorized Modification of Digital Objects",8
"Scalable Differential Analysis of Process Algebra Models",120
"Schedule of Bad Smell Detection and Resolution: A New Way to Save Effort",95
"A Study of Variability Models and Languages in the Systems Software Domain",107
"Conservative Bounds for the pfd of a 1-out-of-2 Software-Based System Based on an Assessor's Subjective Probability of ""Not Worse Than Independence""",7
"Identification, Impact, and Refactoring of Smells in Pipe-Like Web Mashups",19
"Identifying Code of Individual Features in Client-Side Web Applications",28
"Learning Project Management Decisions: A Case Study with Case-Based Reasoning versus Data Farming",6
"Proactive Self-Adaptation for Improving the Reliability of Mission-Critical, Embedded, and Mobile Software",17
"Supporting Domain Analysis through Mining and Recommending Features from Online Product Listings",78
"Task Environment Complexity, Global Team Dispersion, Process Capabilities, and Coordination in Software Development",29
"A Learning-Based Framework for Engineering Feature-Oriented Self-Adaptive Software Systems",71
"A Taxonomy and Mapping of Computer-Based Critiquing Tools",
"Conservative Reasoning about the Probability of Failure on Demand of a 1-out-of-2 Software-Based System in Which One Channel Is ""Possibly Perfect""",6
"Determining the Cause of a Design Model Inconsistency",23
"Equality to Equals and Unequals: A Revisit of the Equivalence and Nonequivalence Criteria in Class-Level Testing of Object-Oriented Software",9
"Optimizing Ordered Throughput Using Autonomic Cloud Bursting Schedulers",26
"Usability through Software Design",58
"Where Should We Fix This Bug? A Two-Phase Recommendation Model",100
"A Uniform Representation of Hybrid Criteria for Regression Testing",41
"Assessing the Cost Effectiveness of Fault Prediction in Acceptance Testing",47
"Early Detection of Collaboration Conflicts and Risks",61
"Generating Test Data from OCL Constraints with Search Techniques",94
"Monitoring Data Usage in Distributed Systems",19
"The Impact of Classifier Configuration and Classifier Combination on Bug Localization",66
"Whitening SOA Testing via Event Exposure",30
"Capsule-Based User Interface Modeling for Large-Scale Applications",7
"Data Quality: Some Comments on the NASA Software Defect Datasets",219
"Generating Test Cases for Real-Time Systems Based on Symbolic Models",20
"Model-Based Test Oracle Generation for Automated Unit Testing of Agent Systems",53
"OBEY: Optimal Batched Refactoring Plan Execution for Class Responsibility Redistribution",6
"Patterns of Knowledge in API Reference Documentation",82
"TACO: Efficient SAT-Based Bounded Verification Using Symmetry Breaking and Tight Bounds",39
"Verifying Protocol Conformance Using Software Model Checking for the Model-Driven Development of Embedded Systems",8
"Active learning and effort estimation: Finding the essential content of software effort estimation data",55
"Balancing Privacy and Utility in Cross-Company Defect Prediction",69
"Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking",164
"MADMatch: Many-to-Many Approximate Diagram Matching for Design Comparison",23
"Monitor-Based Instant Software Refactoring",35
"Name-Based Analysis of Equally Typed Method Arguments",5
"Quantifying the Effect of Code Smells on Maintenance Effort",211
"Session Reliability of Web Systems under Heavy-Tailed Workloads: An Approach Based on Design and Analysis of Experiments",10
"Software Reliability Modeling with Software Metrics Data via Gaussian Processes",13
"Amorphous Slicing of Extended Finite State Machines",24
"EDZL Schedulability Analysis in Real-Time Multicore Scheduling",3
"Embedding Polychrony into Synchrony",14
"Pair Programming and Software Defects--A Large, Industrial Case Study",63
"Proactive and Reactive Runtime Service Discovery: A Framework and Its Evaluation",34
"Synthesizing Modal Transition Systems from Triggered Scenarios",19
"Trends in the Quality of Human-Centric Software Engineering Experiments--A Quasi-Experiment",18
"Verifying Linearizability via Optimized Refinement Checking",24
"A fluid model for layered queueing networks",33
"A large-scale empirical study of just-in-time quality assurance",191
"Abstracting runtime heaps for program understanding",27
"An Empirical Evaluation of Mutation Testing for Improving the Test Quality of Safety-Critical Software",47
"Event Logs for the Analysis of Software Failures: A Rule-Based Approach",48
"Local versus Global Lessons for Defect Prediction and Effort Estimation",160
"The Effects of Test-Driven Development on External Quality and Productivity: A Meta-Analysis",
"Using Timed Automata for Modeling Distributed Systems with Clocks: Challenges and Solutions",17
"What Industry Needs from Architectural Languages: A Survey",224
"A decentralized self-adaptation mechanism for service-based applications in the cloud",89
"Automated API Property Inference Techniques",130
"Compositional Verification for Hierarchical Scheduling of Real-Time Systems",33
"Software Architecture Optimization Methods: A Systematic Literature Review",
"Test Case-Aware Combinatorial Interaction Testing",24
"The Role of the Tester's Knowledge in Exploratory Software Testing",69
"Trustrace: Mining Software Repositories to Improve the Accuracy of Requirement Traceability Links",74
"A Machine Learning Approach to Software Requirements Prioritization",92
"A Second Replicated Quantitative Analysis of Fault Distributions in Complex Software Systems",38
"Coverage Estimation in Model Checking with Bitstate Hashing",4
"Generating Domain-Specific Visual Language Tools from Abstract Visual Specifications",31
"Locating Need-to-Externalize Constant Strings for Software Internationalization with Generalized String-Taint Analysis",5
"Ranking and Clustering Software Cost Estimation Models through a Multiple Comparisons Algorithm",109
"Reducing Features to Improve Code Change-Based Bug Prediction",154
"Validating Second-Order Mutation at System Level",28
"A Quantitative Approach to Input Generation in Real-Time Testing of Stochastic Systems",5
"Alloy Meets the Algebra of Programming: A Case Study",12
"Assessing the Effectiveness of Sequence Diagrams in the Comprehension of Functional Requirements: Results from a Family of Five Experiments",54
"Coordination Breakdowns and Their Impact on Development Productivity and Software Failures",106
"Elaborating Requirements Using Model Checking and Inductive Learning",27
"Resource Management for Complex, Dynamic Environments",28
"Self-Management of Adaptable Component-Based Applications",33
"Self-Organizing Roles on Agile Software Development Teams",158
"Automated Behavioral Testing of Refactoring Engines",
"Centroidal Voronoi Tessellations- A New Approach to Random Testing",50
"Class Schema Evolution for Persistent Object-Oriented Software: Model, Empirical Study, and Automated Support",9
"How Programmers Debug, Revisited: An Information Foraging Theory Perspective",119
"Integer Linear Programming-Based Property Checking for Asynchronous Reactive Systems",5
"Toward Comprehensible Software Fault Prediction Models Using Bayesian Network Classifiers",139
"Using Dependency Structures for Prioritization of Functional Test Suites",41
"Whole Test Suite Generation",328
"Ant Colony Optimization for Software Project Scheduling and Staffing with an Event-Based Scheduler",139
"Empirical Principles and an Industrial Case Study in Retrieving Equivalent Requirements via Natural Language Processing Techniques",80
"Identifying and Summarizing Systematic Code Changes via Rule Inference",53
"Language-Independent and Automated Software Composition: The FeatureHouse Experience",103
"On Fault Representativeness of Software Fault Injection",150
"Performance Specification and Evaluation with Unified Stochastic Probes and Fluid Analysis",32
"Systematic Elaboration of Scalability Requirements through Goal-Obstacle Analysis",30
"An Empirical Methodology to Evaluate Vulnerability Discovery Models",31
"Construction and Validation of an Instrument for Measuring Programming Skill",26
"Input-Sensitive Profiling",15
"Making CEGAR More Efficient in Software Model Checking",17
"Model-Transformation Design Patterns",48
"A Component Model for Model Transformations",45
"Keeping the Development Environment Up to Date—A Study of the Situated Practices of Appropriating the Eclipse IDE",
"Rate-Based Queueing Simulation Model of Open Source Software Debugging Activities",11
"Test Code Quality and Its Relation to Issue Handling Performance",55
"Using Traceability Links to Recommend Adaptive Changes for Documentation Evolution",14
"NLP-KAOS for Systems Goal Elicitation: Smart Metering System Case Study",23
"On the Accuracy, Efficiency, and Reusability of Automated Test Oracles for Android Devices",40
"On the Effectiveness of Contracts as Test Oracles in the Detection and Diagnosis of Functional Faults in Concurrent Object-Oriented Software",9
"Predicting Vulnerable Software Components via Text Mining",122
"Requirements Elicitation and Specification Using the Agent Paradigm: The Case Study of an Aircraft Turnaround Simulator",37
"Supporting the Combined Selection of Model-Based Testing Techniques",14
"A Cooperative Parallel Search-Based Software Engineering Approach for Code-Smells Detection",45
"A General Testability Theory: Classes, Properties, Complexity, and Testing Reductions",20
"A Scalable Approach to Exact Model and Commonality Counting for Extended Feature Models",9
"GreenDroid: Automated Diagnosis of Energy Inefficiency for Smartphone Applications",76
"An Empirical Analysis of Business Process Execution Language Usage",20
"Managing Technical Debt in Enterprise Software Packages",24
"Predicting Consistency-Maintenance Requirement of Code Clonesat Copy-and-Paste Time",8
"Specification and Verification of Normative Texts Using C-O Diagrams",18
"Supporting Process Model Validation through Natural Language Generation",70
"An Empirical Study of RefactoringChallenges and Benefits at Microsoft",
"Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines",133
"Methodbook: Recommending Move Method Refactorings via Relational Topic Models",95
"SymbexNet: Testing Network Protocol Implementations with Symbolic Execution and Rule-Based Specifications",25
"Symbolic Crosschecking of Data-Parallel Floating-Point Code",21
"Bayesian Networks For Evidence-Based Decision-Making in Software Engineering",39
"Dealing with Traceability in the MDDof Model Transformations",17
"GEA: A Goal-Driven Approach toDiscovering Early Aspects",7
"Researcher Bias: The Use of Machine Learning in Software Defect Prediction",184
"Automated Fixing of Programs with Contracts",87
"Conservation of Information: Software’sHidden Clockwork?",
"Formulating Cost-Effective Monitoring Strategies for Service-Based Systems",22
"Modular Software Model Checking for Distributed Systems",26
"REPENT: Analyzing the Nature of Identifier Renamings",37
"A Model-Driven Methodology for Developing Secure Data-Management Applications",17
"Analyzing Critical Decision-Based Processes",8
"Automatic Summarization of Bug Reports",76
"Effects of Developer Experience on Learning and Applying Unit Test-Driven Development",21
"On the Asymptotic Behavior of Adaptive Testing Strategy for Software Reliability Assessment",23
"Synthesizing Multithreaded Code from Real-Time Object-Oriented Models via Schedulability-Aware Thread Derivation",6
"An Observe-Model-Exercise* Paradigm to Test Event-Driven Systems with Undetermined Input Spaces",35
"Governing Software Process Improvementsin Globally Distributed Product Development",25
"iTree: Efficiently Discovering High-Coverage Configurations Using Interaction Trees",39
"You Are the Only Possible Oracle: Effective Test Selection for End Users of Interactive Machine Learning Systems",22
"Detecting Memory Leaks Statically with Full-Sparse Value-Flow Analysis",34
"GossipKit: A Unified ComponentFramework for Gossip",11
"Learning Assumptions for CompositionalVerification of Timed Systems",18
"Modeling Human-in-the-Loop Security Analysis and Decision-Making Processes",7
"Multi-Objective Quality-Driven Service Selection—A Fully Polynomial Time Approximation Scheme",
"Quality-Aware Service Selection for Service-Based Systems Based on Iterative Multi-Attribute Combinatorial Auction",71
"Signing Off: The State of the Journal",
"How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?",94
"Overcoming the Equivalent Mutant Problem: A Systematic Literature Review and a Comparative Experiment of Second Order Mutation",
"Reducing Masking Effects in CombinatorialInteraction Testing: A Feedback DrivenAdaptive Approach",24
"Variability Mining: Consistent Semi-automatic Detection of Product-Line Features",63
"Improved Evolutionary Algorithm Design for the Project Scheduling Problem Based on Runtime Analysis",36
"Mining Workflow Models from Web Applications",7
"Round-Up: Runtime Verification of Quasi Linearizability for Concurrent Data Structures",
"An Ontology-Based Product Architecture Derivation Approach",10
"Exploring the Relationship between Software Process Adaptive Capability and Organisational Performance",29
"Software Plagiarism Detection with Birthmarks Based on Dynamic Key Instruction Sequences",29
"An Eye-Tracking Study of Java Programmers and Application to Source Code Summarization",20
"Assessing the Refactorability of Software Clones",37
"A Survey on Load Testing of Large-Scale Software Systems",
"Automated Oracle Data Selection Support",16
"On the Composability of Design Patterns",10
"Automated Checking of Conformance to Requirements Templates Using Natural Language Processing",64
"Facilitating Coordination between Software Developers: A Study and Techniques for Timely and Efficient Recommendations",9
"GALE: Geometric Active Learning for Search-Based Software Engineering",32
"Inferring Loop Invariants by Mutation, Dynamic Analysis, and Static Checking",12
"Cina: Suppressing the Detection of Unstable Context Inconsistency",7
"COVERT: Compositional Analysis of Android Inter-App Permission Leakage",81
"Identifying Renaming Opportunities by Expanding Conducted Rename Refactorings",8
"Practical Combinatorial Interaction Testing: Empirical Findings on Efficiency and Early Fault Detection",47
"Program Characterization Using Runtime Values and Its Application to Software Plagiarism Detection",22
"An I/O Efficient Approach for Detecting All Accepting Cycles",1
"Self-Adapting Reliability in Distributed Software Systems",19
"The Effect of GoF Design Patterns on Stability: A Case Study",41
"The Risks of Coverage-Directed Test Case Generation",52
"Where Do Configuration Constraints Stem From? An Extraction Approach and an Empirical Study",49
"Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar",66
"BLISS: Improved Symbolic Execution by Bounded Lazy Initialization with SAT Support",22
"Extending the UML Statecharts Notation to Model Security Aspects",17
"Performance Analysis for Object-Oriented Software: A Systematic Mapping",
"Safer User Interfaces: A Case Study in Improving Number Entry",22
"Automatic Detection and Resolution of Lexical Ambiguity in Process Models",45
"Evaluating Legal Implementation Readiness Decision-Making",2
"Extracting Development Tasks to Navigate Software Documentation",34
"Forecasting Java Software Evolution Trends Employing Network Models",21
"Range Fixes: Interactive Error Resolution for Software Configuration",22
"Guided Mutation Testing for JavaScript Web Applications",25
"Integer Parameter Synthesis for Real-Time Systems",50
"Mining Version Histories for Detecting Code Smells",123
"Static Fault Localization in Model Transformations",50
"The Oracle Problem in Software Testing: A Survey",
"Are Slice-Based Cohesion Metrics Actually Useful in Effort-Aware Post-Release Fault-Proneness Prediction? An Empirical Study",26
"Improving Multi-Objective Test Case Selection by Injecting Diversity in Genetic Algorithms",54
"The Impact of API Change- and Fault-Proneness on the User Ratings of Android Apps",120
"Using Declarative Specification to Improve the Understanding, Extensibility, and Comparison of Model-Inference Algorithms",23
"Automated Synthesis of Mediators to Support Component Interoperability",32
"Embedding, Evolution, and Validation of Model-Driven Spreadsheets",19
"Generating Complete Controllable Test Suites for Distributed Testing",9
"Instance Generator and Problem Representation to Improve Object Oriented Code Coverage",46
"The Impact of View Histories on Edit Recommendations",19
"Exploiting Model Morphology for Event-Based Testing",8
"How Software Designers Interact with Sketches at the Whiteboard",21
"Quantitative Evaluation of Model-Driven Performance Analysis and Simulation of Component-Based Architectures",61
"Replicating and Re-Evaluating the Theory of Relative Defect-Proneness",13
"STAR: Stack Trace Based Automatic Crash Reproduction via Symbolic Execution",29
"A Systematic Study on Explicit-State Non-Zenoness Checking for Timed Automata",5
"Customizing the Representation Capabilities of Process Models: Understanding the Effects of Perceived Modeling Impediments",13
"Investigating Country Differences in Mobile App User Behavior and Challenges for Software Engineering",106
"The Design Space of Bug Fixes and How Developers Navigate It",34
"Who Will Stay in the FLOSS Community? Modeling Participant’s Initial Behavior",
"An Industrial Survey of Safety Evidence Change Impact Analysis Practice",34
"Engineering Adaptive Model-Driven User Interfaces",19
"Finding and Evaluating the Performance Impact of Redundant Data Access for Applications that are Developed Using Object-Relational Mapping Frameworks",18
"Inner Source in Platform-Based Product Engineering",13
"Test Case Prioritization Using Lexicographical Ordering",16
"Composite Constant Propagation and its Application to Android Program Analysis",11
"Developer Micro Interaction Metrics for Software Defect Prediction",25
"Enhanced Code Conversion Approach for the Integrated Cross-Platform Mobile Development (ICPMD)",3
"Parallel Algorithms for Testing Finite State Machines:Generating UIO Sequences",13
"Comments on “Researcher Bias: The Use of Machine Learning in Software Defect Prediction”",
"A Lightweight System for Detecting and Tolerating Concurrency Bugs",6
"A Multi-Objective Technique to Prioritize Test Cases",20
"Coverage-Aware Test Database Reduction",7
"Exploring Mobile End User Development: Existing Use and Design Factors",9
"HYDRA: Massively Compositional Model for Cross-Project Defect Prediction",88
"A Survey on Metamorphic Testing",
"Dynamic Testing for Deadlocks via Constraints",12
"Probabilistic Interface Automata",0
"Software Reliability Analysis Using Weakest Preconditions in Linear Assignment Programs",2
"The Role of Method Chains and Comments in Software Readability and Comprehension—An Experiment",
"A Survey on Software Fault Localization",
"Model Checking Software with First Order Logic Specifications Using AIG Solvers",2
"Parallel Performance Problems on Shared-Memory Multicore Systems: Taxonomy and Observation",6
"The Role of Ethnographic Studies in Empirical Software Engineering",34
"A Game-Theoretic Foundation for the Maximum Software Resilience against Dense Errors",5
"Asymptotic Perturbation Bounds for Probabilistic Model Checking with Empirically Determined Probability Parameters",10
"Designing Autonomic Management Systems by Using Reactive Control Techniques",7
"Dynamic Software Project Scheduling through a Proactive-Rescheduling Method",18
"Variability Analysis of Requirements: Considering Behavioral Differences and Reflecting Stakeholders’ Perspectives",
"A Two-Component Language for Adaptation: Design, Semantics and Program Analysis",12
"Automatically Recommending Peer Reviewers in Modern Code Review",40
"Dynamic and Automatic Feedback-Based Threshold Adaptation for Code Smell Detection",11
"Enforcing Exception Handling Policies with a Domain-Specific Language",9
"Software Development in Startup Companies: The Greenfield Startup Model",78
"Bidirectional Symbolic Analysis for Effective Branch Testing",14
"Effect of Domain Knowledge on Elicitation Effectiveness: An Internally Replicated Controlled Experiment",10
"RELAI Testing: A Technique to Assess and Improve Software Reliability",12
"Targeted Scrum: Applying Mission Command to Agile Software Development",17
"To Be Optimal or Not in Test-Case Prioritization",42
"A Multi-Site Joint Replication of a Design Patterns Experiment Using Moderator Variables to Generalize across Contexts",5
"An Approach to Checking Consistency between UML Class Model and Its Java Implementation",12
"A Probabilistic Analysis of the Efficiency of Automated Software Testing",27
"Black-Box String Test Case Generation through a Multi-Objective Optimization",14
"Mapping Bug Reports to Relevant Files: A Ranking Model, a Fine-Grained Benchmark, and Feature Evaluation",24
"Detecting, Tracing, and Monitoring Architectural Tactics in Code",31
"Metamorphic Testing for Software Quality Assessment: A Study of Search Engines",53
"Verifying Synchronization for Atomicity Violation Fixing",4
"Automatic Source Code Summarization of Context for Java Methods",41
"Crossover Designs in Software Engineering Experiments: Benefits and Perils",24
"GoPrime: A Fully Decentralized Middleware for Utility-Aware Service Assembly",8
"Probabilistic Model Checking of Regenerative Concurrent Systems",20
"SITAR: GUI Test Script Repair",28
"Using Reduced Execution Flow Graph to Identify Library Functions in Binary Code",10
"A Tool-Supported Methodology for Validation and Refinement of Early-Stage Domain Models",3
"Seer: A Lightweight Online Failure Prediction Approach",10
"Supporting Scope Tracking and Visualization for Very Large-Scale Requirements Engineering-Utilizing FSC+, Decision Patterns, and Atomic Decision Visualizations",11
"Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time",61
"Context-aware patch generation for better automated program repair",36
"Towards practical program repair with on-demand candidate generation",34
"A correlation study between automated program repair and test-suite metrics",
"Do automated program repair techniques repair hard and important bugs?",
"Software protection on the go: a large-scale empirical study on mobile app obfuscation",6
"GUILeak: tracing privacy policy claims on user input data for Android applications",5
"Online app review analysis for identifying emerging issues",11
"EARMO: an energy-aware refactoring approach for mobile apps",
"Neuro-symbolic program corrector for introductory programming assignments",9
"Automated localization for unreproducible builds",3
"Enlightened debugging",6
"Experiences and challenges in building a data intensive system for data migration",
"Sentiment analysis for software engineering: how far can we go?",23
"Identifying features in forks",4
"Roles and impacts of hands-on software architects in five industrial case studies",0
"Sentiment polarity detection for software development",
"Semantic program repair using a reference implementation",18
"Automated repair of mobile friendly problems in web pages",8
"Static automated program repair for heap properties",16
"Overfitting in semantics-based automated program repair",
"Studying the dialogue between users and developers of free apps in the google play store",
"Automated reporting of GUI design violations for mobile apps",21
"Leveraging program analysis to reduce user-perceived latency in mobile applications",8
"Repairing crashes in Android apps",9
"Hybrid regression test selection",19
"Fine-grained test minimization",4
"FAST approaches to scalable similarity-based test case prioritization",8
"Towards refactoring-aware regression test selection",5
"Inheritance usage patterns in open-source systems",1
"Almost there: a study on quasi-contributors in open source software projects",14
"Analyzing a decade of Linux system calls",
"To distribute or not to distribute?: why licensing bugs matter",2
"Augusto: exploiting popular functionalities for the generation of semantic GUI tests with Oracles",3
"Towards optimal concolic testing",6
"DeepTest: automated testing of deep-neural-network-driven autonomous cars",158
"Precise concolic unit testing of C programs using extended units and symbolic alarm filtering",6
"Spatio-temporal context reduction: a pointer-analysis-based static approach for detecting use-after-free vulnerabilities",7
"Program splicing",3
"Chopped symbolic execution",11
"Perses: syntax-guided program reduction",7
"Secure coding practices in Java: challenges and vulnerabilities",15
"EnMobile: entity-based characterization and analysis of mobile malware",4
"Model comprehension for security risk assessment: an empirical comparison of tabular vs. graphical representations",
"Does the propagation of artifact changes across tasks reflect work dependencies?",2
"Large-scale analysis of framework-specific exceptions in Android apps",19
"Effect sizes and their variance for AB/BA crossover design studies",
"A large-scale empirical study on the effects of code obfuscations on Android apps and anti-malware products",4
"DeFlaker: automatically detecting flaky tests",21
"DetReduce: minimizing Android GUI test suites for regression testing",1
"Time to clean your test objectives",6
"Prioritizing browser environments for web application test execution",0
"An empirical study of early access games on the steam platform",
"On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation",
"Accurate and efficient refactoring detection in commit history",20
"ENTRUST: engineering trustworthy self-adaptive software with dynamic assurance cases",
"Are vulnerabilities discovered and resolved like other defects?",
"How modern news aggregators help development communities shape and share knowledge",12
"Adding sparkle to social coding: an empirical study of repository badges in the npm ecosystem",23
"""Was my contribution fairly reviewed?"": a framework to study the perception of fairness in modern code reviews",
"Collaborative model-driven software engineering: a classification framework and a research map",
"Are mutation scores correlated with real fault detection?: a large scale empirical study on the relationship between mutants and real faults",20
"Efficient sampling of SAT solutions for testing",10
"Are fix-inducing changes a moving target?: a longitudinal case study of just-in-time defect prediction",15
"Understanding developers' needs on deprecation as a language feature",10
"On the dichotomy of debugging behavior among programmers",10
"Measuring program comprehension: a large-scale field study with professionals",18
"Data scientists in software teams: state of the art and challenges",18
"Dataflow tunneling: mining inter-request data dependencies for request-based applications",2
"Launch-mode-aware context-sensitive activity transition analysis",5
"UFO: predictive concurrency use-after-free detection",0
"Collective program analysis",4
"Statistical learning of API fully qualified names in code snippets of online forums",4
"When not to comment: questions and tradeoffs with API documentation for C++ projects",0
"Deuce: a lightweight user interface for structured editing",1
"From UI design image to GUI skeleton: a neural machine translator to bootstrap mobile GUI implementation",12
"When testing meets code review: why and how developers review tests",8
"Redefining prioritization: continuous prioritization for continuous integration",8
"MAHAKIL: diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction",
"On the use of hidden Markov model to predict the time to fix bugs",4
"What makes a great manager of software engineers?",7
"Older adults and hackathons: a qualitative study",
"Do programmers work at night or during the weekend?",8
"Multi-granular conflict and dependency analysis in software engineering based on graph transformation",6
"Self-hiding behavior in Android apps: detection and characterization",1
"The scent of a smell: an extensive comparison between textual and structural smells",26
"ConflictJS: finding and understanding conflicts between JavaScript libraries",6
"Debugging data flows in reactive programs",6
"Do you remember this source code?",4
"Inferring hierarchical motifs from execution traces",6
"A comparison of program comprehension strategies by blind and sighted programmers",
"Identifying patch correctness in test-based program repair",25
"How not to structure your database-backed web applications: a study of performance bugs in the wild",8
"Speedoo: prioritizing performance optimization opportunities",2
"The evolution of requirements practices in software startups",14
"Traceability in the wild: automatically augmenting incomplete trace links",12
"A temporal permission analysis and enforcement framework for Android",4
"Global-aware recommendations for repairing violations in exception handling",
"RFC-directed differential testing of certificate validation in SSL/TLS implementations",2
"Symbolic verification of regular properties",0
"Metamorphic testing of RESTful web APIs",
"Integrating technical debt management and software quality management processes: a framework and field tests",4
"Understanding the factors for fast answers in technical Q&A websites: an empirical study of four stack exchange websites",
"Towards reusing hints from past fixes: an exploratory study on thousands of real samples",
"Are code examples on an online Q&A forum reliable?: a study of API misuse on stack overflow",31
"Inference of development activities from interaction with uninstrumented applications",
"Propagating configuration decisions with modal implication graphs",5
"A combinatorial approach for exposing off-nominal behaviors",3
"Identifying design problems in the source code: a grounded theory",5
"Deep code search",35
"Augmenting and structuring user queries to support efficient free-form code search",
"FaCoY: a code-to-code search engine",12
"Generalized data structure synthesis",8
"A graph solver for the automated generation of consistent domain-specific models",5
"Automatically finding bugs in a commercial cyber-physical system development tool chain with SLforge",3
"Context-aware conversational developer assistants",7
"Open source barriers to entry, revisited: a sociotechnical perspective",22
"Testing vision-based control systems using learnable evolutionary algorithms",19
"To preserve or not to preserve invalid solutions in search-based software engineering: a case study in software product lines",0
"Nemo: multi-criteria test-suite minimization with integer nonlinear programming",3
"Is ""better data"" better than ""better data miners""?: on the benefits of tuning SMOTE for defect prediction",33
"Analyzing the effects of test driven development in GitHub",6
"A comparative study to benchmark cross-project defect prediction approaches",28
"MSeer: an advanced technique for locating multiple bugs in parallel",7
"Journal first presentation of an experience report on applying software testing academic results in industry: we need usable automated test generation",
"CCAligner: a token based large-gap clone detector",10
"HireBuild: an automatic approach to history-driven repair of build scripts",10
"The road to live programming: insights from the practice",5
"Assessing the threat of untracked changes in software evolution",3
"Programming not only by example",0
"Goal-conflict likelihood assessment based on model counting",1
"A posteriori typing for model-driven engineering: concepts, analysis, and applications",
"A static verification framework for message passing in Go using behavioural types",13
"Inferring and asserting distributed system invariants",6
"DroidStar: callback typestates for Android classes",4
"Debugging with intelligence via probabilistic inference",0
"Reducer-based construction of conditional verifiers",5
"Challenges and pitfalls on surveying evidence in the software engineering technical literature: an exploratory study with novices",
"Statistical errors in software engineering experiments: a preliminary literature review",
"Synthesizing qualitative research in software engineering: a critical review",
"Automatic software repair: a survey",
"Search-based test data generation for SQL queries",2
"Multi-objective integer programming approaches for solving optimal feature selection problem: a new perspective on multi-objective optimization problems in SBSE",0
"Automatically generating search heuristics for concolic testing",6
"Semantically enhanced software traceability using deep learning techniques",43
"Can latent topics in source code predict missing architectural tactics?",1
"Analyzing APIs documentation and code to detect directive defects",27
"An unsupervised approach for discovering relevant tutorial fragments for APIs",16
"Detecting user story information in developer-client conversations to generate extractive summaries",11
"Clone refactoring with lambda expressions",15
"Characterizing and detecting anti-patterns in the logging code",20
"Automated refactoring of legacy Java software to default methods",8
"Supporting software developers with a holistic recommender system",11
"Recommending and localizing change requests for mobile apps based on user reviews",48
"Machine learning-based detection of open source license exceptions",10
"Software development waste",35
"Becoming agile: a grounded theory of agile transitions in practice",38
"From diversity by numbers to diversity as process: supporting inclusiveness in software development teams with brainstorming",10
"Classifying developers into core and peripheral: an empirical study on count and network metrics",33
"Decoding the representation of code in the brain: an fMRI study of code review and expertise",25
"Understanding the impressions, motivations, and barriers of one time code contributors to FLOSS projects: a survey",19
"Search-driven string constraint solving for vulnerability detection",16
"A guided genetic algorithm for automated crash reproduction",16
"Stochastic optimization of program obfuscation",10
"ZenIDS: introspective intrusion detection for PHP applications",1
"Statically checking web API requests in JavaScript",17
"On cross-stack configuration errors",11
"Efficient detection of thread safety violations via coverage-guided generation of concurrent tests",17
"RClassify: classifying race conditions in web applications via deterministic replay",8
"Repairing event race errors by controlling nondeterminism",18
"Making malory behave maliciously: targeted fuzzing of android execution environments",26
"A SEALANT for inter-app security holes in android",19
"An efficient, robust, and scalable approach for analyzing interacting android apps",16
"LibD: scalable and precise third-party library detection in android markets",43
"Analysis and testing of notifications in Android wear applications",18
"Adaptive unpacking of Android apps",30
"Performance diagnosis for inefficient loops",14
"How do developers fix cross-project correlated bugs?: a case study on the GitHub scientific python ecosystem",25
"Feedback-based debugging",15
"Learning syntactic program transformations from examples",67
"Precise condition synthesis for program repair",91
"Heuristically matching solution spaces of arithmetic formulas to efficiently reuse solutions",6
"Exploring API embedding for API usages and applications",41
"Unsupervised software-specific morphological forms inference from informal discussions",17
"SPAIN: security patch analysis for binaries towards understanding the pain and pills",12
"Travioli: a dynamic analysis for detecting data-structure traversals",
"ProEva: runtime proactive performance evaluation based on continuous-time markov chains",6
"Glacier: transitive class immutability for Java",17
"Challenges for static analysis of Java reflection: literature review and empirical study",
"Machine-learning-guided selectively unsound static analysis",14
"How good is a security policy against real breaches?: a HIPAA case study",9
"Adaptive coverage and operational profile-based testing for reliability improvement",3
"RADAR: a lightweight tool for requirements and architecture decision analysis",13
"PEoPL: projectional editing of product lines",10
"Do developers read compiler error messages?",29
"A general framework for dynamic stub injection",1
"An empirical study on mutation, statement and branch coverage fault revelation that avoids the unreliable clean program assumption",53
"Evaluating and improving fault localization",90
"Syntactic and semantic differencing for combinatorial models of test designs",4
"Balancing soundness and efficiency for practical testing of configurable systems",9
"Automatic text input generation for mobile testing",21
"A test-suite diagnosability metric for spectrum-based fault localization approaches",22
"Automated transplantation and differential testing for clones",15
"Code defenders: crowdsourcing effective tests and subtle mutants with a mutation testing game",15
"Optimizing test placement for module-level regression testing",11
"Learning to prioritize test programs for compiler testing",14
"What causes my test alarm?: automatic cause analysis for test alarms in system and integration testing",15
"Symbolic model extraction for web application verification",6
"UML diagram refinement (focusing on class- and use case diagrams)",2
"Fuzzy fine-grained code-history analysis",6
"To type or not to type: quantifying detectable bugs in JavaScript",18
"The evolution of continuous experimentation in software product development: from data to a data-driven organization at scale",46
"PRADA: prioritizing android devices for apps by mining large-scale usage data",29
"Release planning of mobile apps based on user reviews",99
"Toward a framework for detecting privacy policy violations in android application code",55
"Mining sandboxes",28
"Generating performance distributions via probabilistic symbolic execution",21
"Performance issues and optimizations in JavaScript: an empirical study",38
"Reliability of Run-Time Quality-of-Service evaluation using parametric model checking",17
"Optimizing selection of competing services with probabilistic hierarchical refinement",13
"The emerging role of data scientists on software development teams",68
"Belief & evidence in empirical software engineering",75
"Grounded theory in software engineering research: a critical review and guidelines",
"On the techniques we create, the tools we build, and their misalignments: a study of KLEE",11
"Guiding dynamic symbolic execution toward unverified program executions",39
"Synthesizing framework models for symbolic execution",24
"Type-aware concolic testing of JavaScript programs",11
"An empirical comparison of compiler testing techniques",25
"Termination-checking for LLVM peephole optimizations",6
"Finding and analyzing compiler warning defects",17
"iDice: problem identification for emerging issues",7
"Energy profiles of Java collections classes",67
"An empirical study of practitioners' perspectives on green software engineering",61
"Automated energy optimization of HTTP requests for mobile applications",57
"Too long; didn't watch!: extracting relevant fragments from software development video tutorials",34
"Overcoming open source project entry barriers with a portal for newcomers",49
"Work practices and challenges in pull-based development: the contributor's perspective",95
"Automatically learning semantic features for defect prediction",146
"Cross-project defect prediction using a connectivity-based unsupervised classifier",92
"Automated parameter optimization of classification techniques for defect prediction models",126
"AntMiner: mining more bugs by reducing noise interference",18
"Program synthesis using natural language",33
"SWIM: synthesizing what i mean: code search and idiomatic snippet synthesis",55
"Cross-supervised synthesis of web-crawlers",5
"Automatic model generation from documentation for Java API functions",22
"Augmenting API documentation with insights from stack overflow",84
"From word embeddings to document similarities for improved information retrieval in software engineering",98
"Learning API usages from bytecode: a statistical approach",22
"On the ""naturalness"" of buggy code",89
"Code anomalies flock together: exploring code anomaly agglomerations for locating design problems",40
"Using (bio)metrics to predict code quality online",19
"CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features",119
"Disseminating architectural knowledge on open-source projects: a case study of the book ""architecture of open-source applications""",6
"Identifying and quantifying architectural debt",39
"Decoupling level: a new metric for architectural maintenance complexity",30
"On the limits of mutation reduction strategies",27
"Comparing white-box and black-box test prioritization",83
"How does regression test prioritization perform in real-world software evolution?",39
"The impact of test case summaries on bug fixing performance: an empirical investigation",50
"Reducing combinatorics in GUI testing of android applications",54
"MobiPlay: a remote execution based record-and-replay tool for mobile applications",37
"VDTest: an automated framework to support testing for virtual devices",1
"Automated test suite generation for time-continuous simulink models",41
"Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation",7
"Multi-objective software effort estimation",71
"A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering",64
"A comparison of 10 sampling algorithms for configurable systems",67
"Featured model-based mutation analysis",36
"Feature-model interfaces: the highway to compositional analyses of highly-configurable systems",32
"How does the degree of variability affect bug finding?",41
"Angelix: scalable multiline program patch synthesis via symbolic analysis",199
"An analysis of the search spaces for generate and validate patch generation systems",75
"PAC learning-based verification and model synthesis",11
"StubDroid: automatic inference of precise data-flow summaries for the android framework",33
"Exploring language support for immutability",22
"The evolution of C programming practices: a study of the Unix operating system 1973--2015",8
"An empirical study on the impact of C++ lambdas and programmer experience",28
"Understanding and fixing multiple language interoperability issues: the C/Fortran case",2
"BigDebug: debugging primitives for interactive big data processing in spark",37
"Debugging for reactive programming",14
"Revisit of automatic debugging via human focus-tracking analysis",24
"RETracer: triaging crashes by reverse execution from partial memory dumps",28
"Are ""non-functional"" requirements really non-functional?: an investigation of non-functional requirements in practice",38
"Probing for requirements knowledge to stimulate architectural thinking",5
"Risk-driven revision of requirements models",6
"Discovering ""unknown known"" security requirements",18
"Behavioral log analysis with statistical guarantees",
"Efficient large-scale trace checking using mapreduce",9
"Feedback-directed instrumentation for deployed JavaScript applications",13
"DoubleTake: fast and precise error detection via evidence-based dynamic analysis",19
"Automated partitioning of android applications for trusted execution environments",20
"Jumping through hoops: why do Java developers struggle with cryptography APIs?",68
"Finding security bugs in web applications using a catalog of access control patterns",17
"Reference hijacking: patching, protecting and analyzing on unmodified and non-rooted android devices",20
"Building a theory of job rotation in software engineering from an instrumental case study",9
"The challenges of staying together while moving fast: an exploratory study",19
"The sky is not the limit: multitasking across GitHub projects",42
"Quantifying and mitigating turnover-induced knowledge loss: case studies of chrome and a project at avaya",25
"Quality experience: a grounded theory of successful agile projects without dedicated testers",12
"Code review quality: how developers see it",38
"Revisiting code ownership and its relationship with software quality in the scope of modern code review",44
"IntEQ: recognizing benign integer overflows via equivalence checking across multiple precisions",5
"Nomen est omen: exploring and exploiting similarities between argument and parameter names",15
"Floating-point precision tuning using blame analysis",28
"Crowdsourcing program preconditions via a classification game",9
"Scalable thread sharing analysis",8
"Fixing deadlocks via lock pre-acquisitions",15
"Coverage-driven test code generation for concurrent classes",11
"Locking discipline inference and checking",9
"Improving refactoring speed by 10X",17
"SourcererCC: scaling code clone detection to big-code",129
"Understanding asynchronous interactions in full-stack JavaScript",26
"Shadow of a doubt: testing for divergences between software versions",21
"Mining the metadata: and its consequences",
"Views on internal and external validity in empirical software engineering",108
"Developing and evaluating software engineering process theories",11
"Automated data structure generation: refuting common wisdom",6
"Automated modularization of GUI test cases",4
"Making system user interactive tests repeatable: when and what should we control?",19
"ZoomIn: discovering failures by detecting wrong assertions",7
"Composite constant propagation: application to Android inter-component communication analysis",143
"Static control-flow analysis of user-driven callbacks in Android applications",120
"Truth in advertising: the hidden cost of mobile ads for software developers",80
"Interactive code review for systematic changes",40
"Automated decomposition of build targets",22
"Helping developers help themselves: automatic decomposition of code review changesets",66
"Data-delineation in software binaries and its application to buffer-overrun discovery",8
"Measuring software redundancy",21
"Gray computing: an analysis of computing with background JavaScript tasks",8
"Presence-condition simplification in highly configurable systems",27
"Symbolic model checking of product-line requirements using SAT-based methods",12
"Lightweight adaptive filtering for efficient learning and updating of probabilistic models",35
"Tempura: temporal dimension for IDEs",4
"Supporting selective undo in a code editor",33
"Cascade: a universal programmer-assisted type qualifier inference tool",9
"RECONTEST: effective regression testing of concurrent programs",25
"A synergistic analysis method for explaining failed regression tests",11
"An information retrieval approach for regression test prioritization based on program changes",63
"IccTA: detecting inter-component privacy leaks in Android apps",350
"Do security patterns really help designers?",34
"AppContext: differentiating malicious and benign mobile app behaviors using context",169
"TypeDevil: dynamic type inconsistency analysis for JavaScript",43
"Detecting inconsistencies in JavaScript MVC applications",29
"AutoCSP: automatically retrofitting CSP to web applications",20
"How much up-front?: a grounded theory of agile architecture",25
"Work practices and challenges in pull-based development: the integrator's perspective",152
"Build it yourself!: homegrown tools in a large software company",11
"Morpheus: variability-aware refactoring in the wild",34
"Does automated refactoring obviate systematic editing?",44
"When and why your code starts to smell bad",140
"Learning to log: helping developers make informed logging decisions",73
"Mining apps for abnormal usage of sensitive data",155
"Tracking static analysis violations over time to capture developer characteristics",14
"DirectFix: looking for simple program repairs",171
"Safe memory-leak fixing for C programs",55
"relifix: automated repair of software regressions",81
"The art of testing less without sacrificing quality",62
"No PAIN, no gain?: the utility of PArallel fault INjections",23
"A flexible and non-intrusive approach for computing complex structural coverage metrics",8
"Combining multi-objective search and constraint solving for configuring large software product lines",97
"A genetic algorithm for detecting significant floating-point inaccuracies",18
"Learning combinatorial interaction test generation strategies using hyperheuristic search",69
"Borrowing from the crowd: a study of recombination in software design competitions",25
"From developer networks to verified communities: a fine-grained approach",37
"Open source-style collaborative development practices in commercial projects using GitHub",49
"Database-backed program analysis for scalable error propagation",7
"Tricorder: building a program analysis ecosystem",103
"Alloy*: a general-purpose higher-order relational constraint solver",50
"DASE: document-assisted symbolic execution for improving automated software testing",20
"Compositional symbolic execution with memoized replay",19
"Regular property guided dynamic symbolic execution",21
"Combining symbolic execution and model checking for data flow testing",30
"Are students representatives of professionals in software engineering experiments?",130
"Why good developers write bad code: an observational case study of the impacts of organizational factors on software quality",31
"Stuck and frustrated or in flow and happy: sensing developers' emotions and progress",85
"What makes a great software engineer?",47
"Efficient scalable verification of LTL specifications",8
"Empirical study towards a leading indicator for cost of formal software verification",18
"Specifying event-based systems with a counting fluent temporal logic",5
"Coexecutability for efficient verification of data model updates",5
"Assert use in GitHub projects",31
"A programming model for sustainable software",24
"A comparative study of programming languages in Rosetta code",70
"Revisiting the impact of classification techniques on the performance of defect prediction models",166
"LACE2: better privacy-preserving data sharing for cross project defect prediction",41
"The impact of mislabelling on the performance and interpretation of defect prediction models",56
"ReCBuLC: reproducing concurrency bugs using local clocks",11
"Dynamic generation of likely invariants for multithreaded programs",6
"GPredict: generic predictive concurrency analysis",22
"Graph-based statistical language model for code",85
"Discovering information explaining API types using text classification",42
"How can I use this method?",65
"Hercules: reproducing crashes in real-world application binaries",20
"Caramel: detecting and fixing performance problems that have non-intrusive fixes",80
"An empirical study on real bug fixes",77
"Does the failing test execute a single or multiple faults?: an approach to classifying failing tests",6
"Trivial compiler equivalence: a large scale empirical study of a simple, fast and effective equivalent mutant detection technique",115
"Dynamic data flow testing of object oriented systems",25
"Enron's spreadsheets and related emails: a dataset and analysis",
"An empirical study on quality issues of production big data platform",
"Code reviews do not find bugs: how the current code review best practice slows us down",27
"Systematic testing of reactive software with non-deterministic events: a case study on LG electric oven",
"Empirically detecting false test alarms using association rules",
"Striving for failure: an industrial case study about test failure prediction",
"Automatic and continuous software architecture validation",
"Comparing software architecture recovery techniques using accurate dependencies",
"SPF: a middleware for social interaction in mobile proximity environments",
"Merits of organizational metrics in defect prediction: an industrial replication",
"Online defect prediction for imbalanced data",
"Measuring dependency freshness in software systems",
"A large-scale technology evaluation study: effects of model-based analysis and testing",
"Metamorphic model-based testing applied on NASA DAT: an experience report",37
"Improving predictability, efficiency and trust of model-based proof activity",
"Performance analysis using subsuming methods: an industrial case study",
"An industrial case study on the automated detection of performance regressions in heterogeneous environments",
"Industry practices and event logging: assessment of a critical software development process",
"A case study in locating the architectural roots of technical debt",
"Design and evaluation of a customizable multi-domain reference architecture on top of product lines of self-driving heavy vehicles: an industrial case study",
"Approximating attack surfaces with stack traces",
"Avoiding security pitfalls with functional programming: a report on the development of a secure XML validator",
"Should we move to stack overflow?: measuring the utility of social media for developer support",
"A field study on fostering structural navigation with prodet",
"How and when to transfer software engineering research via extensions",
"Evolution of software development strategies",6
"Drawing insight from student perceptions of reflective design learning",
"Effectiveness of persona with personality traits on conceptual design",
"Industry/university collaboration in software engineering education: refreshing and retuning our strategies",
"Novice code understanding strategies during a software maintenance assignment",
"Learning global agile software engineering using same-site and cross-site teams",
"Code repurposing as an assessment tool",
"Remote development and distance delivery of innovative courses: challenges and opportunities",
"Improving student group work with collaboration patterns: a case study",
"Teaching software systems thinking at the open university",
"Masters-level software engineering education and the enriched student context",
"Combining mastery learning with project-based learning in a first programming course: an experience report",
"Collaborative and cooperative-learning in software engineering courses",
"Using GSwE2009 for the evaluation of a master degree in software engineering in the universidad de la república",
"System thinking: educating t-shaped software engineers",
"Transparently teaching in the context of game-based learning: the case of simulES-W",
"Educating software engineering managers: revisited: what software project managers need to know today",
"Contest based learning with blending software engineering and business management: for students' high motivation and high practice ability",
"Concurrent software engineering and robotics education",
"The development of a dashboard tool for visualising online teamwork discussions",
"Software design studio: a practical example",
"Code hunt: experience with coding contests at scale",
"Does outside-in teaching improve the learning of object-oriented programming?",
"Active and inductive learning in software engineering education",
"In search of the emotional design effect in programming",
"Experiences in developing and delivering a programme of part-time education in software and systems security",
"Teaching software architecture to undergraduate students: an experience report",
"CS/SE instructors can improve student writing without reducing class time devoted to technical content: experimental results",
"Sustainability design and software: the karlskrona manifesto",
"Interdisciplinary design patterns for socially aware computing",
"The role of design thinking and physical prototyping in social software engineering",
"On the role of value sensitive concerns in software engineering practice",
"Engineering sustainability through language",
"Enabling the definition and enforcement of governance rules in open source systems",
"AppCivist: a service-oriented software platform for socially sustainable activism",
"SOA4DM: applying an SOA paradigm to coordination in humanitarian disaster response",
"Managing emergent ethical concerns for software engineering in society",
"Dementia and social sustainability: challenges for software engineering",
"Cognitively sustainable ICT with ubiquitous mobile services: challenges and opportunities",
"New initiative: the naturalness of software",
"Virtual reality in software engineering: affordances, applications, and challenges",
"CodeAware: sensor-based fine-grained monitoring and management of software artifacts",
"Free hugs: praising developers for their actions",
"How (much) do developers test?",
"A vision of crowd development",
"When app stores listen to the crowd to fight bugs in the wild",
"Incorporating human intention into self-adaptive systems",
"An initiative to improve reproducibility and empirical evaluation of software testing techniques",
"Inferring behavioral specifications from large-scale repositories by leveraging collective intelligence",
"Fast feedback cycles in empirical software engineering research",
"Dynamic safety cases for through-life safety assurance",
"Correctness and relative correctness",
"On architectural diversity of dynamic adaptive systems",
"Information transformation: an underpinning theory for software engineering",
"A unified framework for the comprehension of software's time dimension",
"Smart programming playgrounds",
"Capsule-oriented programming",
"Evolution-aware monitoring-oriented programming",
"Towards explicitly elastic programming frameworks",
"Optimising energy consumption of design patterns",
"Mining software repositories for social norms",
"Commit bubbles",
"Rapid multi-purpose, multi-commit code analysis",
"Leveraging informal documentation to summarize classes and methods in context",
"Bixie: finding and understanding inconsistent code",
"TaskNav: task-based navigation of software documentation",
"ViDI: the visual design inspector",
"Bootstrapping mobile app development",
"Source code curation on StackOverflow: the vesperin system",
"The ECCO tool: extraction and composition for clone-and-own",
"Extract package refactoring in ARIES",
"scvRipper: video scraping tool for modeling developers' behavior using interaction data",
"Chiminey: reliable computing and data management platform in the cloud",
"Automated program repair in an integrated development environment",
"FlexiSketch Team: collaborative sketching and notation creation on the fly",
"Interactive synthesis using free-form queries",
"Varis: IDE support for embedded client code in PHP web applications",
"Mu-Mmint: an IDE for model uncertainty",
"StriSynth: synthesis for live programming",
"CACHECA: a cache language model based code suggestion tool",
"ChangeScribe: a tool for automatically generating commit messages",
"Ekstazi: lightweight test selection",
"TesMa and CATG: automated test generation tools for models of enterprise applications",
"StressCloud: a tool for analysing performance and energy consumption of cloud applications",
"Analysis of android inter-app security vulnerabilities using COVERT",
"Ariadne: topology aware adaptive security for cyber-physical systems",
"Security toolbox for detecting novel and sophisticated android malware",
"Vermeer: a tool for tracing and explaining faulty C programs",
"JRebel.Android: runtime class- and resource reloading for android",
"FormTester: effective integration of model-based and manually specified test cases",
"Mining temporal properties of data invariants",
"Profiling kernels behavior to improve cpu / gpu interactions",
"Fast and precise statistical code completion",
"A combined technique of GUI ripping and input perturbation testing for Android apps",
"Enabling testing of Android apps",
"An approach to detect Android antipatterns",
"Textual analysis for code smell detection",
"A large scale study of license usage on GitHub",
"Understanding conflicts arising from collaborative development",
"Mastering global exceptions with policy-aware recommendations",
"Deep representations for software engineering",
"Automatic categorization of software libraries using bytecode",
"Post-dominator analysis for precisely handling implicit flows",
"Casper: using ghosts to debug null deferences with dynamic causality traces",
"Static detection of configuration-dependent bugs in configurable software",
"Improving cloud-based continuous integration environments",
"Interactive and collaborative source code annotation",
"Discovering code dependencies by harnessing developer's activity",
"Filtering code smells detection results",
"Enhancing partition testing through output variation",
"Segmentation based online performance problem diagnosis",
"Symbolic execution of MPI programs",
"Automatically fixing real-world JavaScript performance bugs",
"Dynamic analysis using JavaScript proxies",
"Is Carmen better than George?: testing the exploratory tester using HCI techniques",
"VIBeS, transition system mutation made easy",
"ProNat: an agent-based system design for programming in spoken natural language",
"Static analysis of concurrent higher-order programs",
"Conquering uncertainty in Java programming",
"MAPP: the berkeley model and algorithm prototyping platform",
"An efficient equivalence checking method for petri net based models of programs",
"Model-based run-time variability resolution for robotic applications",
"Tierless programming in JavaScript",
"Software development risk management: using machine learning for generating risk prompts",
"Reasoning based on imperfect context data in adaptive security",
"Automated planning for self-adaptive systems",
"Understanding the software fault introduction process",
"Scalable formal verification of UML models",
"Scalability studies on selective mutation testing",
"Qualitative analysis of knowledge transfer in pair programming",
"DIETs: recommender systems for mobile API developers",
"Statistical learning and software mining for agent based simulation of software evolution",
"Towards model driven architecture and analysis of system of systems access control",
"A unified approach to automatic testing of architectural constraints",
"Safe evolution patterns for software product lines",
"Strategies for prioritizing test cases generated through model-based testing approaches",
"Towards a practical security analysis methodology",
"Measuring software developers' perceived difficulty with biometric sensors",
"Mining patterns of sensitive data usage",
"Search-based migration of model variants to software product line architectures",
"On the architecture-driven development of software-intensive systems-of-systems",
"Automatic documentation generation via source code summarization",
"A declarative foundation for comprehensive history querying",
"An integrated multi-agent-based simulation approach to support software project management",
"Towards generation of software development tasks",
"Contributor's performance, participation intentions, its influencers and project performance",
"Supporting scientific SE process improvement",
"A comprehensive framework for the development of dynamic smart spaces",
"Verification of Android applications",
"A security practices evaluation framework",
"The green lab: experimentation in software energy efficiency",
"Software requirements patterns: a state of the art and the practice",
"Agile project management: from self-managing teams to large-scale development",
"Software engineering for privacy in-the-large",
"Exploration, analysis, and manipulation of source code using srcML",
"Reactive programming: a walkthrough",
"Load testing large-scale software systems",
"Big(ger) data in software engineering",
"The art and science of analyzing software data; quantitative methods",
"1st international workshop on big data software engineering (BIGDSE 2015)",
"2nd international workshop on context for software development (CSD 2015)",
"4th SEMAT workshop on general theory of software engineering (GTSE 2015)",
"5th international workshop on product line approaches in software engineering PLE for a sustainable society (PLEASE 2015)",
"2nd international workshop on rapid continuous software engineering (RCoSE 2015)",
"3rd international workshop on release engineering (RELENG 2015)",
"2nd international workshop on requirements engineering and testing (RET 2015)",
"Second international workshop on software architecture and metrics (SAM 2015)",
"8th international workshop on search-based software testing (SBST 2015)",
"SE4HPCS'15: the 2015 international workshop on software engineering for high performance computing in science",
"2nd international workshop on software engineering research and industrial practice (SER&IP 2015)",
"1st international workshop on software engineering for smart cyber-physical systems (SEsCPS 2015)",
"3rd international workshop on software engineering for systems-of-systems (SESoS 2015)",
"1st international workshop on software protection (SPRO 2015)",
"1st international workshop on TEchnical and LEgal aspects of data pRIvacy and SEcurity (TELERISE 2015)",
"5th international workshop on the twin peaks of requirements and architecture (TwinPeaks 2015)",
"Workshop on applications of human error research to improve software engineering (WAHESE 2015)",
"Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?",82
"Analyze this! 145 questions for data scientists in software engineering",115
"The dimensions of software engineering success",39
"How do professionals perceive legacy systems and software modernization?",40
"SimRT: an automated framework to support regression testing for data races",36
"Performance regression testing target prioritization via performance risk analysis",37
"Code coverage for suite evaluation by developers",86
"Time pressure: a controlled experiment of test case development and requirements review",18
"Verifying component and connector models against crosscutting structural views",20
"TradeMaker: automated dynamic analysis of synthesized tradespaces",18
"Lifting model transformations to product lines",39
"Automated goal operationalisation based on interpolation and SAT solving",12
"Mining configuration constraints: static analyses and empirical results",104
"Which configuration option should I change?",53
"Detecting differences across multiple instances of code clones",39
"Achieving accuracy and scalability simultaneously in detecting application clones on Android markets",189
"Two's company, three's a crowd: a case study of crowdsourcing software development",135
"Does latitude hurt while longitude kills? geographical and temporal separation in a large scale software development project",10
"Software engineering at the speed of light: how developers stay current using twitter",79
"Building it together: synchronous development in OSS",28
"A critical review of ""automatic patch generation learned from human-written patches"": essay on the problem statement and the evaluation of automatic software repair",
"Data-guided repair of selection statements",26
"The strength of random search on automated program repair",181
"MintHint: automated synthesis of repair hints",70
"Mining behavior models from user-intensive web applications",68
"Reviser: efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes",27
"Automated design of self-adaptive software with control-theoretical formal guarantees",124
"Perturbation analysis of stochastic systems with empirical distribution parameters",13
"How do centralized and distributed version control systems impact software changes?",77
"Transition from centralized to decentralized version control systems: a case study on reasons, barriers, and outcomes",35
"An exploratory study of the pull-based software development model",280
"Influence of social and technical factors for evaluating contribution in GitHub",198
"Understanding JavaScript event-based interactions",58
"Understanding understanding source code with functional magnetic resonance imaging",96
"Improving automated source code summarization via an eye-tracking study of programmers",97
"Using psycho-physiological measures to assess task difficulty in software development",123
"Dictionary learning based software defect prediction",93
"Comparing static bug finders and statistical prediction",67
"Coverage is not strongly correlated with test suite effectiveness",255
"How to make best use of cross-company data in software effort estimation?",41
"CARE: cache guided deterministic replay for concurrent Java programs",22
"Inferring models of concurrent systems from logs of their behavior with CSight",87
"Unleashing concurrency for irregular data structures",6
"ConLock: a constraint-based approach to dynamic checking on deadlocks in multithreaded programs",44
"SEEDS: a software engineer's energy-optimization decision support framework",126
"APE: an annotation language and middleware for energy-efficient mobile application development",34
"Making web applications more energy efficient for OLED smartphones",93
"Micro execution",38
"Unit test virtualization with VMVM",48
"Interpolated n-grams for model based testing",27
"An analysis of the relationship between conditional entropy and failed error propagation in software testing",33
"Trading robustness for maintainability: an empirical study of evolving c# programs",29
"Case studies and tools for contract specifications",21
"Using dynamic analysis to generate disjunctive invariants",22
"Inductive verification of data model invariants for web applications",16
"How do API documentation and static typing affect API usability?",50
"Live API documentation",150
"CodeHint: dynamic and interactive synthesis of code snippets",80
"Spotting working code examples",72
"Self-adaptation through incremental generative model transformations at runtime",39
"Hope for the best, prepare for the worst: multi-tier control for adaptive systems",40
"Brownout: building more robust cloud applications",117
"Integrating adaptive user interface capabilities in enterprise applications",17
"Programmers' build errors: a case study (at google)",85
"Understanding and improving software build teams",19
"Towards efficient optimization in package management systems",18
"Easing software component repository evolution",8
"AR-miner: mining informative reviews for developers from mobile app marketplace",285
"Mining billions of AST nodes to study actual and potential usage of Java language features",66
"Mining interprocedural, data-oriented usage patterns in JavaScript web applications",16
"Mining fine-grained code changes to detect unknown change patterns",73
"Detecting memory leaks through introspective dynamic behavior modelling using machine learning",18
"Automated memory leak detection for production use",26
"Vejovis: suggesting fixes for JavaScript faults",39
"Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation",30
"Us and them: a study of privacy requirements across north america, asia, and europe",25
"Distilling privacy requirements for mobile applications",26
"Uncertainty, risk, and information value in software requirements and architecture",72
"Requirements fixation",36
"Exploring variability-aware execution for testing plugin-based web applications",77
"A study of equivalent and stubborn mutation operators using human analysis of equivalence",105
"Cross-checking oracles from intrinsic software redundancy",33
"Mind the gap: assessing the conformance of software traceability to relevant guidelines",51
"Effects of using examples on structural model comprehension: a controlled experiment",16
"Design rule spaces: a new form of architecture insight",52
"Controlled modeling environment using flexibly-formatted spreadsheets",2
"Feature maintenance with emergent interfaces",31
"Detecting performance anti-patterns for applications developed using object-relational mapping",79
"Characterizing and detecting performance bugs for smartphone applications",170
"Checking app behavior against app descriptions",297
"AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction",171
"Patch verification via multiversion interprocedural control flow graphs",21
"Property differencing for incremental checking",30
"Symbolic assume-guarantee reasoning through BDD learning",6
"Enhancing symbolic execution with veritesting",175
"Manual refactoring changes with automated refactoring validation",43
"Alternate refactoring paths reveal usability problems",18
"A study and toolkit for asynchronous programming in c#",46
"Reuse-oriented reverse engineering of functional components from x86 binaries",15
"Automatic synthesis of modular connectors via composition of protocol mediation patterns",40
"Robust reconfigurations of component assemblies",47
"Drag-and-drop refactoring: intuitive and efficient program transformation",42
"Managing non-functional uncertainty via model-driven adaptivity",85
"GuideArch: guiding the exploration of architectural solution space under uncertainty",39
"Coupling software architecture and human architecture for collaboration-aware system adaptation",13
"Learning revised models for planning in adaptive systems",50
"RERAN: timing- and touch-sensitive record and replay for Android",263
"Inferring likely mappings between APIs",41
"Estimating mobile application energy consumption using program analysis",240
"Observable modified Condition/Decision coverage",40
"Creating a shared understanding of testing culture on a social coding site",111
"Billions and billions of constraints: whitebox fuzz testing in production",136
"Feedback-directed unit test generation for C/C++ using concolic execution",37
"A learning-based method for combining testing techniques",15
"Human performance regression testing",13
"Guided test generation for web applications",44
"Comparing multi-point stride coverage and dataflow coverage",20
"Interaction-based test-suite minimization",35
"Bridging the gap between the total and additional test-case prioritization strategies",119
"Detecting spurious counterexamples efficiently in abstract model checking",17
"Segmented symbolic analysis",18
"Explicating symbolic execution (xSymExe): an evidence-based verification framework",9
"Aluminum: principled scenario exploration through minimality",51
"Counter play-out: executing unrealizable scenario-based specifications",14
"Unifying FSM-inference algorithms through declarative specification",46
"What good are strong specifications?",46
"Comparative causality: explaining the differences between executions",36
"Automatic testing of sequential and concurrent substitutability",19
"Data clone detection and visualization in spreadsheets",59
"Partition-based regression verification",42
"Automated diagnosis of software configuration errors",94
"Detecting deadlock in programs with data-centric synchronization",24
"The design of bug fixes",48
"PorchLight: a tag-based approach to bug triaging",25
"Expositor: scriptable time-travel debugging with first-class traces",35
"Chronicler: lightweight recording to reproduce field failures",41
"Does bug prediction support human developers? findings from a google case study",74
"Transfer defect learning",247
"It's not a bug, it's a feature: how misclassification impacts bug prediction",248
"Assisting developers of big data analytics applications when deploying on hadoop clouds",100
"Broken sets in software repository evolution",18
"Boa: a language and infrastructure for analyzing ultra-large-scale software repositories",235
"How, and why, process metrics are better",176
"The role of domain knowledge and cross-functional communication in socio-technical coordination",29
"Dual ecological measures of focus in software development",72
"Not going to take this anymore: multi-objective overtime planning for software engineering projects",61
"Beyond boolean product-line model checking: dealing with feature attributes and multi-features",80
"Strategies for product-line verification: case studies and experiments",130
"On the value of user preferences in search-based software engineering: a case study in software product lines",187
"LASE: locating and applying systematic edits by learning from examples",131
"Search-based genetic optimization for deployment and reconfiguration of software in the cloud",122
"How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms",205
"Green streams for data-intensive software",27
"Dynamic synthesis of local time requirement for service composition",25
"Supporting swift reaction: automatically uncovering performance problems by systematic experiments",53
"Toddler: detecting performance problems via similar memory-access patterns",117
"Departures from optimality: understanding human analyst's information foraging in assisted requirements tracing",32
"Analysis of user comments: an approach for software requirements evolution",223
"Requirements modelling by synthesis of deontic input-output automata",21
"Automated reliability estimation over partial systematic explorations",14
"Safe software updates via multi-version execution",72
"Reliability analysis in symbolic pathfinder",86
"Engineering adaptive privacy: on the role of privacy awareness requirements",41
"Mining SQL injection and cross site scripting vulnerabilities using hybrid program analysis",76
"Path sensitive static analysis of web applications for remote code execution vulnerability detection",50
"Automated software architecture security risk analysis using formalized signatures",55
"Why don't software developers use static analysis tools to find bugs?",287
"Exploring the impact of inter-smell relations on software maintainability: an empirical study",125
"An empirical study on the developers' perception of software coupling",87
"X-PERT: accurate identification of cross-browser issues in web applications",96
"Expectations, outcomes, and challenges of modern code review",355
"UML in practice",206
"Cassandra: proactive conflict minimization through optimized task scheduling",48
"Are your incoming aliases really necessary? counting the cost of object ownership",10
"Efficient construction of approximate call graphs for JavaScript IDE services",86
"Improving feature location practice with multi-faceted interactive exploration",39
"SemFix: program repair via semantic analysis",357
"Automatic recovery from runtime failures",86
"Program transformations to fix C integers",57
"Automatic patch generation learned from human-written patches",382
"Reverb: recommending code-related web pages",38
"Dynamic injection of sketching features into GEF based diagram editors",6
"Discovering essential code elements in informal documentation",119
"Automatic query reformulations for text retrieval in software engineering",128
"Technical debt: past, present, and future (panel)",
"Scaling agile methods to regulated environments: an industry case study",
"Agility at scale: economic governance, measured improvement, and disciplined delivery",
"Distributed development considered harmful?",
"Measuring architecture quality by structure plus history analysis",
"Obtaining ground-truth software architectures",
"MIDAS: a design quality assessment method for industrial software",
"Evaluating usefulness of software metrics: an industrial experience report",
"Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation",
"Estimating software-intensive projects in the absence of historical data",
"Pathways to technology transfer and adoption: achievements and challenges (mini-tutorial)",
"User involvement in software evolution practice: a case study",
"A characteristic study on failures of production distributed data-parallel programs",
"Is time-zone proximity an advantage for software development? the case of the brazilian IT industry",
"A study of enabling factors for rapid fielding: combined practices to balance speed and stability",
"JST: an automatic test generation tool for industrial Java applications with strings",
"Efficient and change-resilient test automation: an industrial case study",32
"Automatic detection of performance deviations in the load testing of large scale systems",
"Detecting inconsistencies in wrappers: a case study",
"Categorizing bugs with social networks: a case study on four open source software communities",86
"Predicting bug-fixing time: an empirical study of commercial software projects",
"Authentic assessment in software engineering education based on PBL principles: a case study in the telecom market",
"Studios in software engineering education: towards an evaluable model",
"Enabling a classroom design studio with a collaborative sketch design tool",
"A framework to evaluate software engineering student contests: evaluation and integration with academic programs",
"An evaluation of interactive test-driven labs with WebIDE in CS0",
"POPT: a problem-oriented programming and testing approach for novice students",
"Teaching developer skills in the first software engineering course",
"Teaching and learning programming and software engineering via interactive gaming",
"Town hall discussion of SE 2004 revisions (panel)",
"Teaching students global software engineering skills using distributed scrum",
"Teaching software process modeling",
"Industry involvement in ICT curriculum: a comparative survey",
"Vulnerability of the day: concrete demonstrations for software engineering undergraduates",
"Eliminative induction: a basis for arguing system confidence",
"Exploring the internal state of user interfaces by combining computer vision techniques with grammatical inference",
"Semantic smells and errors in access control models: a case study in PHP",
"Practical semantic test simplification",
"Understanding regression failures through test-passing and test-failing code changes",
"Temporal code completion and navigation",
"Situational awareness: personalizing issue tracking systems",
"GROPG: a graphical on-phone debugger",
"Why did this code change?",
"Deciphering the story of software development through frequent pattern mining",
"Liberating pair programming research from the oppressive Driver/Observer regime",
"Pricing crowdsourcing-based software development tasks",
"Building test suites in social coding sites by leveraging drive-by commits",
"Supporting application development with structured queries in the cloud",
"Hunting for smells in natural language tests",
"Bottom-up model-driven development",
"An approach for restructuring text content",
"A case for human-driven software development",
"A framework for managing cloned product variants",
"Sketching software in the wild",
"On extracting unit tests from interactive live programming sessions",
"Towards automated testing and fixing of re-engineered feature models",
"Computational alignment of goals and scenarios for complex systems",
"Service networks for development communities",
"Formal specifications better than function points for code sizing",
"Using mutation analysis for a model-clone detector comparison framework",
"On the relationships between domain-based coupling and code clones: an exploratory study",
"Quantitative program slicing: separating statements by relevance",
"Example-driven modeling: model = abstractions + examples",
"Towards recognizing and rewarding efficient developer work patterns",
"Selecting checkpoints along the time line: a novel temporal checkpoint selection strategy for monitoring a batch of parallel business processes",
"LAMBDAFICATOR: from imperative to functional programming through automated refactoring",
"JITTAC: a just-in-time tool for architectural consistency",
"Seahawk: stack overflow in the IDE",
"DRC: a detection tool for dangling references in PHP-based web applications",
"TestEvol: a tool for analyzing test-suite evolution",
"Query quality prediction and reformulation for source code search: the refoqus tool",14
"A large scale Linux-kernel based benchmark for feature location research",
"NavClus: a graphical recommender for assisting code exploration",
"LASE: an example-based program transformation tool for locating and applying systematic edits",
"CEL: modeling everywhere",
"V:ISSUE:LIZER: exploring requirements clarification in online communication over time",
"YODA: young and newcomer developer assistant",
"RADAR: a tool for debugging regression problems in C/C++ software",
"MCT: a tool for commenting programs by multimedia comments",
"Memoise: a tool for memoized symbolic execution",
"Controller synthesis: from modelling to enactment",
"A study of variability spaces in open source software",
"Implementing database access control policy from unconstrained natural language text",
"Increasing anomaly handling efficiency in large organizations using applied machine learning",
"Analyzing the change-proneness of service-oriented systems from an industrial perspective",3
"Supporting maintenance tasks on transformational code generation environments",
"An approach to documenting and evolving architectural design decisions",
"An observable and controllable testing framework for modern systems",
"Toward a software product line for affective-driven self-adaptive systems",
"Normalizing source code vocabulary to support program comprehension and software quality",
"Integrating systematic exploration, analysis, and maintenance in software development",
"Fostering software quality assessment",
"A framework for self-healing software systems",
"Building high assurance secure applications using security patterns for capability-based platforms",
"Systematically selecting a software module during opportunistic reuse",
"Informing development decisions: from data to information",
"Understanding and simulating software evolution",
"An ontology toolkit for problem domain concept location in program comprehension",
"Measuring the forensic-ability of audit logs for nonrepudiation",
"SNIPR: complementing code search with code retargeting capabilities",
"Supporting incremental programming with ghosts",
"Novice understanding of program analysis tool notifications",
"Energy aware self-adaptation in mobile systems",
"ConfDiagnoser: an automated configuration error diagnosis tool for Java software",
"Reproducing and debugging field failures in house",
"Fault comprehension for concurrent programs",
"A proposal for the improvement of project's cost predictability using EVM and historical data of cost",
"Studying the effect of co-change dispersion on software quality",
"A roadmap for software maintainability measurement",
"Reasoning with qualitative preferences to develop optimal component-based systems",
"From models to code and back: correct-by-construction code from UML and ALF",
"Mitigating the obsolescence of specification models of service-based systems",
"Decision theoretic requirements prioritization: a two-step approach for sliding towards value realization",
"Changeset based developer communication to detect software failures",
"Identifying failure inducing developer pairs within developer networks",
"On identifying user complaints of iOS apps",
"Automated testing of GUI applications: models, tools, and controlling flakiness",
"Build your own model checker in one month",
"Data science for software engineering",
"Software analytics: achievements and challenges",
"Developing verified programs with dafny",
"Software metrics: pitfalls and best practices",
"Efficient quality assurance of variability-intensive systems",
"Software requirement patterns",
"1st international workshop on assurance cases for software-intensive systems (ASSURE 2013)",
"8th international workshop on automation of software test (AST 2013)",
"1st international workshop on combining modelling and search-based software engineering (CMSBSE 2013)",
"3rd international workshop on collaborative teaching of globally distributed software development (CTGDSD 2013)",
"2nd SEMAT workshop on a general theory of software engineering (GTSE 2013)",
"1st international workshop on live programming (LIVE 2013)",
"1st international workshop on the engineering of mobile-enabled systems (MOBS 2013)",
"4th international workshop on managing technical debt (MTD 2013)",
"1st international workshop on natural language analysis in software engineering (NaturaLiSE 2013)",
"4th international workshop on product LinE approaches in software engineering (PLEASE 2013)",
"1st international workshop on release engineering (RELENG 2013)",
"5th international workshop on software engineering for computational science and engineering (SE-CSE 2013)",
"5th international workshop on software engineering in health care (SEHC 2013)",
"2nd international workshop on the twin peaks of requirements and architecture (TwinPeaks 2013)",
"2nd international workshop on user evaluations for software engineering researchers (USER 2013)",
"A systematic study of automated program repair: fixing 55 out of 105 bugs for $8 each",395
"Where should the bugs be fixed? - more accurate information retrieval-based bug localization based on bug reports",332
"Developer prioritization in bug repositories",125
"WhoseFault: automatic developer-to-fault assignment through fault localization",50
"Recovering traceability links between an API and its learning resources",108
"Generating range fixes for software configuration",96
"Graph-based pattern-oriented, context-sensitive source code completion",115
"Automatic input rectification",56
"Overcoming the challenges in cost estimation for distributed software projects",33
"Characterizing logging practices in open-source software",115
"The impacts of software process improvement on developers: a systematic review",
"Combining functional and imperative programming for multicore software: an empirical study evaluating Scala and Java",50
"Uncovering performance problems in Java applications with reference propagation profiling",52
"Performance debugging in the large via mining millions of stack traces",144
"Automatically finding performance problems with feedback-directed learning software testing",94
"Predicting performance via automated feature-interaction detection",154
"Sound empirical evidence in software testing",124
"Privacy and utility for defect prediction: experiments with MORPH",42
"Bug prediction based on fine-grained module histories",80
"Reconciling manual and automatic refactoring",90
"WitchDoctor: IDE support for real-time auto-completion of refactorings",72
"Use, disuse, and misuse of automated refactorings",123
"Test confessions: a study of testing practices for plug-in systems",59
"How do professional developers comprehend software?",147
"Asking and answering questions about unfamiliar APIs: an exploratory study",75
"Automated repair of HTML generation errors in PHP applications using string constraint solving",104
"Leveraging test generation and specification mining for automated bug detection without false positives",57
"Axis: automatically fixing atomicity violations through solving control constraints",72
"CBCD: cloned buggy code detector",84
"Crosscutting revision control system",5
"Where does this code come from and where does it go? - integrated code history tracker for open source systems -",31
"Improving early detection of software merge conflicts",93
"A history-based matching approach to identification of framework evolution",62
"Detecting similar software applications",105
"Content classification of development emails",79
"Identifying Linux bug fixing patches",90
"Active refinement of clone anomaly reports",30
"Automated analysis of CSS rules to support style maintenance",48
"Graph-based analysis and prediction for software evolution",172
"Integrated impact analysis for managing software changes",124
"Detecting and visualizing inter-worksheet smells in spreadsheets",115
"An empirical study about the effectiveness of debugging when random test cases are used",17
"Reducing confounding bias in predicate-level statistical debugging metrics",35
"BugRedux: reproducing field failures for in-house debugging",147
"Object-centric debugging",62
"Disengagement in pair programming: does it matter?",16
"Ambient awareness of build status in collocated software teams",22
"What make long term contributors: willingness and opportunity in OSS community",104
"Development of auxiliary functions: should you be agile? an empirical assessment of pair programming and test-first programming",21
"Maintaining invariant traceability through bidirectional transformations",46
"Slicing MATLAB simulink models",59
"Partial evaluation of model transformations",16
"Partial models: towards modeling and reasoning with uncertainty",113
"Static detection of resource contention problems in server-side scripts",23
"Amplifying tests to validate exception handling code",20
"MagicFuzzer: scalable deadlock detection for large-scale applications",68
"Does organizing security patterns focus architectural choices?",30
"Enhancing architecture-implementation conformance with change management and support for behavioral mapping",30
"A tactic-centric approach for automating traceability of quality concerns",74
"Build code analysis with symbolic evaluation",52
"An automated approach to generating efficient constraint solvers",12
"Simulation-based abstractions for software product-line model checking",60
"Using dynamic analysis to discover polynomial and array invariants",66
"Metadata invariants: checking and inferring metadata coding conventions",15
"Generating obstacle conditions for requirements completeness",34
"make test-zesti: a symbolic execution solution for improving regression testing",66
"BALLERINA: automatic generation and clustering of efficient random unit tests for multithreaded code",51
"On-demand test suite reduction",68
"Automated detection of client-state manipulation vulnerabilities",16
"Understanding integer overflow in C/C++",141
"A large scale exploratory analysis of software vulnerability life cycles",115
"Synthesizing API usage examples",136
"Semi-automatically extracting FAQs to improve accessibility of software development knowledge",47
"Temporal analysis of API usage concepts",43
"Inferring method specifications from natural language API descriptions",113
"Automatic parameter recommendation for practical API usage",90
"On the naturalness of software",405
"Recommending source code for use in rapid software prototypes",55
"Active code completion",71
"Automated oracle creation support, or: how I learned to stop worrying about fault propagation and love mutation testing",64
"Automating test automation",76
"Stride: search-based deterministic replay in polynomial time via bounded linkage",29
"iTree: efficiently discovering high-coverage configurations using interaction trees",
"Inferring class level specifications for distributed systems",24
"Statically checking API protocol conformance with mined multi-object specifications",65
"Behavioral validation of JFSL specifications through model synthesis",1
"Verifying client-side input validation functions using string analysis",24
"Specification patterns from research to industry: a case study in service-based applications",
"Methodology for migration of long running process instances in a global large scale BPM environment in credit suisse's SOA landscape",
"Information needs for software development analytics",
"Software analytics in practice: mini tutorial",
"Large-scale formal verification in practice: a process perspective",
"Constructing parser for industrial software specifications containing formal and natural language description",7
"Formal correctness, safety, dependability, and performance analysis of a satellite",
"Goldfish bowl panel: software development analytics",
"Making sense of healthcare benefits",
"On the proactive and interactive visualization for feature evolution comprehension: an industrial investigation",
"Extending static analysis by mining project-specific rules",
"Debugger canvas: industrial experience with the code bubbles paradigm",
"Characterizing and predicting which bugs get reopened",120
"ReBucket: a method for clustering duplicate crash reports based on call stack similarity",
"Understanding the impact of pair programming on developers attention: a case study on a large industrial experimentation",
"How much does unused code matter for maintenance?",
"Using knowledge elicitation to improve web effort estimation: lessons from six industrial case studies",
"Efficient reuse of domain-specific test knowledge: an industrial case in the smart card domain",
"The quamoco product quality modelling and assessment approach",103
"Industrial application of concolic testing approach: a case study on libexif by using CREST-BV and KLEE",
"Teaching software engineering and software project management: an integrated and practical approach",
"Teaching collaborative software development: a case study",
"Using continuous integration of code and content to teach software engineering with limited resources",
"Stages in teaching software testing",
"Integrating tools and frameworks in undergraduate software engineering curriculum",
"What scope is there for adopting evidence-informed teaching in SE?",18
"FOCUS: an adaptation of a SWEBOK-based curriculum for industry requirements",
"Ten tips to succeed in global software engineering education",
"Collaboration patterns in distributed software development projects",
"Improving PSP education by pairing: an empirical study",
"Five days of empirical software engineering: the PASED experience",
"Automatically detecting developer activities and problems in software development work",
"Software process improvement through the identification and removal of project-level knowledge flow obstacles",
"Symbiotic general-purpose and domain-specific languages",
"Evaluating the specificity of text retrieval queries to support software engineering tasks",
"Co-adapting human collaborations and software architectures",
"Release engineering practices and pitfalls",
"Augmented intelligence - the new AI - unleashing human capabilities in knowledge work",
"On how often code is cloned across repositories",
"Mining input sanitization patterns for predicting SQL injection and cross site scripting vulnerabilities",
"Inferring developer expertise through defect analysis",
"Green mining: investigating power consumption across versions",
"Multi-label software behavior learning",
"Trends in object-oriented software evolution: investigating network properties",
"Exploring techniques for rationale extraction from existing documents",
"Continuous social screencasting to facilitate software tool discovery",
"UDesignIt: towards social media for community-driven design",
"Influencing the adoption of software engineering methods using social software",
"Toward actionable, broadly accessible contests in software engineering",
"CodeTimeline: storytelling with versioning data",
"Analyzing multi-agent systems with probabilistic model checking approach",8
"Brace: an assertion framework for debugging cyber-physical systems",
"Augmenting test suites effectiveness by increasing output diversity",
"Improving IDE recommendations by considering global implications of existing recommendations",
"Towards flexible evolution of dynamically adaptive systems",
"Towards business processes orchestrating the physical enterprise with wireless sensor networks",
"Engineering and verifying requirements for programmable self-assembling nanomachines",
"Facilitating communication between engineers with CARES",
"Interactive refinement of combinatorial test plans",
"TraceLab: an experimental workbench for equipping researchers to innovate, synthesize, and comparatively evaluate traceability solutions",
"Specification engineering and modular verification using a web-integrated verifying compiler",
"Writing dynamic service orchestrations with DSOL",
"MASH: a tool for end-user plug-in composition",
"BabelRef: detection and renaming tool for cross-language program entities in dynamic web applications",
"MDSheet: a framework for model-driven spreadsheet engineering",
"WorkItemExplorer: visualizing software development tasks using an interactive exploration environment",
"Runtime monitoring of component changes with Spy@Runtime",
"GraPacc: a graph-based pattern-oriented, context-sensitive code completion tool",
"Code bubbles: a practical working-set programming environment",
"EVOSS: a tool for managing the evolution of free and open source software systems",
"Supporting extract class refactoring in eclipse: the ARIES project",
"EXSYST: search-based GUI testing",
"JavaMOP: efficient parametric runtime monitoring framework",
"Augmenting test suites automatically",
"Using the GPGPU for scaling up mining software repositories",
"FastFix: monitoring control for remote software maintenance",
"Modeling cloud performance with kriging",
"SOA adoption in the italian industry",
"A bidirectional model-driven spreadsheet environment",
"A self-healing technique for Java applications",
"When open source turns cold on innovation - the challenges of navigating licensing complexities in new research domains",
"Language modularity with the MPS language workbench",
"Mining application repository to recommend XML configuration snippets",
"Locating features in dynamically configured avionics software",
"Detecting metadata bugs on the fly",
Blaze,
"ConTexter feedback system",
"xMapper: an architecture-implementation mapping tool",
"ConcernReCS: finding code smells in software aspectization",
"Egidio: a non-invasive approach for synthesizing organizational models",
"SDiC: context-based retrieval in eclipse",
"An integrated bug processing framework",
"Repository for model driven development (ReMoDD)",
"Going global with agile service networks",
"Using structural and semantic information to support software refactoring",
"An approach to variability management in service-oriented product lines",
"Using machine learning to enhance automated requirements model transformation",
"Security testing of web applications: a research plan",
"Application of self-adaptive techniques to federated authorization models",
"Improving information retrieval-based concept location using contextual relationships",
"Effective specification of decision rights and accountabilities for better performing software engineering projects",
"Search based design of software product lines architectures",
"Software fault localization based on program slicing spectrum",
"Architectural task allocation in distributed environment: a traceability perspective",
"Using invariant relations in the termination analysis of while loops",
"Software regression as change of input partitioning",
"A generic methodology to derive domain-specific performance feedback for developers",
"Towards the verification of multi-diagram UML models",
"Documenting and sharing knowledge about code",
"Timely and efficient facilitation of coordination of software developers' activities",
"Stack layout transformation: towards diversity for securing binary programs",
"Synthesis of event-based controllers: a software engineering challenge",
"Empirically researching development of international software",
"Model translations among big-step modeling languages",
"HARPPIE: hyper algorithmic recipe for productive parallelism intensive endeavors",
"On the analysis of evolution of software artefacts and programs",1
"Societal computing",
"Finding suitable programs: semantic search with incomplete and lightweight specifications",
"Certification-based development of critical systems",
"Testing and debugging UML models based on fUML",
"Bridging the divide between software developers and operators using logs",
"The co-evolution of socio-technical structures in sustainable software development: lessons from the open source software communities",
"Log-based testing",
"Moving mobile applications between mobile devices seamlessly",
"Timely detection of coordination requirements to support collaboration among software developers",
"Improving failure-inducing changes identification using coverage analysis",
"A study on improving static analysis tools: why are we not using them?",
"Winbook: a social networking based framework for collaborative requirements elicitation and WinWin negotiations",
"Using automatic static analysis to identify technical debt",
"Coupled evolution of model-driven spreadsheets",
"Managing evolution of software product line",
"Enabling dynamic metamodels through constraint-driven modeling",
"Assisting end-user development in browser-based mashup tools",
"Hot clones: combining search-driven development, clone management, and code provenance",
"Capturing and exploiting fine-grained IDE interactions",
"Restructuring unit tests with TestSurgeon",
"A requirements-based approach for the design of adaptive systems",
"Petri nets state space analysis in the cloud",
"Mining Java class identifier naming conventions",
"Online sharing and integration of results from mining software repositories",
"Refounding software engineering: the semat initiative (invited presentation)",
"Autofolding for Source Code Summarization",17
"AutoSense: A Framework for Automated Sensitivity Analysis of Program Data",5
"On the Positive Effect of Reactive Programming on Software Comprehension: An Empirical Study",14
"Reasoning About Identifier Spaces: How to Make Chord Correct",7
"Semantics-Based Obfuscation-Resilient Binary Code Similarity Comparison with Applications to Software and Algorithm Plagiarism Detection",
"The Work Life of Developers: Activities, Switches and Perceived Productivity",33
"Language Inclusion Checking of Timed Automata with Non-Zenoness",0
"Model Transformation Modularization as a Many-Objective Optimization Problem",21
"Testing from Partial Finite State Machines without Harmonised Traces",4
"Using Natural Language Processing to Automatically Detect Self-Admitted Technical Debt",36
"When and Why Your Code Starts to Smell Bad (and Whether the Smells Go Away)",45
"Clarifications on the Construction and Use of the ManyBugs Benchmark",1
"Comments on ScottKnottESD in response to ""An empirical comparison of model validation techniques for defect prediction models""",
"Adaptive Multi-Objective Evolutionary Algorithms for Overtime Planning in Software Projects",18
"Automated Extraction and Clustering of Requirements Glossary Terms",8
"Deriving Bisimulation Relations from Path Extension Based Equivalence Checkers",1
"Identifying Extract Method Refactoring Opportunities Based on Functional Relevance",11
"Software Numerical Instability Detection and Diagnosis by Combining Stochastic and Infinite-Precision Testing",4
"A Qualitative Study of Application-Level Caching",9
"A Survey of App Store Analysis for Software Engineering",
"Reporting Usability Defects: A Systematic Literature Review",
"Static Analysis of Model Transformations",25
"Automatic Contract Insertion with CCBot",4
"GK-Tail+ An Efficient Approach to Learn Software Models",11
"Imprecise Matching of Requirements Specifications for Software Services Using Fuzzy Logic",7
"Locating Software Faults Based on Minimum Debugging Frontier Set",5
"Preventing Defects: The Impact of Requirements Traceability Completeness on Software Quality",25
"A Dissection of the Test-Driven Development Process: Does It Really Matter to Test-First or to Test-Last?",35
"A Feature-Based Classification of Model Repair Approaches",22
"Keyword Search for Building Service-Based Systems",11
"Supporting Change Impact Analysis Using a Recommendation System: An Industrial Case Study in a Safety-Critical Context",25
"A Taxonomy and Qualitative Comparison of Program Analysis Techniques for Security Assessment of Android Software",
"Automated Steering of Model-Based Test Oracles to Admit Real Program Behaviors",7
"Online Reliability Prediction via Motifs-Based Dynamic Bayesian Networks for Service-Oriented Systems",13
"The Value of Exact Analysis in Requirements Selection",15
"Approaches to Co-Evolution of Metamodels and Models: A Survey",19
"A System for Profiling and Monitoring Database Access Patterns by Application Programs for Anomaly Detection",13
"Model-Based Self-Aware Performance and Resource Management Using the Descartes Modeling Language",38
"Self-Adaptive and Online QoS Modeling for Cloud-Based Software Services",18
"The Use of Summation to Aggregate Software Metrics Hinders the Performance of Defect Prediction Models",27
"An Enhanced Bailout Protocol for Mixed Criticality Embedded Software",16
"An Improved SDA Based Defect Prediction Framework for Both Within-Project and Cross-Project Class-Imbalance Problems",42
"Efficient Dynamic Updates of Distributed Components Through Version Consistency",9
"Mining Sequences of Developer Interactions in Visual Studio for Usage Smells",17
"Test Oracle Strategies for Model-Based Testing",21
"Automating Live Update for Generic Server Programs",7
"CACheck: Detecting and Repairing Cell Arrays in Spreadsheets",14
"Dependence Guided Symbolic Execution",17
"Improving Automated Bug Triaging with Specialized Topic Model",38
"ARENA: An Approach for the Automated Generation of Release Notes",19
"A Study of Causes and Consequences of Client-Side JavaScript Bugs",14
"Automated Synthesis and Dynamic Analysis of Tradeoff Spaces for Object-Relational Mapping",6
"DECAF: A Platform-Neutral Whole-System Dynamic Binary Analysis Platform",17
"How Social and Communication Channels Shape and Challenge a Participatory Culture in Software Development",59
"An Empirical Comparison of Model Validation Techniques for Defect Prediction Models",121
"Interaction Models and Automated Control under Partial Observable Environments",5
"Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs",140
"Process Aspects and Social Dynamics of Contemporary Code Review: Insights from Open Source Development and Industrial Practice at Microsoft",22
"Timed Automata Modeling and Verification for Publish-Subscribe Structures Using Distributed Resources",9
"A Study of Social Interactions in Open Source Component Use",4
"Collaborative Model-Driven Software Engineering: A Classification Framework and a Research Map",
"EARMO: An Energy-Aware Refactoring Approach for Mobile Apps",11
"Entropy Based Software Reliability Analysis of Multi-Version Open Source Software",5
"On the Use of Hidden Markov Model to Predict the Time to Fix Bugs",4
"Revisiting the Performance Evaluation of Automated Approaches for the Retrieval of Duplicate Issue Reports",9
"Tracking Load-Time Configuration Options",43
"Data Scientists in Software Teams: State of the Art and Challenges",18
"Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases",33
"Expanding Queries for Code Search Using Semantically Related API Class-names",3
"Metamorphic Testing of RESTful Web APIs",11
"Predicting Future Developer Behavior in the IDE Using Topic Models",5
"Using Local Clocks to Reproduce Concurrency Bugs",0
"Authors’ Reply to “Comments on ‘Researcher Bias: The Use of Machine Learning in Software Defect Prediction’”",
"A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion",8
"Coordination Challenges in Large-Scale Software Development: A Case Study of Planning Misalignment in Hybrid Settings",13
"Measuring Program Comprehension: A Large-Scale Field Study with Professionals",18
"The Scent of a Smell: An Extensive Comparison Between Textual and Structural Smells",26
"Two-Phase Assessment Approach to Improve the Efficiency of Refactoring Identification",1
"A Comparative Study to Benchmark Cross-Project Defect Prediction Approaches",28
"Enhancing the Description-to-Behavior Fidelity in Android Apps with Privacy Policy",11
"Global-Aware Recommendations for Repairing Violations in Exception Handling",5
"Heterogeneous Defect Prediction",95
"Towards Prioritizing Documentation Effort",4
"A Comparison of Program Comprehension Strategies by Blind and Sighted Programmers",3
"A Formal Specification and Verification Framework for Timed Security Protocols",4
"A Survey of Recent Trends in Testing Concurrent Software Systems",
"Control-Theoretical Software Adaptation: A Systematic Literature Review",
"Effectively Incorporating Expert Knowledge in Automated Software Remodularisation",0
"Implementing and Evaluating Candidate-Based Invariant Generation",3
"Mining Semantic Loop Idioms",6
"On Accelerating Source Code Analysis at Massive Scale",2
"On the Semantics of Distributed Reactive Programming: The Cost of Consistency",9
"A PVS-Simulink Integrated Environment for Model-Based Analysis of Cyber-Physical Systems",9
"MAHAKIL: Diversity Based Oversampling Approach to Alleviate the Class Imbalance Issue in Software Defect Prediction",43
"Predicting Delivery Capability in Iterative Software Development",10
"Specialising Software for Different Downstream Applications Using Genetic Improvement and Code Transplantation",11
"Towards Model Checking Android Applications",9
"Are Fix-Inducing Changes a Moving Target? A Longitudinal Case Study of Just-In-Time Defect Prediction",15
"Detecting Overly Strong Preconditions in Refactoring Engines",5
"Discipline Matters: Refactoring of Preprocessor Directives in the#ifdefHell",15
"EnergyPatch: Repairing Resource Leaks to Improve Energy-Efficiency of Android Apps",15
"Reviving Sequential Program Birthmarking for Multithreaded Software Plagiarism Detection",7
"Detecting Trivial Mutant Equivalences via Compiler Optimisations",23
"Hybrid Program Dependence Approximation for Effective Dynamic Impact Prediction",1
"Refactoring Inspection Support for Manual Refactoring Edits",3
"Understanding Diverse Usage Patterns from Large-Scale Appstore-Service Profiles",19
"Automatic Software Refactoring via Weighted Clustering in Method-Level Networks",1
"Choosing Component Origins for Software Intensive Systems: In-House, COTS, OSS or Outsourcing?—A Case Survey",
"Complete and Interpretable Conformance Checking of Business Processes",33
"Formulating Criticality-Based Cost-Effective Fault Tolerance Strategies for Multi-Tenant Service-Based Systems",8
"A Templating System to Generate Provenance",16
"Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets",44
"Measuring the Impact of Code Dependencies on Software Architecture Recovery Techniques",14
"Semantic Slicing of Software Version Histories",22
"A Developer Centered Bug Prediction Model",27
"Eliminating Path Redundancy via Postconditioned Symbolic Execution",9
"Empirical Evaluation of the Impact of Object-Oriented Code Refactoring on Quality Attributes: A Systematic Literature Review",
"Test Case Generation for Boolean Expressions by Cell Covering",1
"Efficient hybrid typestate analysis by determining continuation-equivalent states",74
"Performance modeling in industry: a case study on storage virtualization",
"Improving throughput via slowdowns",
"A role-based qualification and certification program for software architects: an experience report from Siemens",
"Assessments in global software development: a tailorable framework for industrial projects",
"Penalty policies in professional software development practice: a multi-method field study",
"A modeling language's evolution driven by tight interaction between academia and industry",
"Staying afloat in an expanding sea of choices: emerging best practices for eclipse rich client platform development",
"Integrating legacy systems with MDE",19
"Can clone detection support quality assessments of requirements specifications?",
"Comprehending module dependencies and sharing",11
"Making defect-finding tools work for you",
"Formalization and validation of a subset of the European Train Control System",
"Transparent combination of expert and measurement data for defect prediction: an industrial case study",
"From scripts to specifications: the evolution of a flight software testing effort",
"Experiences in initiating concurrency software research efforts",
"A cost-benefit framework for making architectural decisions in a business context",
"Social computing networks: a new paradigm for engineering self-adaptive pervasive software systems",
"An eclectic approach for change impact analysis",
"Domain-specific tailoring of code smells: an empirical study",
"CUTA4UML: bridging the gap between informal and formal requirements for dynamic system aspects",
"Can we certify systems for freedom from malware",
"Using dynamic execution traces and program invariants to enhance behavioral model inference",
"Synthesized essence: what game jams teach about prototyping of new software products",
"An analysis of the effects of company culture, education and experience on confirmation bias levels of software developers and testers",
"Compose & conquer: modularity for end-users",
"Slicing and dicing bugs in concurrent programs",
"Requirements reflection: requirements as runtime entities",
"Adinda: a knowledgeable, browser-based IDE",
"Code canvas: zooming towards better development environments",
"Knowledge transfer in global software development: leveraging acceptance test case specifications",
"Dynamic symbolic data structure repair",
"Towards better support for the evolution of safety requirements via the model monitoring approach",
"Supporting program comprehension with source code summarization",
"Detecting recurring and similar software vulnerabilities",
"Bridging lightweight and heavyweight task organization: the role of tags in adopting new task categories",
"Syde: a tool for collaborative software development",
"StakeSource: harnessing the power of crowdsourcing and social networks in stakeholder analysis",101
"CoDesign: a highly extensible collaborative software modeling framework",
"Flexible architecture conformance assessment with ConQAT",
"Visualizing the Java heap",
"FLAT3: feature location and textual tracing tool",
"Exemplar: EXEcutable exaMPLes ARchive",
"LSdiff: a program differencing tool to identify systematic structural differences",
"Legacy component integration by the Fujaba real-time tool suite",
"BPGen: an automated breakpoint generator for debugging",
"Runtime repair of software faults using event-driven monitoring",
"TestFul: automatic unit-test generation for Java classes",
"End-user requirements blogging with iRequire",
"The small project observatory: a tool for reverse engineering software ecosystems",
"A research demonstration of code bubbles",
"A flexible tool suite for change-aware test-driven development of web applications",
"Reverse engineering with the reclipse tool suite",
"SOABench: performance evaluation of service-oriented middleware made easy",
"SM@RT: representing run-time system data as MOF-compliant models",
"Eliminating dead-code from XQuery programs",
"EMFStore: a model repository for EMF models",
"CUTS: a system execution modeling tool for realizing continuous system integration testing",
"SSG: a model-based development environment for smart, security-aware GUIs",
"Managing iterations with UNICASE",
"JDF: detecting duplicate bug reports in Jazz",
"Using invariant functions and invariant relations to compute loop functions",
"LM: a miner for scenario-based specifications",
"RAW: runtime automatic workarounds",
"Portable secure identity management for software engineering",
"Dynamic service quality and resource negotiation for high-availability service-oriented systems",
"Zenet: generating and enforcing real-time temporal invariants",
"Balancing collaboration and discipline in software development processes",
"A proposal for consistency checking in dynamic software product line models using OCL",
"Behavioural validation of software engineering artefacts",
"Umple: a model-oriented programming language",
"An incremental methodology for quantitative software architecture evaluation with probabilistic models",
"Synthesize software product line",
"Choreography of intelligent e-services",
"A framework for handling variants of software models",
"Improving wide-area distributed system availability",
"Risk assessment on distributed software projects",
"VisAr3D: an approach to software architecture teaching based on virtual and augmented reality",
"Change impact analysis from business rules",
"Software architecture for systems of software intensive systems (S3): the concepts and detection of inter-system relationships",
"Formal methods for web services: a taxonomic approach",
"Exploratory study of a UML metric for fault prediction",
"Feature-oriented requirements modelling",
"Automatic enforcement of architectural design rules",
"SMT-based bounded model checking for multi-threaded software in embedded systems",
"Enhancing collaboration of multi-developer projects with synchronous changes",
"SOFAS: software analysis services",
"Informal software design knowledge reuse",
"The role of emergent knowledge structures in collaborative software development",
"Capturing the long-term impact of changes",
"Failure preventing recommendations",
"Impact analysis for event-based components and systems",
"Empirical evaluation of effort on composing design models",
"Analysis of execution log files",
"Towards end-user enabled web service consumption for Mashups",
"Constraint solving techniques for software testing and analysis",
"A methodology to support load test analysis",
"SUITE 2010: 2nd International Workshop on Search-Driven Development - Users, Infrastructure, Tools & Evaluation",
"New Horizons in Multicore Software Engineering",
"The 6th International Workshop on Software Engineering for Secure Systems (SESS'10)",
"Fifth International Workshop on Sharing and Reusing Architectural Knowledge (SHARK 2010)",
"First International Workshop on Product Line Approaches in Software Engineering (PLEASE 2010)",
"Fifth Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS 2010)",
"Second International Workshop on Software Research and Climate Change",
"First International Workshop on <u>Qu</u>antitative St<u>o</u>chastic Models in the <u>V</u>erific<u>a</u>tion and <u>D</u>es<u>i</u>gn of <u>S</u>oftware Systems (QUOVADIS 2010)",
"RSSE 2010: Second International Workshop on Recommendation Systems for Software Engineering",
"Web2SE: First Workshop on Web 2.0 for Software Engineering",
"1st International Workshop on Replication in Empirical Software Engineering Research (RESER)",
"Software Development Governance (SDG) Workshop",
"Fourth International Workshop on Software Clones (IWSC)",
"2010 ICSE International Workshop on Advances and Applications of Problem Orientation (WAAPO-2010)",
"Analysing ""people"" problems in requirements engineering",
"Software architecture: foundations, theory, and practice",
"Generative software development",
"Cloud service engineering",
"Bayesian methods for data analysis in software engineering",
"Cost effectiveness analysis in software engineering",
"Coaching agile software projects: tutorial proposal - ICSE 2010",
"Parameterized unit testing: theory and practice",
"The ""physics"" of notations: a scientific approach to designing visual notations in software engineering",
"Engineering safety- and security-related requirements for software-intensive systems: tutorial summary",
"Using ethnographic methods in software engineering research",
"Design science methodology: principles and practice",
"Combinatorial test design in practice",
"Software architecture and agile software development: a clash of two cultures?",
"Code clone detection in practice",
"New processes for new horizons: the incremental commitment model",
"Mining software engineering data",
"QED: a proof system based on reduction and abstraction for the static verification of concurrent software",
"Software engineering abstractions for the multi-touch revolution",11
"Predicting build outcome with developer interaction in Jazz",
"Improved social trustability of code search results",
"Test-driven roles for pair programming",
"Providing support for creating next generation software architecture languages",
"STORM: static unit checking of concurrent programs",
"Making program refactoring safer",
"Staying aware of relevant feeds in context",
"Developing and evaluating the code bubbles metaphor",
"Summarizing software concerns",
"Commit 2.0: enriching commit comments with visualization",
"Helios: impact analysis for event-based components and systems",
"Predicting build failures using social network analysis on developer communication",204
"How tagging helps bridge the gap between social and technical aspects in software development",81
"Tesseract: Interactive visual exploration of socio-technical relationships in software development",177
"HOLMES: Effective statistical debugging via efficient path profiling",272
"Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization",143
"Lightweight fault-localization using multiple coverage types",284
"Succession: Measuring transfer of code and developer productivity",56
"Predicting faults using the complexity of code changes",485
"A case-study on using an Automated In-process Software Engineering Measurement and Analysis system in an industrial environment",58
"Using quantitative analysis to implement autonomic IT systems",108
"Model evolution by run-time parameter adaptation",276
"Taming Dynamically Adaptive Systems using models and aspects",258
"Accurate Interprocedural Null-Dereference Analysis for Java",77
"The road not taken: Estimating path execution frequency statically",47
"Automatic dimension inference and checking for object-oriented programs",16
"In-field healing of integration problems with COTS components",33
"Modular string-sensitive permission analysis with demand-driven precision",37
"License integration patterns: Addressing license mismatches in component-based development",113
"Automatic creation of SQL Injection and cross-site scripting attacks",395
"Invariant-based automatic testing of AJAX user interfaces",243
"FEATUREHOUSE: Language-independent, automated software composition",258
"Automatically capturing source code context of NL-queries for software maintenance and reuse",189
"Semantics-based code search",270
"Reasoning about edits to feature models",355
"Learning operational requirements from goal models",88
"Complete and accurate clone detection in graph-based models",142
"How we refactor, and how we know it",
"The secret life of bugs: Going past the errors and omissions in software repositories",224
"Discovering and representing systematic code changes",172
"Improving API documentation usability with knowledge pushing",104
"Listening to programmers Taxonomies and characteristics of comments in operating system code",47
"Equality and hashing for (almost) free: Generating implementations from abstraction functions",17
"Locating need-to-translate constant strings for software internationalization",18
"Automatically finding patches using genetic programming",575
"FlexSync: An aspect-oriented approach to Java synchronization",22
"Effective static deadlock detection",175
"Refactoring sequential Java code for concurrency via concurrent libraries",145
"Maintaining and evolving GUI-directed test scripts",171
"MINTS: A general framework and tool for supporting test-suite minimization",99
"Synthesizing intensional behavior models by graph transformation",100
"Analyzing critical process models through behavior model synthesis",40
"Validation of contracts using enabledness preserving finite state abstractions",22
"WISE: Automated test generation for worst-case complexity",102
"Taint-based directed whitebox fuzzing",263
"Do code clones matter?",419
"Mining exception-handling rules as sequence association rules",111
"Safe-commit analysis to facilitate team software development",57
"Does distributed development affect software quality? An empirical case study of Windows Vista",260
"The impact of process choice in high maturity environments: An empirical analysis",29
"How to avoid drastic software process change (using stochastic stability)",28
"UEMan: A tool to manage user evaluation in development environments",
"TranStrL: An automatic need-to-translate string locator for software internationalization",
"SmartTutor: Creating IDE-based interactive tutorials via editable replay",
"A toolset for automated failure analysis",
"JUnitMX - A change-aware unit testing tool",
"CocoViz with ambient audio software exploration",
"ConcernLines: A timeline view of co-occurring concerns",
"Alitheia Core: An extensible software quality monitoring platform",
"VIDA: Visual interactive debugging",
"Feedback-driven requirements engineering: The Heuristic Requirements Assistant",
"Ævol: A tool for defining and planning architecture evolution",
"Ldiff: An enhanced line differencing tool",
"SemDiff: Analysis and recommendation support for API evolution",
"CloneDetective - A workbench for clone detection research",125
"Save-IDE - A tool for design, analysis and implementation of component-based embedded systems",
"FeatureIDE: A tool framework for feature-oriented software development",218
"Synthesis of timed behavior from scenarios in the Fujaba Real-Time Tool Suite",
"ContextServ: A platform for rapid and flexible development of context-aware Web services",
"ReMan: A pro-active reputation management infrastructure for composite Web services",
"ITACA: An integrated toolbox for the automatic composition and adaptation of Web services",
"Michael Freed , Daniel Bryce , Jiaying Shen , Ciaran O'Reilly, Interactive bootstrapped learning for end-user programming, Proceedings of the 7th AAAI Conference on Artificial Intelligence and Smarter Living: The Conquest of Complexity, p.27-32, January 01, 2011",
"Andrei Arusoaie , Dorel Lucanu , Vlad Rusu, Symbolic execution based on language transformation, Computer Languages, Systems and Structures, v.44 n.PA, p.48-71, December 2015",
"Analyzing security architectures",25
"VikiBuilder: end-user specification and generation of visual wikis",4
"Software design sketching with calico",55
"Automatically documenting program changes",114
"Towards automatically generating summary comments for Java methods",257
"Automatic detection of nocuous coordination ambiguities in natural language requirements",50
"Flexible and scalable consistency checking on product line variability models",57
"Variability modeling in the real: a perspective from the operating systems domain",155
"RESISTing reliability degradation through proactive reconfiguration",31
"Automatic construction of an effective training set for prioritizing static analysis warnings",
"An automated approach for finding variable-constant pairing bugs",6
"Deviance from perfection is a better criterion than closeness to evil when identifying risky code",70
"Seamlessly integrated, but loosely coupled: building user interfaces from heterogeneous components",
"Tool support for quality-driven development of software architectures",
"MiTV: multiple-implementation testing of user-input validators for web applications",
"Model comparison with GenericDiff",
"Eliminating products to test in a software product line",
"A visual interactive debugger based on symbolic execution",
"Model-driven reverse engineering of legacy graphical user interfaces",
"A two-step technique for extract class refactoring",49
"Detecting user-visible failures in AJAX web applications by analyzing users' interaction behaviors",
"Architectural style as an independent variable",
"Text mining in supporting software systems risk assurance",
"JCCD: a flexible and extensible API for implementing custom code clone detectors",
"PeerUnit: a framework for testing peer-to-peer systems",
"Reconfigurable run-time support for distributed service component architectures",
"MoDisco: a generic and extensible framework for model driven reverse engineering",
"Tool support for continuous maintenance of state machine models in program code",
"Reac2o: a runtime for enterprise system models",
"Symbolic PathFinder: symbolic execution of Java bytecode",224
"Enumeration refactoring: a tool for automatically converting Java constants to enumerated types",
"Verification-driven slicing of UML/OCL models",55
"Automated support for repairing input-model faults",13
"Security-driven model-based dynamic adaptation",42
"JRF-E: using model checking to give advice on eliminating memory model-related bugs",
"A bounded statistical approach for model checking of unbounded until properties",20
"Eliminating navigation errors in web applications via model checking and runtime enforcement of navigation state machines",53
"Towards mining replacement queries for hard-to-retrieve traces",68
"Tool support for essential use cases to better capture software requirements",33
"Timesheet assistant: mining and reporting developer effort",
"An experience report on scaling tools for mining software repositories using MapReduce",29
"iMashup: assisting end-user programming for the service-oriented web",
"MODA: automated test generation for database applications via mock objects",
"Random unit-test generation with MUT-aware sequence recommendation",
"End-user oriented critic specification for domain-specific visual language tools",
"Checking roundoff errors using counterexample-guided narrowing",
"Realizing architecture frameworks through megamodelling techniques",
"Recovering inter-project dependencies in software ecosystems",
"Automated program repair through the evolution of assembly code",
"Integrating model verification and self-adaptation",
"When to use data from other projects for effort estimation",
"Kadre: domain-specific architectural recovery for scientific software systems",
"Automated SQL query generation for systematic testing of database engines",
"Tag and prune: a pragmatic approach to software product line implementation",
"Reducing estimation uncertainty with continuous assessment: tracking the ""cone of uncertainty""",
"Using transitive changesets to support feature location",
"RuMoR: monitoring and recovery for BPEL applications",
"Model/analyzer: a tool for detecting, visualizing and fixing design errors in UML",
"CoGenTe: a tool for code generator testing",
"Impendulo: debugging the programmer",
"SpecDiff: debugging formal specifications",
"Deriving behavior of multi-user processes from interactive requirements validation",4
"Tool support for code generation from a UMLsec property",
"PlayGo: towards a comprehensive tool for scenario based programming",
"REMES tool-chain: a set of integrated tools for behavioral modeling and analysis of embedded systems",
"C2O: a tool for guided decision-making",16
"Search-carrying code",5
"Solving string constraints lazily",55
"Scenario-based and value-based specification mining: better together",
"Test generation to expose changes in evolving programs",54
"How did you specify your test suite",32
"Dynamic and transparent analysis of commodity production systems",54
"Apt-pbo: solving the software dependency problem using pseudo-boolean optimization",28
"A sentence-matching method for automatic license identification of source code files",81
"Detection of recurring software vulnerabilities",45
"Matching dependence-related queries in the system dependence graph",44
"PLASMA: a plan-based layered architecture for software model-driven adaptation",86
"A program differencing algorithm for verilog HDL",18
"Error-avoiding adaptors for black-box software components",
"Automated model grouping",
"Automatic inference of abstract type behavior",
"Extraction and visualization of traceability relationships between documents and source code",
"Model checking graph representation of precise boolean inter-procedural flow analysis",
"The influence of multiple artifacts on the effectiveness of software testing",
"Automated web application testing using search based software engineering",101
"Auto-locating and fix-propagating for HTML validation errors to PHP server-side code",37
"Scaling up automated test generation: Automatically generating maintainable regression unit tests for programs",46
"Heap cloning: Enabling dynamic symbolic execution of java programs",9
"Automatic generation of load tests",78
"Symbolic search-based testing",88
"Automated documentation inference to explain failed tests",52
"Generating program inputs for database application testing",49
"Prioritizing tests for fault localization through ambiguity group reduction",56
"Identifying future field accesses in exhaustive state space traversal",15
"Model checking distributed systems by combining caching and process checkpointing",12
"Supporting domain-specific state space reductions through local partial-order reduction",20
"Scalable and precise symbolic analysis for atomicity violations",13
"DC2: A framework for scalable, scope-bounded software verification",22
"Formalizing hardware/software interface specifications",11
"Safe asynchronous multicore memory operations",2
"A rule-based approach to the semantic lifting of model differences in the context of model versioning",87
"A model-driven framework for guided design space exploration",
"Automated extraction of architecture-level performance models of distributed component-based systems",79
"Precomputing possible configuration error diagnoses",73
"An optimal strategy for algorithmic debugging",5
"Localizing SQL faults in database applications",29
"Improving automated documentation to code traceability by combining retrieval techniques",46
"Iterative mining of resource-releasing specifications",23
"Flexible design pattern detection based on feature types",35
"Towards more accurate retrieval of duplicate bug reports",204
"A topic-based approach for narrowing the search space of buggy files from a bug report",131
"Specifying and detecting meaningful changes in programs",16
"Self-adaptive software meets control theory: A preliminary approach supporting reliability requirements",80
"Generalizing evolutionary coupling with stochastic dependencies",12
"Differential precondition checking: A lightweight, reusable analysis for refactoring tools",30
"A performance comparison of contemporary algorithmic approaches for automated analysis operations on feature models",42
"Finding relevant answers in software forums",74
"Software process evaluation: A machine learning approach",17
"Local vs. global models for effort estimation and defect prediction",124
"Capacity planning for event-based systems using automated performance predictions",12
"Ecological inference in empirical software engineering",84
"Detection of feature interactions using feature-aware verification",
"Querying source code with natural language",
"Coverage rewarded: Test input generation via adaptation-based programming",
"Mendel: Source code recommendation based on a genetic metaphor",
"Optimizing the automatic test generation by SAT and SMT solving for Boolean expressions",
"Code-based automated program fixing",
"Taming changes With 1.x-Way architecture-implementation mapping",
"Evaluating test selection strategies for end-user specified flow-based applications",
"Towards dynamic backward slicing of model transformations",
"Mining test oracles of web search engines",
"AutoODC: Automated generation of Orthogonal Defect Classifications",
"Observations on the connectedness between requirements-to-code traces and calling relationships for trace validation",
"Proximity based weighting of test cases to improve spectrum based fault localization",
"Slicing feature models",
"Using model checking to analyze static properties of declarative models",
"Finding the merits and drawbacks of software resources from comments",
"Combining search-based and constraint-based testing",70
"Stateful testing: Finding more errors in code and contracts",
"Do software engineers benefit from source code navigation with traceability? -- An experiment in software change management",
"Automating analysis of qualitative preferences in goal-oriented requirements engineering",
"History slicing",30
"Analyzing temporal API usage patterns",29
"Isomorphism in model tools and editors",
"A case for alloy annotations for efficient incremental analysis via domain specific solvers",
"Exploring caching for efficient collection operations",
"Tracing requirements to tests with high precision and recall",
"Extracting structured data from natural language documents with island parsing",
"GRoundTram: An integrated framework for developing well-behaved bidirectional model transformations",
"Run-time systems failure prediction via proactive monitoring",
"Towards an approach and framework for test-execution plan derivation",
"Statistical debugging with elastic predicates",
"Diagnosis of software failures using computational geometry",
"GitBAC: Flexible access control for non-modular concerns",
"Client-side web application slicing",
"Supporting activity based computing paradigm in global software development",
"Inferred dependence coverage to support fault contextualization",
"Using model-based assurance to strengthen diagnostic procedures",
"Fault-localization using dynamic slicing and change impact analysis",
"Improving source code search with natural language phrasal representations of method signatures",
"Deviation management during process execution",
"PRECIS: Inferring invariants using program path guided clustering",
"Automated planning for feature model configuration based on stakeholders' business concerns",63
"An adaptive approach to impact analysis from change requests to source code",
"Domain and value checking of web application invocation arguments",
"Mixed constraints for test input generation - An initial exploration",
"Enhancing architectural recovery using concerns",
"Search-based fault localization",
"Towards requirements aware systems: Run-time resolution of design-time assumptions",
"Generating essential user interface prototypes to validate requirements",
"Automatically exploring how uncertainty impacts behavior of dynamically adaptive systems",
"iDiff: Interaction-based program differencing tool",
"CloneDifferentiator: Analyzing clones by differentiation",
"Implementing efficient model validation in EMF tools",
"JPF-AWT: Model checking GUI applications",
"The CORE system: Animation and functional correctness of pointer programs",
"APIExample: An effective web search based usage example recommendation system for java APIs",
"BEST: A symbolic testing tool for predicting multi-threaded program failures",
"Decomposing feature models: language, environment, and applications",
"SAUML: A tool for symbolic analysis of UML-RT models",
"TestEra: A tool for testing Java programs using alloy specifications",
"MAJOR: An efficient and extensible tool for mutation analysis in a Java compiler",
"jCT: A Java Code Tomograph",
"Generating realistic test models for model processing tools",
"Guided test visualization: Making sense of errors in concurrent programs",
"The Capture Calculus Toolset",
"A model checking framework for hierarchical systems",
"Automatically detecting the quality of the query and its implications in IR-based concept location",
"Using Formal Concept Analysis to support change analysis",
"A framework for managing uncertainty in self-adaptive software systems",
"Toward consistency checking of natural language temporal requirements",
"Analyzing temporal properties of abstract models",1
"Improving spectrum-based fault localization using proximity-based weighting of test cases",
"Automatic assessment of software documentation quality",
"The GISMOE challenge: constructing the pareto program surface using genetic programming to find better programs (keynote paper)",
"Re-founding software engineering – SEMAT at the age of three (keynote abstract)",
"Practical isolation of failure-inducing changes for debugging regression faults",22
"Diversity maximization speedup for fault localization",27
"Improving the effectiveness of spectra-based fault localization using specifications",40
"To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools",28
"Diagnosys: automatic generation of a debugging interface to the Linux kernel",13
"Duplicate bug report detection with a combination of information retrieval and topic modeling",141
"User-aware privacy control via extended static-information-flow analysis",45
"Automatic query performance assessment during the retrieval of software artifacts",35
"Supporting automated vulnerability analysis using formalized vulnerability signatures",35
"A qualitative study on user guidance capabilities in product configuration tools",48
"Structured merge with auto-tuning: balancing precision and performance",46
"An automated approach to forecasting QoS attributes based on linear and non-linear time series modeling",50
"Puzzle-based automatic testing: bringing humans into the loop by solving puzzles",39
"Using unfoldings in automated testing of multithreaded programs",24
"Runtime monitoring of software energy hotspots",42
"Can I clone this piece of code here?",50
"Predicting recurring crash stacks",30
"Automated inference of goal-oriented performance prediction functions",43
"Code patterns for automatically validating requirements-to-code traces",23
"Unbounded data model verification using SMT solvers",12
"Computing repair trees for resolving inconsistencies in design models",47
"Supporting automated software re-engineering using re-aspects",
"Supporting operating system kernel data disambiguation using points-to analysis",
"Automatic recovery of statecharts from procedural code",
"Locating distinguishing features using diff sets",
"Slicing and replaying code change history",
"Generating model transformation rules from examples using an evolutionary algorithm",
"Augmented dynamic symbolic execution",
"Using GUI ripping for automated testing of Android applications",
"kbe-anonymity: test data anonymization for evolving programs",
"Selection of regression system tests for security policy evolution",
"Fast and precise points-to analysis with incremental CFL-reachability summarisation: preliminary experience",
"Automatically securing permission-based software by reducing the attack surface: an application to Android",138
"Support vector machines for anti-pattern detection",
"Detection of embedded code smells in dynamic web applications",
"Boreas: an accurate and scalable token-based approach to code clone detection",
"Refactorings without names",
"Automated API migration in a user-extensible refactoring tool for Erlang programs",
"Using mobile devices for collaborative requirements engineering",
"Automatically generating and adapting model constraints to support co-evolution of design models",
"Adaptability of model comparison tools",
"Predicting common web application vulnerabilities from input validation and sanitization code patterns",
"Software defect prediction using semi-supervised learning with dimension reduction",
"Healing online service systems via mining historical issue repositories",
"Automated evaluation of syntax error recovery",
"MaramaAI: tool support for capturing and managing consistency of multi-lingual requirements",
"GUITest: a Java library for fully automated GUI robustness testing",
"Observatory of trends in software related microblogs",
"Arcade.PLC: a verification platform for programmable logic controllers",
"Test suite selection based on traceability annotations",
"PuMoC: a CTL model-checker for sequential programs",
"Weave droid: aspect-oriented programming on Android devices: fully embedded or in the cloud",
"Caprice: a tool for engineering adaptive privacy",
"JStereoCode: automatically identifying method and class stereotypes in Java code",
"CHESS: a model-driven engineering tool environment for aiding the development of complex industrial systems",
"SYMake: a build code analysis and refactoring tool for makefiles",
"Quokka: visualising interactions of enterprise software environment emulators",
"Communicating continuous integration servers for increasing effectiveness of automated testing",
"GZoltar: an eclipse plug-in for testing and debugging",
"Semantic patch inference",
"REInDetector: a framework for knowledge-based requirements engineering",
"Formal verification techniques for model transformations specified by-demonstration",
"A model-driven parser generator with reference resolution support",
"Property-preserving program refinement",
"Predicting software complexity by means of evolutionary testing",
"Identifying refactoring sequences for improving software maintainability",
"Round-up: runtime checking quasi linearizability of concurrent data structures",12
"Constraint-based automatic symmetry detection",5
"Proving MCAPI executions are correct using SMT",8
"Efficient data race prediction with incremental reasoning on time-stamped lock history",1
"PIEtrace: platform independent executable trace",4
"Improving efficiency of dynamic analysis with dynamic dependence summaries",
"Efficient parametric runtime verification with deterministic string rewriting",10
"Identifying execution points for dynamic analyses",3
"Operator-based and random mutant selection: better together",56
"Testing properties of dataflow program operators",6
"Bita: Coverage-guided, automatic testing of actor programs",27
"SABRINE: state-based robustness testing of operating systems",16
"BLITZ: compositional bounded model checking for real-world programs",27
"Ranger: parallel analysis of alloy models by range partitioning",14
"Automated verification of pattern-based interaction invariants in Ajax applications",4
"Software model checking for distributed systems with selector-based, non-blocking communication",18
"A study of repetitiveness of code changes in software evolution",75
"Consistency-preserving edit scripts in model versioning",52
"JFlow: practical refactorings for flow-based parallelism",5
"Automated planning for software architecture evolution",22
"Automatically synthesizing SQL queries from input-output examples",31
"SEDGE: symbolic example data generation for dataflow programs",11
"Characteristic studies of loop problems for structural test generation via symbolic execution",47
"Entropy-based test generation for improved fault localization",48
"Detecting bad smells in source code using change history information",155
"Personalized defect prediction",122
"Automatic recommendation of API methods from feature requests",52
"Variability-aware performance prediction: a statistical learning approach",91
"A scalable approach for malware detection through bounded feature space behavior modeling",24
"Automatically partition software into least privilege components using dynamic data dependency analysis",21
"Finding architectural flaws using constraints",16
"Improving bug localization using structured information retrieval",178
"Leveraging program equivalence for adaptive program repair: models and first results",167
"Detecting and characterizing semantic inconsistencies in ported code",27
"Lightweight control-flow instrumentation and postmortem analysis in support of debugging",
"Characterizing and detecting resource leaks in android applications",73
"Dangling references in multi-configuration and dynamic PHP-based web applications",12
"Dynamically transforming data structures",3
"Towards precise metrics for predicting graph query performance",19
"TzuYu: learning stateful typestates",26
"Mining branching-time scenarios",32
"Measuring the structural complexity of feature models",25
"Scalable product line configuration: a straw to break the camel's back",117
"Software analytics for incident management of online services: an experience report",31
"A comparative analysis of software architecture recovery techniques",98
"Towards contextual and on-demand code clone management by continuous monitoring",9
"The potential of polyhedral optimization: an empirical study",7
"Automated unit testing of large industrial embedded software using concolic testing",38
"Minimizing CPU time shortage risks in integrated embedded software",5
"Model based test validation and oracles for data acquisition systems",10
"Automated verification of interactive rule-based configuration systems",5
"AutoComment: mining question and answer sites for automatic comment generation",
"Detecting system use cases and validations from documents",
"Multi-user variability configuration: a game theoretic approach",
"From comparison matrix to variability model: the Wikipedia case study",
"Learning effective query transformations for enhanced requirements trace retrieval",
"Environment rematching: toward dependability improvement for self-adaptive applications",
"Cloud twin: native execution of android applications on the windows phone",
"SBFR: a search based approach for reproducing failures of programs with grammar based input",
"PYTHIA: generating test cases with oracles for JavaScript applications",
"Randomizing regression tests using game theory",
"Automated inference of classifications and dependencies for combinatorial testing",
"Adding context to fault localization with integration coverage",
"Using automatically generated invariants for regression testing and bug localization",
"Class level fault prediction using software clustering",
"ExPort: detecting and visualizing API usages in large source code repositories",
"Flow permissions for android",
"A pattern-based approach to parametric specification mining",
"Semi-automatic generation of metamodels from model sketches",
"Assessing the maturity of requirements through argumentation: a good enough approach",
"Natural language requirements quality analysis based on business domain models",
"Model/code co-refactoring: an MDE approach",
"Recovering model transformation traces using multi-objective optimization",
"Model repair and transformation with Echo",
"Smart cloud broker: finding your home in the clouds",
"OCRA: a tool for checking the refinement of temporal contracts",
"The bounded model checker LLBMC",
"CSeq: a concurrency pre-processor for sequential C verification tools",
"Automated testing of cloud-based elastic systems with AUToCLES",
"Tool support for automatic model transformation specification using concrete visualisations",
"CCmutator: a mutation generator for concurrency constructs in multithreaded C/C++ applications",
"Crushinator: a framework towards game-independent testing",
"Pex4Fun: a web-based environment for educational gaming via automated test generation",
"Developing self-verifying service-based systems",
"TRAM: a tool for transforming textual requirements into analysis models",
"iProbe: a lightweight user-level dynamic instrumentation tool",4
"Detecting and fixing emergent behaviors in distributed software systems using a message content independent method",
"Synthesizing fault-tolerant programs from deontic logic specifications",
"Supporting bug investigation using history analysis",
"Context-aware task allocation for distributed agile team",
"Preventing erosion of architectural tactics through their strategic implementation, preservation and visualization",
"Automated analysis of multithreaded programs for performance modeling",4
"Behavioral resource-aware model inference",40
"Targeted test input generation using symbolic-concrete backward execution",
"Discriminating influences among instructions in a dynamic slice",
"Dompletion: DOM-aware JavaScript code completion",9
"Continuous test generation: enhancing continuous integration with automated test generation",32
"Leveraging existing tests in automated test generation for web applications",53
"Automated unit test generation for classes with environment dependencies",31
"Finding HTML presentation failures using image comparison techniques",
"Accelerated test execution using GPUs",
"Seeking the user interface",
"Interrogative-guided re-ranking for question-oriented software text retrieval",
"An empirical study on reducing omission errors in practice",
"Fusion fault localizers",39
"Automated variability analysis and testing of an E-commerce site.: an experience report",11
"PrefFinder: getting the right preference in configurable software systems",20
"MiL testing of highly configurable continuous controllers: scalable search using surrogate models",12
"Assertion guided abstraction: a cooperative optimization for dynamic partial order reduction",19
"Symbolic state validation through runtime data",0
"Verifying self-adaptive applications suffering uncertainty",24
"Automated synthesis and deployment of cloud applications",30
"Concurrent transformation components using contention context sensors",
"Assigning time budgets to component functions in the design of time-critical automotive systems",9
"symMMU: symbolically executed runtime libraries for symbolic memory access",4
"Evaluation of string constraint solvers in the context of symbolic execution",22
"Incremental symbolic execution for automated test suite maintenance",
"Program analysis for secure big data processing",17
"Multi-objective optimization in rule-based design space exploration",43
"Understanding performance stairs: elucidating heuristics",8
"Fine-grained and accurate source code differencing",167
"Combining rule-based and information retrieval techniques to assign software change requests",
"Recommendation system for software refactoring using innovization and interactive dynamic optimization",
"Recommending refactorings based on team co-maintenance patterns",
"Diver: precise dynamic impact analysis using dependence-based trace pruning",
"Automating regression verification",69
"An empirical evaluation and comparison of manual and automated test selection",24
"Taming test inputs for separation assurance",15
"Transferring an automated test generation tool to practice: from pex to fakes and code digger",41
"Angels and monsters: an empirical investigation of potential test effectiveness and efficiency improvement from strongly subsuming higher order mutation",35
"Scaling exact multi-objective combinatorial optimization by parallelization",38
"42 variability bugs in the linux kernel: a qualitative analysis",
"Automating the formalization of product comparison matrices",19
"Tracking load-time configuration options",43
"Statistical learning approach for mining API usage mappings for code migration",55
"Compatibility testing using patterns-based trace comparison",3
"Personas in the middle: automated support for creating personas as focal points in feature gathering forums",
"Constructing adaptive configuration dialogs using crowd data",
"Validating ajax applications using a delay-based mutation technique",4
"Static, lightweight includes resolution for PHP",14
"Information flows as a permission mechanism",43
"Improving the accuracy of oracle verdicts through automated model steering",5
"Automated domain-specific C verification with mbeddr",16
"Pattern-based auto-completion of UML modeling activities",
"Abstraction-aware verifying compiler for yet another MDD",
"Docovery: toward generic automatic document recovery",12
"Exact and approximate probabilistic symbolic execution for nondeterministic programs",38
"Derailer: interactive security analysis for web applications",15
"Tracking down root causes of defects in simulink models",
"The confidence in our k-tails",
"Localization of concurrency bugs using shared memory access pairs",10
"Towards self-healing smartphone software via automated patching",
"Minimal strongly unsatisfiable subsets of reactive system specifications",
"Droidmarking: resilient software watermarking for impeding android application repackaging",38
"From out-place transformation evolution to in-place model patching",
"Using visual dataflow programming for interactive model comparison",5
"NeedFeed: taming change notifications by modeling code relevance",15
"Active code search: incorporating user feedback to improve code search relevance",
"Resilient user interface level tests",
"Studying task allocation decisions of novice agile teams with data from agile project management tools",
"PiE: programming in eliza",
"Search-based inference of polynomial metamorphic relations",32
"A dynamic analysis to support object-sharing code refactorings",7
"Language fuzzing using constraint logic programming",
"Tracing software build processes to uncover license compliance inconsistencies",12
"Automatic verification of interactions in asynchronous systems with unbounded buffers",16
"Towards an intelligent domain-specific traceability solution",11
"Automated requirements analysis for a molecular watchdog timer",15
"Formalisation of the integration of behavior trees",
"Automatic early defects detection in use case documents",
"SymCrash: selective recording for reproducing crashes",22
"Potential biases in bug localization: do they matter?",32
"MIMIC: locating and understanding bugs by analyzing mimicked executions",21
"Workspace updates of visual models",
"Meta-Model validation and verification with MetaBest",
"A web based UML modeling tool with touch screens",
"SeSAME: modeling and analyzing high-quality service compositions",
"MPAnalyzer: a tool for finding unintended inconsistencies in program source code",
"Firecrow: a tool for web application analysis and reus",
"HUSACCT: architecture compliance checking with rich sets of module and rule types",
"CoCoTest: a tool for model-in-the-loop testing of continuous controllers",
"8Cage: lightweight fault-based test generation for simulink",
"PBGT tool: an integrated modeling and testing environment for pattern-based GUI testing",
"A tool chain for generating the description files of highly available software",
"DupFinder: integrated tool support for duplicate bug report detection",
"Model-driven development of content management systems based on Joomla",
"Determining the most probable root causes of run-time errors in simulink models",
"Utilizing feature location techniques for feature addition and feature enhancement",
"AugIR: the conceptual design and evaluation of an augmented interaction room",
"A requirements monitoring infrastructure for systems of systems",
"Embrace your issues: compassing the software engineering landscape using bug reports",
"Issues of automated software composition in AI planning",
"A proposal for revisiting coverage testing metrics",
"Variability-aware change impact analysis of multi-language product lines",
"Improvement of applications' stability through robust APIs",
"An empirical investigation into the nature of test smells",38
"Evaluating non-adequate test-case reduction",16
"Optimizing customized program coverage",11
"What makes killing a mutant hard",
"Test case permutation to improve execution time",
"Predicting semantically linkable knowledge in developer online forums via convolutional neural network",57
"Testing advanced driver assistance systems using multi-objective search and neural networks",32
"Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation",4
"Deep learning code fragments for code clone detection",134
"Automatically recommending code reviewers based on their expertise: an empirical comparison",8
"Evaluating the evaluations of code recommender systems: a reality check",11
"Too much automation? the bellwether effect and its implications for transfer learning",30
"Automatic microbenchmark generation to prevent dead code elimination and constant folding",4
"Visualization of combinatorial models and test plans",4
"Finding access control bugs in web applications with CanCheck",4
"SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities",11
"Supporting oracle construction via static analysis",7
"Local-based active classification of test report to assist crowdsourced testing",25
"Multi-objective test report prioritization using image understanding",23
"CrowdService: serving the individuals through mobile crowdsourcing and service composition",
"QUICKAR: automatic query reformulation for concept location using crowdsourced knowledge",
"Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps",58
"Automated model-based Android GUI testing using multi-level GUI comparison criteria",48
"HybriDroid: static analysis framework for Android hybrid applications",29
"Locus: locating bugs from software changes",35
"Fine-tuning spectrum based fault localisation with frequent method item sets",23
"Recommending relevant classes for bug reports using multi-objective search",16
"An empirical study on dependence clusters for effort-aware fault-proneness prediction",12
"StraightTaint: decoupled offline symbolic taint analysis",18
"IncA: a DSL for the definition of incremental program analyses",24
"What developers want and need from program analysis: an empirical study",54
"DistIA: a cost-effective dynamic impact analysis for distributed programs",8
"Radius aware probabilistic testing of deadlocks with guarantees",3
"LockPeeker: detecting latent locks in Java APIs",5
"Sound static deadlock analysis for C/Pthreads",11
"Static race detection for device drivers: the Goblint approach",13
"An empirical evaluation of two user interfaces of an interactive program verifier",9
"Traceability maintenance: factors and guidelines",18
"Usage, costs, and benefits of continuous integration in open-source projects",107
"DSL-maps: from requirements to design of domain-specific languages",
"The IDE as a scriptable information system",
"Inferring annotations for device drivers from verification histories",7
"Array length inference for C library bindings",4
"APEx: automated inference of error specifications for C APIs",8
"On essential configuration complexity: measuring interactions in highly-configurable systems",58
"Precise semantic history slicing through dynamic delta refinement",8
"Goal-conflict detection based on temporal satisfiability checking",4
"Symbolic execution of stored procedures in database management systems",4
"Conc-iSE: incremental symbolic execution of concurrent software",20
"Model-based whitebox fuzzing for program binaries",44
"Symbolic execution of complex program driven by machine learning based constraint solving",
"Towards bounded model checking using nonlinear programming solver",
"Identifying domain elements from textual specifications",7
"Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching",5
"Efficient detection of inconsistencies in a multi-developer engineering environment",5
"How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications",14
"Greedy combinatorial test case generation using unsatisfiable cores",15
"Towards automatically generating descriptive names for unit tests",14
"Applying combinatorial test data generation to big data applications",13
"Generating test cases to expose concurrency bugs in Android applications",
"Automatic test image generation using procedural noise",
"Move-optimized source code tree differencing",20
"Migrating cascading style sheets to preprocessors by introducing mixins",9
"Automatic runtime recovery via error handler synthesis",9
"Mining revision histories to detect cross-language clones without intermediates",
"Battery-aware transformations in mobile applications",
"Bugram: bug detection with n-gram language models",37
"Mining input grammars from dynamic taints",
"Phrase-based extraction of user opinions in mobile app reviews",
"Practical guidelines for change recommendation using association rule mining",12
"Learning a dual-language vector space for domain-specific cross-lingual question retrieval",15
"Reflection-aware static analysis of Android apps",
"Relda2: an effective static analysis tool for resource leak detection in Android apps",
"An end-user oriented tool suite for development of mobile applications",
"Model driven design of heterogeneous synchronous embedded systems",
"MACKE: compositional analysis of low-level vulnerabilities with symbolic execution",
"BovInspector: automatic inspection and repair of buffer overflow vulnerabilities",
"CORRECT: code reviewer recommendation at GitHub for Vendasta technologies",
"ProcessPAIR: a tool for automated performance analysis and improvement recommendation in software development",
"CVExplorer: identifying candidate developers by mining and exploring their open source contributions",
"Lightweight collection and storage of software repository data with DataRover",
"Visual contract extractor: a tool for reverse engineering visual contracts using dynamic analysis",
"SuperMod: tool support for collaborative filtered model-driven software product line engineering",
"AnModeler: a tool for generating domain models from textual specifications",
"SimilarTech: automatically recommend analogical libraries across different programming languages",
"TeeVML: tool support for semi-automatic integration testing environment emulation",
"The interactive verification debugger: effective understanding of interactive proof attempts",
"Verifying simulink stateflow model: timed automata approach",
"GUICat: GUI testing as a service",
"An automated collaborative requirements engineering tool for better validation of requirements",
"An extensible framework for variable-precision data-flow analyses in MPS",
"Towards efficient and effective automatic program repair",
"Automated testing and notification of mobile app privacy leak-cause behaviours",
"Factoring requirement dependencies in software requirement selection using graphs and integer programming",
"Statistical analysis of large sets of models",
"Developer targeted analytics: supporting software development decisions with runtime information",
"API recommendation system for software development",
"Systematically testing background services of mobile apps",5
"Crowd intelligence enhances automated mobile testing",14
"EHBDroid: beyond GUI testing for Android applications",16
"Sketch-guided GUI test generation for mobile applications",
"Saying źhi!ź is not enough: mining inputs for effective test generation",
"Learn&Fuzz: machine learning for input fuzzing",90
"The impact of continuous integration on other software development practices: a large-scale empirical study",32
"Perceived language complexity in GitHub issue discussions and their effect on issue resolution",9
"Can automated pull requests encourage software developers to upgrade out-of-date dependencies?",23
"Are developers aware of the architectural impact of their changes?",13
"SentiCR: a customized sentiment analysis tool for code review interactions",
"Detecting fragile comments",8
"Improving software text retrieval using conceptual knowledge in source code",3
"Automatically generating commit messages from diffs using neural machine translation",38
"Improving missing issue-commit link recovery using positive and unlabeled data",
"APIBot: question answering bot for API documentation",
"Automatic summarization of API reviews",16
"iCoq: regression proof selection for large-scale verification projects",3
"More effective interpolations in software model checking",3
"Proof-based coverage metrics for formal verification",
"Model checker execution reports",
"Modular verification of interrupt-driven software",6
"BProVe: a formal verification framework for business process models",12
"Static detection of asymptotic resource side-channel vulnerabilities in web applications",1
"PAD: programming third-party web advertisement censorship",
"All about activity injection: threats, semantics, and detection",1
"Detecting information flow by mutating input data",12
"Automatically assessing crashes from heap overflows",
"Learning to share: engineering adaptive decision-support for online social networks",
"UI driven Android application reduction",2
"SimplyDroid: efficient event sequence simplification for Android application",4
"Automated cross-platform inconsistency detection for mobile apps",14
"In-memory fuzzing for binary code similarity analysis",8
"DSIbin: identifying dynamic data structures in C/C++ binaries",5
"Towards robust instruction-level trace alignment of binary code",0
"Testing intermediate representations for binary analysis",13
"Comprehensive failure characterization",1
"TrEKer: tracing error propagation in operating system kernels",3
"RuntimeSearch: Ctrl+F for a running program",
"Mining implicit design templates for actionable code reuse",5
"Exploring regular expression comprehension",13
"Automatically assessing code understandability: how far are we?",11
"Improved query reformulation for concept location using CodeRank and document structures",6
"Understanding feature requests by leveraging fuzzy method and linguistic analysis",0
"O2O service composition with social collaboration",2
"Gremlin-ATL: a scalable model transformation framework",7
"Diagnosing assumption problems in safety-critical products",1
"Software performance self-adaptation through efficient model predictive control",5
"Transfer learning for performance modeling of configurable systems: an exploratory analysis",24
"A comprehensive study of real-world numerical bug characteristics",9
"A comprehensive study on real world concurrency bugs in Node.js",12
"Generating simpler AST edit scripts by considering copy-and-paste",7
"Renaming and shifted code in structured merging: looking ahead for precision and performance",5
"Semantics-assisted code review: an efficient toolchain and a user study",4
"Detecting unknown inconsistencies in web applications",1
"Why and how JavaScript developers use linters",11
"Automatic testing of symbolic execution engines via program generation and differential testing",9
"Floating-point symbolic execution: a case study in n-version programming",15
"Rethinking pointer reasoning in symbolic execution",
"Leveraging abstract interpretation for efficient dynamic symbolic execution",
"Tortoise: interactive system configuration repair",16
"Contract-based program repair without the contracts",31
"ELIXIR: effective object oriented program repair",36
"Leveraging syntax-related code for automated program repair",42
"Boosting complete-code tool for partial program",8
"A language model for statements of software code",
"Context-aware integrated development environment command recommender systems",
"Predicting relevance of change recommendations",4
"AnswerBot: automated generation of answer summary to developersź technical questions",
"Recommending crowdsourced software developers in consideration of skill improvement",
"The rise of the (modelling) bots: towards assisted modelling via social networks",
"UNDEAD: detecting and preventing deadlocks in production software",9
"Promoting secondary orders of event pairs in randomized scheduling using a randomized stride",1
"Parallel bug-finding in concurrent programs via reduced interleaving instances",6
"Understanding and overcoming parallelism bottlenecks in ForkJoin applications",6
"Quick verification of concurrent programs by iteratively relaxed scheduling",
"Automatic loop-invariant generation and refinement through selective sampling",3
"FiB: squeezing loop invariants by interpolation between Forward/Backward predicate transformers",5
"SymInfer: inferring program invariants using symbolic states",4
"Parsimony: an IDE for example-guided synthesis of lexers and parsers",2
"Mining constraints for event-based monitoring in systems of systems",
"Programming bots by synthesizing natural language expressions into API invocations",
"Test suite parallelization in open-source projects: a study on its usage and impact",4
"Systematic reduction of GUI test sequences",3
"Automatically reducing tree-structured test inputs",11
"Synthetic data generation for statistical testing",6
"SEALANT: a detection and visualization tool for inter-app security vulnerabilities in Android",
"Visualization support for requirements monitoring in systems of systems",
"A demonstration of simultaneous execution and editing in a development environment",
"TREM: a tool for mining timed regular specifications from system traces",
"ModelWriter: text and model-synchronized document engineering platform",
"Incrementally slicing editable submodels",
"DSSynth: an automated digital controller synthesis tool for physical plants",
"A static analysis tool with optimizations for reachability determination",
"CogniCrypt: supporting developers in using cryptography",
"BProVe: tool support for business process verification",
"taco: a tool to generate tensor algebra kernels",
"STARTS: STAtic regression test selection",
"EventFlowSlicer: a tool for generating realistic goal-driven GUI tests",
"ANDROFLEET: testing WiFi peer-to-peer mobile apps in the large",
"FEMIR: a tool for recommending framework extension examples",
"TiQi: a natural language interface for querying software project data",
"Opiner: an opinion search and summarization engine for APIs",
"Defaultification refactoring: a tool for automatically converting Java methods to default",
"Kobold: web usability as a service",
"IntPTI: automatic integer error repair with proper-type inference",
"Learning effective changes for software projects",
"Characterizing and taming non-deterministic bugs in JavaScript applications",
"Towards API-specific automatic program repair",
"Managing software evolution through semantic history slicing",
"Towards the automatic classification of traceability links",
"Towards a software vulnerability prediction model using traceable code patterns and software metrics",
"Towards search-based modelling and analysis of requirements and architecture decisions",
"Privacy-aware data-intensive applications",
"Software heritage: collecting, preserving, and sharing all our source code (keynote)",
"On adopting linters to deal with performance concerns in Android apps",2
"PerfLearner: learning from bug reports to understand and generate performance test frames",1
"AutoConfig: automatic configuration tuning for distributed message systems",1
"Is this class thread-safe? inferring documentation using graph-based learning",2
"A large-scale study of test coverage evolution",3
"Effectiveness and challenges in generating concurrent tests for thread-safe classes",3
"Scalable incremental building with dynamic task dependencies",0
"Noise and heterogeneity in historical build data: an empirical study of Travis CI",5
"Automated directed fairness testing",5
"Concolic testing for deep neural networks",39
"DeepGauge: multi-granularity testing criteria for deep learning systems",36
"DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems",30
"Testing autonomous cars for feature interaction failures using many-objective search",4
"Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems",2
"Understanding and detecting evolution-induced compatibility issues in Android apps",8
"Characterizing the natural language descriptions in software logging statements",3
"Assessing the type annotation burden",1
"Mining file histories: should we consider branches?",4
"Tell them apart: distilling technology differences from crowd-scale comparison discussions",4
"ReScue: crafting regular expression DoS attacks",3
"TDroid: exposing app switching attacks in Android with control flow specialization",3
"Model-driven run-time enforcement of complex role-based access control policies",1
"ContractFuzzer: fuzzing smart contracts for vulnerability detection",23
"SEEDE: simultaneous execution and editing in a development environment",0
"Effective API recommendation without historical software repositories",1
"API method recommendation without worrying about the task-API knowledge gap",5
"An automated approach to estimating code coverage measures via execution logs",3
"How many of all bugs do we find? a study of static bug detectors",7
"TRIMMER: application specialization for code debloating",7
"A unified lattice model and framework for purity analyses",
"Control flow-guided SMT solving for program verification",0
"PaMpeR: proof method recommendation system for Isabelle/HOL",4
"Neural-machine-translation-based commit message generation: how far are we?",8
"Deep learning based feature envy detection",2
"Improving automatic source code summarization via deep reinforcement learning",7
"Template-guided concolic testing via online learning",1
"Android testing via synthetic symbolic execution",2
"PARTI: a multi-interval theory solver for symbolic execution",1
"Client-specific equivalence checking",0
"Replay without recording of production bugs for service oriented applications",2
"Reducing interactive refactoring effort via clustering-based multi-objective search",1
"FairFuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage",19
"Efficiently manifesting asynchronous programming errors in Android apps",10
"Expandable group identification in spreadsheets",2
"Break the dead end of dynamic slicing: localizing data and control omission bug",1
"A genetic algorithm for goal-conflict identification",0
"Understanding and detecting callback compatibility issues for Android applications",1
"Detecting and summarizing GUI changes in evolving mobile apps",1
"Empirically assessing opportunities for prefetching and caching in mobile apps",1
"Safe stream-based programming with refinement types",2
"Automated model repair for Alloy",8
"PFix: fixing concurrency bugs based on memory access patterns",1
"Generating reusable web components from mockups",1
"Semantic crash bucketing",6
"A symbolic model checking approach to the analysis of string and length constraints",0
"Domain-independent multi-threaded software model checking",3
"Scheduling constraint based abstraction refinement for weak memory models",0
"Datalog-based scalable semantic diffing of concurrent programs",1
"αDiff: cross-version binary code similarity detection with DNN",
"ClDiff: generating concise linked code differences",4
"Characterizing and identifying misexposed activities in Android applications",1
"A tale of two cities: how WebView induces bugs to Android applications",3
"Dual-force: understanding WebView malware via cross-language forced execution",0
"Self-protection of Android systems from inter-component communication attacks",0
"An empirical study of Android test generation tools in industrial cases",3
"Achieving test automation with testers without coding skills: an industrial report",
"Navigating the maze: the impact of configurability in bioinformatics software",4
"Automatically testing implementations of numerical abstract domains",2
"Experiences applying automated architecture analysis tool suites",1
"Continuous code quality: are we (really) doing that?",
"RUDSEA: recommending updates of Dockerfiles via software environment analysis",
"Delta debugging microservice systems",
"Personalized teammate recommendation for crowdsourced software developers",
"S-gram: towards semantic-aware security auditing for Ethereum smart contracts",
"An evolutionary approach for analyzing Alloy specifications",
"A neural framework for retrieval and summarization of source code",
"An empirical investigation into learning bug-fixing patches in the wild via neural machine translation",
"Loop path reduction by state pruning",
"node2defect: using network embedding to improve software defect prediction",
"Towards automating disambiguation of regulations: using the wisdom of crowds",
"jStanley: placing a green thumb on Java collections",
"SRCIROR: a toolset for mutation testing of C source code and LLVM intermediate representation",
"Lightweight source code monitoring with Triggr",
"OCELOT: a search-based test-data generation tool for C",
"Live versioning of web applications through refactoring",
"code_call_lens: raising the developer awareness of critical code",
"Code2graph: automatic generation of static call graphs for Python source code",
"The electrum analyzer: model checking relational first-order temporal specifications",
"ESBMC 5.0: an industrial-strength C model checker",
"L-CMP: an automatic learning-based parameterized verification tool",
"VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary",
"CPA-SymExec: efficient symbolic execution in CPAchecker",
"CANAL: a cache timing analysis framework via LLVM transformation",
"Descartes: a PITest engine to detect pseudo-tested methods: tool demonstration",
"DKVF: a framework for rapid prototyping and evaluating distributed key-value stores",
"DroidMate-2: a platform for Android test generation",
"Assessing and evaluating functional suitability of software",
"Automatic mining of constraints for monitoring systems of systems",
"Towards automatic restrictification of CUDA kernel arguments",
"A DSL for requirements in the context of a seamless approach",
"A multi-objective framework for effective performance fault injection in distributed systems",
"Top-down model-driven engineering of web services from extended OpenAPI models",
"Differential program analysis with fuzzing and symbolic execution",
"Software engineering techniques applied to relational databases",
"Automatically quantifying the impact of a change in systems (journal-first abstract)",
"Estimating the number of remaining links in traceability recovery (journal-first abstract)",
"Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract)",
"Roberto E. Lopez-Herrejon , Alexander Egyed, Towards fixing inconsistencies in models with variability, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, p.93-100, January 25-27, 2012, Leipzig, Germany",
"Asserting and checking determinism for multithreaded programs",86
"Static data race detection for concurrent programs with asynchronous calls",67
"Symbolic pruning of concurrent program executions",49
"Darwin: an approach for debugging evolving programs",106
"Capturing propagation of infected program states",126
"Saturation-based testing of concurrent programs",30
"The massification and webification of systems' modeling and simulation with virtual worlds",8
"Backward-compatible constant-time exception-protected memory",3
"Automated security testing of web widget interactions",41
"Cross-project defect prediction: a large scale experiment on data vs. domain vs. process",496
"On the relationship between process maturity and geographic distribution: an empirical analysis of their impact on software quality",50
"Improving bug triage with bug tossing graphs",376
"Fair and balanced?: bias in bug-fix datasets",325
"Qos-driven runtime adaptation of service oriented architectures",141
"Automatic synthesis of behavior protocols for composable web-services",153
"Data flow testing of service choreography",52
"Whitening SOA testing",59
"Refactoring for reentrancy",77
"Monitoring probabilistic properties",43
"MSeqGen: object-oriented unit-test generation via mining source code",92
"Api hyperlinking via structural overlap",53
"Learning from examples to improve code completion systems",252
"Improving slice accuracy by compression of data and control flow paths",10
"Insights from expert software design practice",42
"Fitting the pieces together: a machine-checked model of safe composition",74
"Ensuring interoperable service-oriented systems through engineered self-healing",36
"Debugging debugging: acm sigsoft impact paper award keynote",
"Facilitating software refactoring with appropriate resolution order of bad smells",
"Software change dynamics: evidence from 35 java projects",15
"Practical framework constraints",
"Evaluating recovery aware components for grid reliability",
"Towards accurate probabilistic models using state refinement",
"Verification and performance evaluation of aadl models",
"Reo2MC: a tool chain for performance analysis of coordination models",
"Smart views for analyzing problem reports: tool demo",
"SCA: a semantic conflict analyzer for parallel changes",
"Test case comparison and clustering using program profiles and static execution",
"ReCrashJ: a tool for capturing and reproducing program crashes in deployed applications",
"Javalanche: efficient mutation testing for Java",
"ConcernMorph: metrics-based detection of crosscutting patterns",
"Srijan: a graphical toolkit for sensor network macroprogramming",
"Synthesizing partial component-level behavior models from system specifications",46
"Supporting automatic model inconsistency fixing",91
"Behavioral automata composition for automatic topology independent verification of parameterized systems",17
"Probabilistic environments in the quantitative analysis of (non-probabilistic) behaviour models",11
"Automatic steering of behavioral model inference",98
"Sireum/Topi LDP: a lightweight semi-decision procedure for optimizing symbolic execution-based analyses",18
"Engineering search computing applications: vision and challenges",
"DebugAdvisor: a recommender system for debugging",113
"Graph-based mining of multiple object usage patterns",211
"Producing software by integration: challenges and research directions (keynote)",
"Empirical answers to fundamental software engineering problems (panel)",
"Efficiency and early fault detection with lower and higher strength combinatorial interaction testing",79
"Con2colic testing",59
"Boosting concolic testing via interpolation",47
"Adequate monitoring of service compositions",
"Prediction of atomic web services reliability based on k-means clustering",38
"Scalable analysis of variable software",132
"Bayesian inference using data flow analysis",46
"Second-order constraints in dynamic invariant inference",7
"Z3-str: a z3-based string solver for web application analysis",157
"An empirical analysis of the co-evolution of schema and code in database applications",55
"Automated oracles: an empirical study on cost and effectiveness",24
"Sample size vs. bias in defect prediction",68
"Finding incorrect compositions of atomicity",20
"Tightfit: adaptive parallelization with foresight",3
"Distributed program tracing",3
"Will you still compile me tomorrow? static cross-version compiler validation",22
"Convergent contemporary software peer review practices",15
"Do all task dependencies require coordination? the role of task properties in identifying critical coordination needs in software projects",15
"Dynodroid: an input generation system for Android apps",468
"KATCH: high-coverage testing of software patches",76
"Termination proofs from tests",26
"SPLat: lightweight dynamic analysis for reducing combinatorics in testing configurable systems",51
"Cachetor: detecting cacheable data to remove bloat",49
"Effective dynamic detection of alias analysis errors",13
"Feature model extraction from large collections of informal product descriptions",123
"N-way model merging",46
"Compiling mockups to flexible UIs",15
"Making offline analyses continuous",20
"Regression tests to expose change interaction errors",35
"Differential assertion checking",84
"Preventing database deadlocks in applications",17
"Identifying message flow in distributed event-based systems",29
"Improving trace accuracy through data-driven configuration and composition of tracing features",61
"Precision reuse for efficient regression verification",36
"Cascading verification: an integrated method for domain-specific model checking",9
"Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization",23
"Mining behavior models from enterprise web applications",49
"Incrementally synthesizing controllers from scenario-based product line specifications",28
"Synthesis of component and connector models from crosscutting structural views",38
"Searching for better configurations: a rigorous approach to clone evaluation",126
"Diversity in software engineering research",112
"API change and fault proneness: a threat to the success of Android apps",187
"Jalangi: a selective record-replay and dynamic analysis framework for JavaScript",190
"Practical static analysis of JavaScript applications in the presence of frameworks and libraries",101
"Server interface descriptions for automated testing of JavaScript web applications",10
"Explaining inconsistent code",14
"A statistical semantic language model for source code",119
"Crossing the gap from imperative to functional programming through refactoring",44
"Scalable and incremental software bug detection",24
"Inferring project-specific bug patterns for detecting sibling bugs",9
"Mining succinct predicated bug signatures",21
"SocialCDE: a social awareness tool for global software teams",
"REDACT: preventing database deadlocks from application-based transactions",
"aPET: a test case generation tool for concurrent objects",
"RUBRIC: a flexible tool for automated checking of conformance to requirement boilerplates",
"RiTHM: a tool for enabling time-triggered runtime verification for C programs",
"PoMMaDe: pushdown model-checking for malware detection",
"RADA: a tool for reasoning about algebraic data types with abstractions",
"Jalangi: a tool framework for concolic testing, selective record-replay, and dynamic analysis of JavaScript",
"RSA-MBT: a test tool for generating test artifacts based on models",
"USMMC: a self-contained model checker for UML state machines",
"Extracting URLs from JavaScript via program analysis",
"Data debugging with continuous testing",
"Iterative test suites refinement for elastic computing systems",
"Using fault history to improve mutation reduction",
"A cost-effectiveness criterion for applying software defect prediction models",
"BugMap: a topographic map of bugs",
"Lexical statistical machine translation for language migration",
"Code fragment summarization",
"Understanding gamification mechanisms for software development",
"Toward understanding the causes of unanswered questions in software information sites: a case study of stack overflow",
"Where is the business logic?",
"Towards emotional awareness in software development teams",
"Precise range analysis on large industry code",
"Agreements for software reuse in corporations",
"Good technology makes the difficult task easy",
"ShAir: extensible middleware for mobile peer-to-peer resource sharing",
"Risky files: an approach to focus quality improvement effort",
"System reliability calculation based on the run-time analysis of ladder program",12
"h-ubu: an industrial-strength service-oriented component framework for JavaScript applications",
"Design and optimization of multi-clocked embedded systems using formal technique",57
"The economics of static analysis tools",
"Automatically describing software faults",
"Fuzzy service matching in on-the-fly computing",
"PHRT: a model and programmable tool for hardware reengineering automation",
"Using topic models to understand the evolution of a software ecosystem",
"Automotive architecture description and its quality",
"Towards open architecture system",
"A framework for defining the dynamic semantics of DSLs",
"Proactive self-adaptation under uncertainty: a probabilistic model checking approach",87
"Automated multi-objective control for self-adaptive software design",52
"Detecting event anomalies in event-based systems",38
"Suggesting accurate method and class names",141
"Measure it? Manage it? Ignore it? software practitioners and technical debt",96
"Automatically computing path complexity of programs",6
"Systematic testing of asynchronous reactive systems",21
"Effective test suites for mixed discrete-continuous stateflow controllers",16
"GR(1) synthesis for LTL specification patterns",17
"Modeling readability to improve unit tests",46
"Improving model-based test generation by model decomposition",2
"Synthesizing tests for detecting atomicity violations",22
"Optimizing energy consumption of GUIs in Android apps: a multi-objective approach",62
"Generating TCP/UDP network data for automated unit test generation",10
"Staged program repair with condition synthesis",202
"When, how, and why developers (do not) test in their IDEs",83
"How developers search for code: a case study",64
"Tracing software developers' eyes and interactions for change tasks",41
"Assertions are strongly correlated with test suite effectiveness",40
"Test report prioritization to assist crowdsourced testing",32
"Comparing and combining test-suite reduction and regression test selection",50
"Questions developers ask while diagnosing potential security vulnerabilities with static analysis",35
"Quantifying developers' adoption of security tools",34
"Auto-patching DOM-based XSS at scale",17
"Performance-influence models for highly configurable systems",103
"Users beware: preference inconsistencies ahead",17
"Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software",66
"Crowd debugging",28
"On the use of delta debugging to reduce recordings and facilitate debugging of web applications",19
"MemInsight: platform-independent memory debugging for JavaScript",20
"JITProf: pinpointing JIT-unfriendly JavaScript code",46
"Cross-language program slicing for dynamic web applications",28
"Detecting JavaScript races that matter",24
"The making of cloud applications: an empirical study on software development for the cloud",62
"An empirical study of goto in C code from GitHub repositories",15
"How practitioners perceive the relevance of software engineering research",64
"What change history tells us about thread synchronization",22
"Finding schedule-sensitive branches",16
"Effective and precise dynamic detection of hidden races for Java programs",28
"A user-guided approach to program analysis",44
"Hidden truths in dead software paths",8
"P3: partitioned path profiling",5
"Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning",77
"Heterogeneous defect prediction",
"Clone-based and interactive recommendation for modifying pasted code",9
"Is the cure worse than the disease? overfitting in automated program repair",136
"Responsive designs in a snap",8
"CLOTHO: saving programs from malformed strings and incorrect string-handling",4
"Query-based configuration of text retrieval solutions for software engineering tasks",24
"Information retrieval and spectrum based bug localization: better together",63
"Rule-based extraction of goal-use case models from text",8
"Symbolic execution of programs with heap inputs",18
"Automatically deriving pointer reference expressions from binary code for memory dump analysis",4
"Summarizing and measuring development activity",23
"A method to identify and correct problematic software activity data: exploiting capacity constraints and data redundancies",5
"Gamification for enforcing coding conventions",12
"String analysis for Java and Android applications",31
"Auto-completing bug reports for Android applications",48
"CLAPP: characterizing loops in Android applications",31
"TLV: abstraction through testing, learning, and validation",9
"Mimic: computing models for opaque code",19
"Witness validation and stepwise testification across software verifiers",43
"Efficient and reasonable object-oriented concurrency",19
"FlexJava: language support for safe and modular approximate programming",40
"Getting to know you: towards a capability model for Java",6
"Efficient dependency detection for safe Java test acceleration",26
"Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing",30
"Guided differential testing of certificate validation in SSL/TLS implementations",29
"Quality and productivity outcomes relating to continuous integration in GitHub",141
"Developer onboarding in GitHub: the role of prior social links and language experience",47
"Impact of developer turnover on quality in open-source software",37
"MultiSE: multi-path symbolic execution using value summaries",69
"Assertion guided symbolic execution of multithreaded programs",30
"Iterative distribution-aware sampling for probabilistic symbolic execution",11
"Bespoke tools: adapted to the concepts developers know",
"I heart hacker news: expanding qualitative research findings by analyzing social news websites",
"GitSonifier: using sound to portray developer conflict history",
"Automatically recommending test code examples to inexperienced developers",
"Using software theater for the demonstration of innovative ubiquitous applications",
"Inner oracles: input-specific assertions on internal states",
"Targeted program transformations for symbolic execution",
"Crash reproduction via test case mutation: let existing test cases help",
"RDIT: race detection from incomplete traces",
"TACO: test suite augmentation for concurrent programs",
"Navigating through the archipelago of refactorings",
"Detecting semantic merge conflicts with variability-aware execution",
"Product lines can jeopardize their trade secrets",
"JSketch: sketching for Java",
"Don't panic: reverse debugging of kernel drivers",
"UMTG: a toolset to automatically generate system test cases from use case specifications",
"DexterJS: robust testing platform for DOM-based XSS vulnerabilities",
"T3i: a tool for generating and querying test suites for Java",
"iTrace: enabling eye tracking on software artifacts within the IDE to support software engineering tasks",
"Nyx: a display energy optimizer for mobile web apps",
"NARCIA: an automated tool for change impact analysis in natural language requirements",
"Commit guru: analytics and risk prediction of software commits",
"OSSMETER: a software measurement platform for automatically analysing open source software projects",
"Comprehensive service matching with MatchBox",
"UEDashboard: awareness of unusual events in commit histories",
"MatrixMiner: a red pill to architect informal product descriptions in the matrix",
"Predicting field reliability",
"REMI: defect prediction for efficient API testing",
"OnSpot system: test impact visibility during code edits in real software",
"Products, developers, and milestones: how should I build my N-Gram language model",
"Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering",
"Barriers and enablers for shortening software development lead-time in mechatronics organizations: a case study",
"Semantic degrees for Industrie 4.0 engineering: deciding on the degree of semantic formalization to select appropriate technologies",
"Towards automating the security compliance value chain",
"Requirements, architecture, and quality in a mission critical system: 12 lessons learned",
"Decentralized self-adaptation in large-scale distributed systems",
"Vehicle level continuous integration in the automotive industry",
"Quantifying architectural debts",
"User-centric security: optimization of the security-usability trade-off",
"Automated unit test generation for evolving software",
"Increasing the efficiency of search-based unit test generation using parameter control",
"Enhancing Android application bug reporting",
"Improving energy consumption in Android apps",
"Automated generation of programming language quizzes",
"Spotting familiar code snippet structures for program comprehension",
"Combining eye tracking with navigation paths for identification of cross-language code dependencies",
"A textual domain specific language for requirement modelling",
"Automated attack surface approximation",
"Pockets: a tool to support exploratory programming for novices and educators",
"Reflections on the REST architectural style and ""principled design of the modern web architecture"" (impact paper award)",
"A fast causal profiler for task parallel programs",7
"On the scalability of Linux kernel maintainers' work",3
"Modeling and verification of evolving cyber-physical spaces",15
"Easy over hard: a case study on deep learning",51
"Finding near-optimal configurations in product lines by random sampling",22
"Revisiting unsupervised learning for defect prediction",25
"Loopster: static loop termination analysis",1
CodeCarbonCopy,11
"The power of ""why"" and ""why not"": enriching scenario exploration with provenance",14
"Where is the bug and how is it fixed? an experiment with practitioners",2
"Understanding misunderstandings in source code",11
"Measuring neural efficiency of program comprehension",22
"Bayesian specification learning for finding API usage errors",20
"Synergistic debug-repair of heap manipulations",
"Failure-directed program trimming",6
"Why modern open source projects fail",33
"Trade-offs in continuous integration: assurance, security, and flexibility",45
"µDroid: an energy-aware mutation testing framework for Android",
"PATDroid: permission-aware GUI testing of Android",15
"Enabling mutation testing for Android apps",29
"Guided, stochastic model-based GUI testing of Android apps",48
"Using bad learners to find good configurations",31
"Attributed variability models: outside the comfort zone",11
"Kmax: finding all configurations of Kbuild makefiles statically",6
"Is there a mismatch between real-world feature models and product-line research?",15
"Adaptively generating high quality fixes for atomicity violations",2
"AtexRace: across thread and execution sampling for in-house race detection",0
"Symbolic execution of programmable logic controller code",9
"Thread-modular static analysis for relaxed memory models",7
"ARTINALI: dynamic invariant detection for cyber-physical system security",4
"A symbolic justice violations transition system for unrealizable GR(1) specifications",4
"Automated control of multiple software goals using multiple actuators",12
"Why do developers use trivial packages? an empirical case study on npm",28
"Detecting missing information in bug descriptions",22
"Continuous variable-specific resolutions of feature interactions",7
"Model-level, platform-independent debugging in the context of the model-driven development of real-time systems",12
"Cooperative kernels: GPU multitasking for blocking algorithms",8
"Toward full elasticity in distributed static analysis: the case of callgraph analysis",6
"Probabilistic model checking of perturbed MDPs with applications to cloud computing",3
"Understanding the impact of refactoring on smells: a longitudinal study of 23 software projects",9
"Cimplifier: automatically debloating containers",11
"Craig vs. Newton in software model checking",5
"Fairness testing: testing software for discrimination",46
"The care and feeding of wild-caught mutants",22
"QTEP: quality-aware test case prioritization",19
"Constraint normalization and parameterized caching for quantitative program analysis",3
"Generalized observational slicing for tree-represented modelling languages",6
"On evidence preservation requirements for forensic-ready systems",1
"BDCI: behavioral driven conflict identification",0
"NoFAQ: synthesizing command repairs from examples",8
"S3: syntax- and semantic-guided repair synthesis via programming by examples",75
"Counterexample-guided approach to finding numerical invariants",10
"Discovering relational specifications",10
"Steelix: program-state based binary fuzzing",63
"CodeMatch: obfuscation won't conceal your repackaged app",19
"A compiler and verifier for page access oblivious computation",8
"Automatic generation of inter-component communication exploits for Android applications",14
"OASIS: prioritizing static analysis warnings for Android apps based on app user reviews",5
"Recovering clear, natural identifiers from obfuscated JS names",21
"DESCRY: reproducing system-level concurrency failures",7
"Reproducing concurrency failures from crash stacks",10
"Automatically analyzing groups of crashes for finding correlations",4
"Automatic inference of code transforms for patch generation",54
"A feasibility study of using automated program repair for introductory programming assignments",23
"Automatically diagnosing and repairing error handling bugs in C",13
"Are deep neural networks the best choice for modeling source code?",62
"Understanding the impact of support for iteration on code search",5
"LAMP: data provenance for graph based machine learning algorithms through derivative computation",3
"More accurate recommendations for method-level changes",2
"Regression test selection across JVM boundaries",13
"Measuring the cost of regression testing in practice: a study of Java projects using continuous integration",25
"Better test cases for better automated program repair",34
"When program analysis meets mobile security: an industrial study of misusing Android internet sockets",
"File-level vs. module-level regression test selection for .NET",
"Record and replay for Android: are we there yet in industrial cases?",
"Model-driven software engineering in practice: privacy-enhanced filtering of network traffic",
"Strong agile metrics: mining log data to determine predictive power of software metrics for continuous delivery teams",
"Screening heuristics for project gating systems",
"Natural language querying in SAP-ERP platform",
"Serverless computing: economic and architectural impact",
"What do software engineers care about? gaps between research and practice",
"Reference architectures and Scrum: friends or foes?",
"Guidelines for adopting frontend architectures and patterns in microservices-based systems",
"Improving understanding of dynamically typed software developed by agile practitioners",
"Automated identification of security issues from commit messages and bug reports",
"LaChouTi: kernel vulnerability responding framework for the fragmented Android devices",
"Applying deep learning based automatic bug triager to industrial projects",
"Static analysis for optimizing big data queries",
"Automated testing of hybrid Simulink/Stateflow controllers: industrial case studies",
"QEMU-based framework for non-intrusive virtual machine instrumentation and introspection",
"RunDroid: recovering execution call graphs for Android applications",
"RGSE: a regular property guided symbolic executor for Java",
"A tool for automated reasoning about traces based on configurable formal semantics",
"VART: a tool for the automatic detection of regression faults",
"DynAlloy analyzer: a tool for the specification and analysis of alloy models with dynamic behaviour",
"From scenario modeling to scenario programming for reactive systems with dynamic topology",
"CLTSA: labelled transition system analyser with counting fluent support",
"The MONDO collaboration framework: secure collaborative modeling over existing version control systems",
"Model-based privacy and security analysis with CARiSMA",
"Cherry-picking of code commits in long-running, multi-release software",
"ARCC: assistant for repetitive code comprehension",
"JoanAudit: a tool for auditing common injection vulnerabilities",
"XSearch: a domain-specific cross-language relevant question retrieval tool",
"Using search-based software engineering to handle the changes with uncertainties for self-adaptive systems",
"DRACO: discovering refactorings that improve architecture using fine-grained co-change dependencies",
"User- and analysis-driven context aware software development in mobile computing",
"Recommender system for model driven software development",
"On the similarity of software development documentation",
"Application of search-based software engineering methodologies for test suite optimization and evolution in mission critical mobile application development",
"Summarizing software engineering communication artifacts from different sources",
"Model-based dynamic software project scheduling",
"System performance optimization via design and configuration space exploration",
"Suggesting meaningful variable names for decompiled code: a machine translation approach",
"Practical symbolic verification of regular properties",
"FOSS version differentiation as a benchmark for static analysis security testing tools",
"DecisionDroid: a supervised learning-based system to identify cloned Android applications",
"Reasons and drawbacks of using trivial npm packages: the developers' perspective",
"Detecting wearable app permission mismatches: a case study on Android wear",
"Automating traceability link recovery through classification",
"Improving performance of automatic program repair using learned heuristics",
"Ten years of hunting for similar code for fun and profit (keynote)",
"CloudRaid: hunting concurrency bugs in the cloud via log-mining",2
"Testing multithreaded programs via thread speed control",1
"Data race detection on compressed traces",2
"Practical AJAX race detection for JavaScript web applications",
"Using finite-state models for log differencing",1
"Identifying impactful service system problems via log analysis",2
"Learning to sample: exploiting similarities across environments to learn performance models for configurable systems",7
"Performance comprehension at WiredTiger",0
"MemFix: static analysis-based repair of memory deallocation errors for C",3
"RefiNym: using names to refine types",1
"Darwinian data structure selection",4
"Scalability-first pointer analysis with self-tuning context-sensitivity",5
"DeepSim: deep learning code functional similarity",6
"Deep learning type inference",6
"Code vectors: understanding programs through embedded abstracted symbolic traces",13
"MODE: automated neural network model debugging via state differential analysis and input selection",3
"Towards a theory of software development expertise",
"What makes a code change easier to review: an empirical investigation on code change reviewability",5
"Singularity: pattern fuzzing for worst case complexity",3
"Bug synthesis: challenging bug-finding tools with deep faults",3
"Modify, enhance, select: co-evolution of combinatorial models and test plans",1
"The impact of regular expression denial of service (ReDoS) in practice: an empirical study at the ecosystem scale",2
"FraudDroid: automated ad fraud detection for Android apps",8
"AppFlow: using machine learning to synthesize robust, reusable UI tests",0
"Winning the app production rally",4
"One size does not fit all: an empirical study of containerized continuous deployment workflows",1
"Be careful of when: an empirical study on time-related misuse of issue tracking data",2
"Do the dependency conflicts in my project matter?",4
"Do Android taint analysis tools keep their promises?",6
"Neural-augmented static analysis of Android communication",2
"Oreo: detection of clones in the twilight zone",13
"Concurrency verification with maximal path causality",0
"Adversarial symbolic execution for detecting concurrency-related cache timing leaks",5
"Symbolic execution with existential second-order constraints",5
"Parameterized model counting for string and numeric constraints",1
"NAR-miner: discovering negative association rules from code for bug detection",0
"Path-based function embedding and its application to error-handling specification mining",6
"Putback-based bidirectional model transformations",0
"Model transformation languages under a magnifying glass: a controlled experiment with Xtend, ATL, and QVT",1
"Applications of psychological science for actionable analytics",6
"A novel automated approach for software effort estimation based on data augmentation",2
"Predicting Node failure in cloud service systems",2
"Detecting speech act types in developer question/answer conversations during bug repair",3
"Visual web test repair",7
"Syntax-guided synthesis of Datalog programs",9
"Large-scale study of substitutability in the presence of effects",0
"An empirical study on crash recovery bugs in large-scale distributed systems",3
"Complementing global and local contexts in representing API descriptions to improve API retrieval tasks",2
"Phys: probabilistic physical unit assignment and inconsistency detection",0
"Testing probabilistic programming systems",2
"Verifying the long-run behavior of probabilistic system models in the presence of uncertainty",0
"Automated patch extraction via syntax- and semantics-aware Delta debugging on source code changes",2
"Feedback-directed differential testing of interactive debuggers",1
"Improving IR-based bug localization with context-aware query reformulation",7
"How should compilers explain problems to developers?",2
"Ecosystem-level determinants of sustained activity in open-source projects: a case study of the PyPI ecosystem",5
"Optimizing test prioritization via test distribution analysis",1
"How well are regular expressions tested in the wild?",5
"Which generated test failures are fault revealing? prioritizing failures based on inferred precondition violations using PAF",0
"Detection of energy inefficiencies in Android wear watch faces",1
"Stochastic energy optimization for mobile GPS applications",2
"Gamifying static analysis",
"The case for experiment-oriented computing",
"On the naturalness of proofs",
"Does ACM’s code of ethics change ethical decision making in software development?",
"How are spreadsheet templates used in practice: a case study on Enron",
"DLFuzz: differential fuzzing testing of deep learning systems",
"Towards data-driven vulnerability prediction for requirements",
"Beyond testing configurable systems: applying variational execution to automatic program repair and higher order mutation testing",
"Software fairness",
"Software engineering collaboratories (SEClabs) and collaboratories as a service (CaaS)",
"Towards counterexample-guided k-induction for fast bug detection",
"Salient-class location: help developers understand code change in code review",
"Towards quantifying the development value of code contributions",
"Operationalizing human values in software: a research roadmap",
"Modeling and testing a family of surgical robots: an experience report",
"Efficient static checking of library updates",
"Are mobile banking apps secure? what can be improved?",
"VulSeeker-pro: enhanced semantic learning based binary vulnerability seeker with emulation",
"PAFL: extend fuzzing optimizations of single mode to industrial parallel mode",
"Software development challenges with air-gap isolation",
"Design and validation of precooked developer dashboards",
"Testing and validating end user programmed calculated fields",
"Automated refactoring of nested-IF formulae in spreadsheets",
"FACTS: automated black-box testing of FinTech systems",
"Regression test selection for TizenRT",
"Building lean continuous integration and delivery pipelines by applying DevOps principles: a case study at Varidesk",
"The impact of failing, flaky, and high failure tests on the number of crash reports associated with Firefox builds",
"BigSift: automated debugging of big data analytics in data-intensive scalable computing",
"FOT: a versatile, configurable, extensible fuzzing framework",
"Themis: automatically testing software for discrimination",
"Vista: web test repair using computer vision",
"Augmenting stack overflow with API usage patterns mined from GitHub",
"PowerStation: automatically detecting and fixing inefficiencies of database-backed web applications in IDE",
"SketchFix: a tool for automated program repair approach using lazy candidate generation",
"WarningsGuru: integrating statistical bug models with static analysis to provide timely and specific bug warnings",
"DSM: a specification mining tool using recurrent neural network based language model",
"EClone: detect semantic clones in Ethereum via symbolic transaction sketch",
"INFAR: insight extraction from app reviews",
"PyDriller: Python framework for mining software repositories",
"A formal verification tool for Ethereum VM bytecode",
"ASketch: a sketching framework for Alloy",
"AlloyInEcore: embedding of first-order relational logic into meta-object facility for automated model reasoning",
"VT-revolution: interactive programming tutorials made possible",
"Practices and tools for better software testing",
"Automated support for mobile application testing and maintenance",
"Moving towards objective measures of program comprehension",
"Semantic inference from natural language privacy policies and Android code",
"Intelligent bug fixing with software bug knowledge graph",
"Quality assurance automation in autonomous systems",
"How do developers resolve merge conflicts? an investigation into the processes, tools, and improvements",
"Automated scenario-based integration testing of distributed systems",
"Towards learning-augmented languages",
"On the adoption of neural networks in modeling software reliability",
"Type migration in large-scale code bases",
"Reshaping distributed agile and adaptive development environment",
"How Dance(Sport) can help to produce better software",
"Feature-interaction aware configuration prioritization",
"Dara: hybrid model checking of distributed systems",
"Bugs in the wild: examining the effectiveness of static analyzers at finding real-world bugs",
"Mining error-handling specifications for systems software",
"Diversity and decorum in open source communities",
"Runtime Fault Detection in Programmed Molecular Systems",3
"Understanding and Analyzing Java Reflection",
"Domain Analysis and Description Principles, Techniques, and Modelling Languages",
"Status Quo in Requirements Engineering: A Theory and a Global Family of Surveys",
"Isolation Modeling and Analysis Based on Mobility",
"How Understandable Are Pattern-based Behavioral Constraints for Novice Software Designers?",
"Oracles for Testing Software Timeliness with Uncertainty",0
"The State of Empirical Evaluation in Static Feature Location",4
"RESTful API Automated Test Case Generation with EvoMaster",3
"An Active Learning Approach for Improving the Accuracy of Automated Domain Model Extraction",0
"Software Effort Interval Prediction via Bayesian Inference and Synthetic Bootstrap Resampling",
"Test-Equivalence Analysis for Automatic Patch Generation",5
"Recommending Who to Follow in the Software Engineering Twitter Space",2
"Refactoring Multi-Level Models",2
"Variability-Aware Static Analysis at Scale: An Empirical Study",3
"Shadow Symbolic Execution for Testing Software Patches",1
"The ABC of Software Engineering Research",7
"Linear Programming as a Baseline for Software Effort Estimation",7
"Spectrum-Based Fault Localization in Model Transformations",2
"Multi-Objective Optimization of Energy Consumption of GUIs in Android Apps",2
"FEMOSAA: Feature-Guided and Knee-Driven Multi-Objective Optimization for Self-Adaptive Software",7
"Prove it! Inferring Formal Proof Scripts from CafeOBJ Proof Scores",0
"STADS: Software Testing as Species Discovery",3
"Maintaining Architecture-Implementation Conformance to Support Architecture Centrality: From Single System to Product Line Development",4
"How Far We Have Progressed in the Journey? An Examination of Cross-Project Defect Prediction",13
"Assessing the Refactoring of Brain Methods",0
"An Empirical Study of Meta- and Hyper-Heuristic Search for Multi-Objective Release Planning",6
"Inferring Extended Probabilistic Finite-State Automaton Models from Software Executions",2
"Understanding and Combating Memory Bloat in Managed Data-Intensive Systems",4
"Detecting the Behavior of Design Patterns through Model Checking and Dynamic Analysis",6
"Configuring Software Product Lines by Combining Many-Objective Optimization and SAT Solvers",10
"Global and Local Deadlock Freedom in BIP",3
"Variability Bugs in Highly Configurable Systems: A Qualitative Analysis",13
"Lightweight, Obfuscation-Resilient Detection and Family Identification of Android Malware",22
"Fixing Faults in C and Java Source Code: Abbreviated vs. Full-Word Identifier Names",4
"A Logic-Based Approach for the Verification of UML Timed Models",0
"Early Evaluation of Implementation Alternatives of Composite Data Structures Toward Maintainability",2
"Augmenting Field Data for Testing Systems Subject to Incremental Requirements Changes",4
"Ensuring the Consistency of Adaptation through Inter- and Intra-Component Dependency Analysis",1
"Predicting Query Quality for Applications of Text Retrieval to Software Engineering Tasks",13
"Human Competitiveness of Genetic Programming in Spectrum-Based Fault Localisation: Theoretical and Empirical Analysis",11
"Parallel Algorithms for Generating Distinguishing Sequences for Observable Non-deterministic FSMs",6
"Impact-Driven Process Model Repair",32
"Generating API Call Rules from Version History and Stack Overflow Posts",14
"Dynamic Dependence Summaries",1
"A Posteriori Typing for Model-Driven Engineering: Concepts, Analysis, and Applications",16
"Multi-Step Learning and Adaptive Search for Learning Complex Model Transformations from Examples",15
"Learning Weighted Assumptions for Compositional Verification of Markov Decision Processes",6
"Mining Privacy Goals from Privacy Policies Using Hybridized Task Recomposition",16
"Multi-Criteria Code Refactoring Using Search-Based Software Engineering: An Industrial Case Study",38
"Using Cohesion and Coupling for Software Remodularization: Is It Enough?",36
"The Effect of Program and Model Structure on the Effectiveness of MC/DC Test Adequacy Coverage",16
"Stochastic Performance Analysis of Global Software Development Teams",3
"Hierarchical Program Paths",4
"Understanding JavaScript Event-Based Interactions with Clematis",8
"Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects",23
"Concurrency Debugging with Differential Schedule Projections",22
"Control Explicit--Data Symbolic Model Checking",2
"Less is More: Estimating Probabilistic Rewards over Partial System Explorations",4
"SIP: Optimal Product Selection from Feature Models Using Many-Objective Evolutionary Optimization",50
"DiaPro: Unifying Dynamic Impact Analyses for Improved and Variable Cost-Effectiveness",6
"A Stack Memory Abstraction and Symbolic Analysis Framework for Executables",4
"Understanding Integer Overflow in C/C++",141
"Intelligent Code Completion with Bayesian Networks",27
"Combining Genetic Algorithms and Constraint Programming to Support Stress Testing of Task Deadlines",16
"Do Automatically Generated Test Cases Make Debugging Easier? An Experimental Assessment of Debugging Effectiveness and Efficiency",18
"Test Case Prioritization Using Extended Digraphs",6
"Boa: Ultra-Large-Scale Software Repository and Source-Code Mining",44
"The Effectiveness of Test Coverage Criteria for Relational Database Schema Integrity Constraints",17
"Type-Based Call Graph Construction Algorithms for Scala",6
"Estimating Semantic Relatedness in Source Code",13
"Guidelines for Coverage-Based Comparisons of Non-Adequate Test Suites",19
"Does Automated Unit Test Generation Really Help Software Testers? A Controlled Empirical Study",42
"Effective Techniques for Static Race Detection in Java Parallel Loops",9
"Data Model Property Inference, Verification, and Repair for Web Applications",3
"Automated Support for Reproducing and Debugging Field Failures",5
"aToucan: An Automated Framework to Derive UML Analysis Models from Use Case Models",48
"Documenting Design-Pattern Instances: A Family of Experiments on Source-Code Comprehensibility",19
"Deciding Type-Based Partial-Order Constraints for Path-Sensitive Analysis",1
"Automatic Workarounds: Exploiting the Intrinsic Redundancy of Web Applications",13
"Many-Objective Software Remodularization Using NSGA-III",96
"Software Change Contracts",8
"Platys: An Active Learning Framework for Place-Aware Application Development and Its Evaluation",24
"A Baseline Model for Software Effort Estimation",45
"Residual Investigation: Predictive and Precise Bug Detection",15
"A Large-Scale Evaluation of Automated Unit Test Generation Using EvoSuite",81
"Conditional Commitments: Reasoning and Model Checking",14
"A Unified Test Case Prioritization Approach",61
"Formal Verification of Software Countermeasures against Side-Channel Attacks",29
"When and How to Use Multilevel Modelling",86
"Assessing the Effect of Screen Mockups on the Comprehension of Functional Requirements",25
"A Continuous ASM Modelling Approach to Pacemaker Sensing",9
"Directed Incremental Symbolic Execution",21
"Mining Unit Tests for Discovery and Migration of Math APIs",4
"Combining Centralised and Distributed Testing",11
"Code-Smell Detection as a Bilevel Problem",44
"Automated Detection of Client-State Manipulation Vulnerabilities",16
"DIG: A Dynamic Invariant Generator for Polynomial and Array Invariants",20
"On the Comprehension of Program Comprehension",98
"Amplifying Tests to Validate Exception Handling Code: An Extended Study in the Mobile Application Domain",59
"Some Code Smells Have a Significant but Small Effect on Faults",77
"Scaling Up Symbolic Analysis by Removing Z-Equivalent States",5
"Peer Review on Open-Source Software Projects: Parameters, Statistical Models, and Theory",52
"Generating Test Cases for Programs that Are Coded against Interfaces and Annotations",11
"A Methodology for Exposing Risk in Achieving Emergent System Properties",5
"Scalable Runtime Bloat Detection Using Abstract Dynamic Slicing",17
"GreASE: A Tool for Efficient “Nonequivalence” Checking",
"Architecture-Level Configuration of Large-Scale Embedded Software Systems",10
"Solving the Search for Source Code",65
"Guided test generation for database applications via synthesized database interactions",30
"On the impact of UML analysis models on source-code comprehensibility and modifiability",31
"Degree-of-knowledge: Modeling a developer's knowledge of code",43
"Required behavior of sequence diagrams: Semantics and conformance",9
"A taxonomy for requirements engineering and software test alignment",
"ADAM: External dependency-driven architecture discovery and analysis of quality attributes",3
"Key factors for adopting inner source",47
"Exact scalable sensitivity analysis for the next release problem",24
"Dynamite: A tool for the verification of alloy models based on PVS",6
"Architecture-centric support for adaptive service collaborations",23
"Automated cookie collection testing",12
"Improving software modularization via automated analysis of latent topics and dependencies",88
"Do we need to handle every temporal violation in scientific workflow systems?",57
"Model-based synthesis of control software from system-level formal specifications",22
"Join point interfaces for safe and flexible decoupling of aspects",45
"Prevalence of coincidental correctness and mitigation of its impact on fault localization",50
"Traceability and SysML design slices to support safety inspections: A controlled experiment",46
"An in-depth study of the potentially confounding effect of class size in fault prediction",39
"Test-and-adapt: An approach for improving service interchangeability",11
"A methodology for testing CPU emulators",7
"Exception handlers for healing component-based systems",11
"A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization",185
"Path exploration based on symbolic output",45
"Path- and index-sensitive string analysis based on monadic second-order logic",69
"On software component co-installability",31
"Software effort estimation as a multiobjective learning problem",73
"A web-centred approach to end-user software engineering",8
"Portfolio: Searching for relevant functions and their usages in millions of lines of code",54
"Evaluating a query framework for software evolution data",10
"Precise memory leak detection for java software using container profiling",13
"Marple: Detecting faults in path segments using automatically generated analyses",4
"Fault localization prioritization: Comparing information-theoretic and coverage-based approaches",74
"Bounded satisfiability checking of metric temporal logic specifications",42
"The value of design rationale information",39
"Trading obliviousness for modularity with cooperative aspect-oriented programming",9
"An algebra of design patterns",33
"Finite satisfiability of UML class diagrams with constrained class hierarchy",29
"Enabledness-based program abstractions for behavior validation",17
"Using a functional size measurement procedure to evaluate the quality of models in MDD environments",9
"Use case and task models: An integrated development methodology and its formal foundation",10
"ConMem: Detecting Crash-Triggering Concurrency Bugs through an Effect-Oriented Approach",15
"Business Process Model Merging: An Approach to Business Process Consolidation",216
"Personalized Reliability Prediction of Web Services",78
"Automated Comparison of State-Based Software Models in Terms of Their Language and Structure",18
"An Information Foraging Theory Perspective on Tools for Debugging, Refactoring, and Reuse Tasks",55
"Verification across Intellectual Property Boundaries",5
"Modeling and verifying hierarchical real-time systems using stateful timed CSP",66
"Views: Synthesizing fine-grained concurrency control",
"Facilitating the transition from use case models to analysis models: Approach and experiments",99
"Achieving scalable model-based testing through test case diversity",148
"Detecting missing method calls as violations of the majority rule",23
"Scaling predictive analysis of concurrent programs by removing trace redundancy",20
"Synthesizing nonanomalous event-based controllers for liveness goals",47
"Systematizing pragmatic software reuse",85
"A formal model for automated software modularity and evolvability analysis",6
"Validation of requirements for hybrid systems: A formal approach",34
"Concept location using formal concept analysis and information retrieval",88
"Validating software metrics: A spectrum of philosophies",75
"HAMPI: A solver for word equations over strings, regular expressions, and context-free grammars",42
"Type checking annotation-based product lines",146
"A framework for the checking and refactoring of crosscutting concepts",2
"A logical verification methodology for service-oriented computing",41
"Accounting for defect characteristics in evaluations of testing techniques",20
"A two-phase approximation for model checking probabilistic unbounded until properties of probabilistic systems",4
"DARWIN: An approach to debugging evolving programs",20
"A Precise Method-Method Interaction-Based Cohesion Metric for Object-Oriented Classes",109
"Weak Alphabet Merging of Partial Behavior Models",26
"An Approach for Modeling Architectural Design Rules in UML and its Application to Embedded Software",16
"A Generative Programming Framework for Context-Aware CSCW Applications",17
"Symbolic Message Sequence Charts",
"Verification and Validation of UML Conceptual Schemas with OCL Constraints",67
"Feasibility of Stepwise Design of Multitolerant Programs",12
"QVM: An Efficient Runtime for Detecting Defects in Deployed Systems",30
"Expressive and Extensible Parameter Passing for Distributed Object Systems",3
"How Well Do Search Engines Support Code Retrieval on the Web?",54
"Lattice-Based Sampling for Path Property Monitoring",2
"The Choice Calculus: A Representation for Software Variation",126
"Runtime Verification for LTL and TLTL",441
"The Minimal Failure-Causing Schema of Combinatorial Testing",56
"Discovering Multidimensional Correlations among Regulatory Requirements to Understand Risk",13
"Gaia-PL: A Product Line Engineering Approach for Efficiently Designing Multiagent Systems",18
"A Compiler for Multimodal Scenarios: Transforming LSCs into AspectJ",21
"Recommending Adaptive Changes for Framework Evolution",199
"PrIMe: A methodology for developing provenance-aware applications",76
"Temporal dependency-based checkpoint selection for dynamic verification of temporal constraints in scientific workflow systems",76
"Reducing the effort of bug report triage: Recommenders for development-oriented decisions",208
"A model for spectra-based software diagnosis",283
"FlagRemover: A testability transformation for transforming loop-assigned flags",22
"A revisit of fault class hierarchies in general boolean specifications",34
"Extracting and answering why and why not questions about Java program output",43
"Modular aspect-oriented design with XPIs",56
"The small-world effect: The influence of macro-level properties of developer collaboration networks on open-source project success",97
"Supporting dynamic aspect-oriented features",14
"Types and modularity for implicit invocation with implicit announcement",89
"Method and developer characteristics for effective agile method tailoring: A study of XP expert opinion",122
"Clone region descriptors: Representing and tracking duplication in source code",82
"Analysis and applications of timed service protocols",33
"Semantic self-assessment of query results in dynamic environments",15
"A verification system for interval-based specification languages",9
"Synthesizing hierarchical state machines from expressive scenario descriptions",54
"Partial constraint checking for context consistency in pervasive computing",73
"Design and implementation of Sator: A web service aggregator",6
"Conceptual data model-based software size estimation for information systems",37
"Measuring the strength of information flows in programs",44
"Amoeba: A methodology for modeling and evolving cross-organizational business processes",100
"J-Orchestra: Enhancing Java programs with distribution capabilities",59
"From business process models to process-oriented software systems",241
"Unifying aspect- and object-oriented design",27
"Interacting process classes",14
"Verdict functions in testing with a fault domain or test hypotheses",20
"Programming pervasive and mobile computing applications: The TOTA approach",212
"Composing expressive runtime security policies",50
"A systematic review of theory use in studies investigating the motivations of software engineers",
"Empirical evaluation of a nesting testability transformation for evolutionary testing",55
"Tools and experiments supporting a testing-based theory of component composition",21
"Online inference and enforcement of temporal properties",101
"Quality of service profiling",219
"Collaborative reliability prediction of service-oriented systems",261
"A discriminative model approach for accurate duplicate bug report retrieval",230
"Has the bug really been fixed?",81
"An exploratory study of fault-proneness in evolving aspect-oriented programs",61
"Archface: a contract place where architectural design and code meet together",70
"Developing next generation ADLs through MDE techniques",45
"Software traceability with topic modeling",285
"An analysis of the variability in forty preprocessor-based software product lines",268
"A large-scale empirical study of practitioners' use of object-oriented concepts",28
"Codebook: discovering and exploiting relationships in software repositories",209
"Liability in software engineering: overview of the LISE approach and illustration on a case study",20
"An exploratory study of the evolution of software licensing",73
"A machine learning approach for tracing regulatory codes to product specific requirements",158
"Supporting developers with natural language queries",56
"Using information fragments to answer the questions developers ask",164
"Developers ask reachability questions",129
"Mining API mapping for language migration",113
"Using twinning to adapt programs to alternative APIs",70
"Oracle-guided component-based program synthesis",327
"Test generation through programming in UDITA",148
"Detecting atomic-set serializability violations in multithreaded programs through active randomized testing",85
"Falcon: fault localization in concurrent programs",133
"Adaptive bug isolation",62
"Practical fault localization for dynamic web applications",91
"Moving into a new software project landscape",115
"Organizing self-organizing teams",119
"StakeNet: using social networks to analyse the stakeholders of large-scale software projects",125
"Identifying crosscutting concerns using historical code changes",54
"Recurring bug fixes in object-oriented programs",118
"AURA: a hybrid approach to identify framework evolution",115
"Model checking lots of systems: efficient verification of temporal properties in software product lines",308
"A cut-off approach for bounded verification of parameterized systems",20
"An empirical study of optimizations in YOGI",28
"Awareness 2.0: staying aware of projects, developers and tasks using dashboards and feeds",116
"Linking e-mails and source code artifacts",150
"A degree-of-knowledge model to capture source code familiarity",111
"Views: object-inspired concurrency control",16
"Engineering parallel applications with tunable architectures",24
"DETERMIN: inferring likely deterministic specifications of multithreaded programs",21
"From behaviour preservation to behaviour modification: constraint-based mutant generation",10
"Is operator-based mutant selection superior to random mutant selection?",96
"Using symbolic evaluation to understand behavior in configurable software systems",109
"Code bubbles: rethinking the user interface paradigm of integrated development environments",137
"Customized awareness: recommending relevant external change events",61
"A search engine for finding highly relevant applications",131
"An empirical study of reported bugs in server software with implications for automated bug diagnosis",58
"Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows",221
"Summarizing software artifacts: a case study of bug reports",142
"LEAKPOINT: pinpointing the causes of memory leaks",78
"Precise calling context encoding",
"Effective interprocedural resource leak detection",51
"Measuring complexity, effectiveness and efficiency in software course projects",14
"Advanced hands-on training for distributed and outsourced software engineering",
"A HOT --- Human, Organizational and Technological --- framework for a software engineering course",
"An empirical analysis of team review approaches for teaching quality software development",2
"An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model",60
"The educational value of mapping studies of software engineering literature",
"Towards contextualised software engineering education: an African perspective",21
